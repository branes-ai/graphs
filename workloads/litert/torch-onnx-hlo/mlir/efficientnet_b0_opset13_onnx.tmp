module attributes {llvm.data_layout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-pc-windows-msvc", "onnx-mlir.symbol-postfix" = "efficientnet_b0_opset13_onnx"} {
  func.func @main_graph(%arg0: tensor<?x3x224x224xf32> {onnx.dim_params = "0:batch_size", onnx.name = "input"}) -> (tensor<?x1000xf32> {onnx.dim_params = "0:batch_size", onnx.name = "output"}) {
    %0 = onnx.Constant dense<1280> : tensor<1xi64>
    %1 = onnx.Constant dense<320> : tensor<1xi64>
    %2 = onnx.Constant dense<48> : tensor<1xi64>
    %3 = onnx.Constant dense<1152> : tensor<1xi64>
    %4 = onnx.Constant dense<192> : tensor<1xi64>
    %5 = onnx.Constant dense<7> : tensor<1xi64>
    %6 = onnx.Constant dense<672> : tensor<1xi64>
    %7 = onnx.Constant dense<20> : tensor<1xi64>
    %8 = onnx.Constant dense<480> : tensor<1xi64>
    %9 = onnx.Constant dense<80> : tensor<1xi64>
    %10 = onnx.Constant dense<14> : tensor<1xi64>
    %11 = onnx.Constant dense<10> : tensor<1xi64>
    %12 = onnx.Constant dense<240> : tensor<1xi64>
    %13 = onnx.Constant dense<40> : tensor<1xi64>
    %14 = onnx.Constant dense<28> : tensor<1xi64>
    %15 = onnx.Constant dense<6> : tensor<1xi64>
    %16 = onnx.Constant dense<144> : tensor<1xi64>
    %17 = onnx.Constant dense<24> : tensor<1xi64>
    %18 = onnx.Constant dense<56> : tensor<1xi64>
    %19 = onnx.Constant dense<4> : tensor<1xi64>
    %20 = onnx.Constant dense<96> : tensor<1xi64>
    %21 = onnx.Constant dense<16> : tensor<1xi64>
    %22 = onnx.Constant dense<112> : tensor<1xi64>
    %23 = onnx.Constant dense<8> : tensor<1xi64>
    %24 = onnx.Constant dense<1> : tensor<1xi64>
    %25 = onnx.Constant dense<32> : tensor<1xi64>
    %26 = onnx.Constant dense<1280> : tensor<1xi64>
    %27 = onnx.Constant dense_resource<__elided__> : tensor<1x1280x1xf32>
    %28 = onnx.Constant dense_resource<__elided__> : tensor<1280x320xf32>
    %29 = onnx.Constant dense<320> : tensor<1xi64>
    %30 = onnx.Constant dense_resource<__elided__> : tensor<1x320x1xf32>
    %31 = onnx.Constant dense_resource<__elided__> : tensor<320x1152xf32>
    %32 = onnx.Constant dense<1152> : tensor<1xi64>
    %33 = onnx.Constant dense_resource<__elided__> : tensor<1x1152x1xf32>
    %34 = onnx.Constant dense_resource<__elided__> : tensor<1152x48xf32>
    %35 = onnx.Constant dense<48> : tensor<1xi64>
    %36 = onnx.Constant dense<[[[-0.108862147], [-0.136247441], [-0.152574763], [0.147995412], [-0.0851290225], [-0.120599046], [-0.0877996608], [-0.0818753764], [-0.0692528412], [-0.125189289], [-8.192650e-02], [-0.125973597], [-0.0999365225], [-0.10109923], [-0.133980364], [-0.0986729636], [-0.0938262119], [-0.110115692], [-0.106306896], [-0.090038143], [-0.0476615429], [-0.0674316436], [-0.137783781], [-0.10579358], [-0.101301409], [-0.139486149], [0.13246794], [-0.0325546265], [-0.118097216], [-0.0481383801], [-0.131481737], [-0.0542933159], [-0.0448516048], [-0.111298971], [-0.0852370187], [-0.133619621], [-0.0714607388], [-0.138216868], [-0.0614575036], [-0.0239349231], [-0.0826543793], [-0.132049561], [-0.102519773], [-0.124464735], [-0.135006502], [-0.0692711696], [-0.0762759075], [-0.0806430801]]]> : tensor<1x48x1xf32>
    %37 = onnx.Constant dense_resource<__elided__> : tensor<48x1152xf32>
    %38 = onnx.Constant dense<1152> : tensor<1xi64>
    %39 = onnx.Constant dense_resource<__elided__> : tensor<1x1152x1xf32>
    %40 = onnx.Constant dense_resource<__elided__> : tensor<1152x192xf32>
    %41 = onnx.Constant dense<192> : tensor<1xi64>
    %42 = onnx.Constant dense_resource<__elided__> : tensor<1x192x1xf32>
    %43 = onnx.Constant dense_resource<__elided__> : tensor<192x1152xf32>
    %44 = onnx.Constant dense<1152> : tensor<1xi64>
    %45 = onnx.Constant dense_resource<__elided__> : tensor<1x1152x1xf32>
    %46 = onnx.Constant dense_resource<__elided__> : tensor<1152x48xf32>
    %47 = onnx.Constant dense<48> : tensor<1xi64>
    %48 = onnx.Constant dense<[[[0.0142851667], [0.0556457415], [0.0705547929], [0.0109955827], [0.0621819384], [0.0280728824], [0.125023246], [0.0168037675], [0.0302733872], [0.0680157691], [0.131019816], [0.113632374], [0.0349309184], [0.0338297859], [0.0359929167], [0.219660282], [0.102925256], [0.00155034987], [0.0189755429], [0.0609634295], [0.0979732125], [0.20267044], [0.131607547], [0.103786878], [0.0690062195], [0.125121221], [-0.00242435536], [0.0476210192], [0.0643240586], [0.0167754143], [0.0371710099], [0.0610168912], [0.0070684608], [0.0529859141], [0.0492197163], [0.0492055602], [-0.00559087424], [0.0571816228], [0.0300010946], [3.393030e-02], [0.168413341], [0.119109504], [0.0891070291], [0.0712202638], [0.0345266722], [0.0470920242], [0.0776166617], [0.066946268]]]> : tensor<1x48x1xf32>
    %49 = onnx.Constant dense_resource<__elided__> : tensor<48x1152xf32>
    %50 = onnx.Constant dense<1152> : tensor<1xi64>
    %51 = onnx.Constant dense_resource<__elided__> : tensor<1x1152x1xf32>
    %52 = onnx.Constant dense_resource<__elided__> : tensor<1152x192xf32>
    %53 = onnx.Constant dense<192> : tensor<1xi64>
    %54 = onnx.Constant dense_resource<__elided__> : tensor<1x192x1xf32>
    %55 = onnx.Constant dense_resource<__elided__> : tensor<192x1152xf32>
    %56 = onnx.Constant dense<1152> : tensor<1xi64>
    %57 = onnx.Constant dense_resource<__elided__> : tensor<1x1152x1xf32>
    %58 = onnx.Constant dense_resource<__elided__> : tensor<1152x48xf32>
    %59 = onnx.Constant dense<48> : tensor<1xi64>
    %60 = onnx.Constant dense<[[[7.994920e-02], [0.0153511642], [0.0319328532], [0.0102101602], [0.0472052544], [0.040870592], [0.0964552909], [0.025257837], [0.0438170023], [0.00490761502], [0.0621188208], [0.0757705197], [0.0131371217], [0.0593887791], [0.0883483738], [-0.00189855241], [0.00463487953], [0.181045622], [0.0981227084], [-0.00262308447], [0.147117078], [0.037930727], [0.0545592047], [0.0562627316], [0.051353436], [0.0723414049], [0.0304706618], [-0.00301137217], [0.0870707258], [0.0648150519], [0.0889883264], [0.0770986974], [0.0251499861], [0.0920612215], [0.00584482774], [0.0410870276], [0.150417194], [0.0857436656], [0.0128635978], [0.0760421604], [0.0948313996], [0.0353571884], [0.0842772275], [0.0298512541], [0.0860041901], [0.0335626528], [0.0494909734], [0.114253841]]]> : tensor<1x48x1xf32>
    %61 = onnx.Constant dense_resource<__elided__> : tensor<48x1152xf32>
    %62 = onnx.Constant dense<1152> : tensor<1xi64>
    %63 = onnx.Constant dense_resource<__elided__> : tensor<1x1152x1xf32>
    %64 = onnx.Constant dense_resource<__elided__> : tensor<1152x192xf32>
    %65 = onnx.Constant dense<192> : tensor<1xi64>
    %66 = onnx.Constant dense_resource<__elided__> : tensor<1x192x1xf32>
    %67 = onnx.Constant dense_resource<__elided__> : tensor<192x1152xf32>
    %68 = onnx.Constant dense<1152> : tensor<1xi64>
    %69 = onnx.Constant dense_resource<__elided__> : tensor<1x1152x1xf32>
    %70 = onnx.Constant dense_resource<__elided__> : tensor<1152x48xf32>
    %71 = onnx.Constant dense<48> : tensor<1xi64>
    %72 = onnx.Constant dense<[[[-0.0340306424], [0.0368889421], [0.0169001333], [0.0666646808], [0.0144990189], [0.0223401263], [0.0853300318], [0.01140106], [0.107950538], [0.045619987], [-0.0042636916], [3.023370e-03], [0.0165096764], [-0.00568022672], [0.0678505823], [0.0649378151], [0.0284961183], [0.0181272905], [0.0744939074], [0.116417654], [0.0426201895], [0.0624031536], [0.0480217375], [0.0553974025], [0.00782712456], [4.125650e-02], [0.0279396083], [0.0140550453], [0.0569592938], [0.0472556576], [0.0505255349], [0.0763010755], [0.0255511533], [0.0183152352], [0.0263871178], [0.00139121676], [0.0597398058], [0.0326428413], [0.00630075159], [0.0959395393], [0.071605213], [0.0201786179], [0.0593706742], [0.00307495287], [0.107545689], [0.0221921094], [0.0608723313], [0.0444910191]]]> : tensor<1x48x1xf32>
    %73 = onnx.Constant dense_resource<__elided__> : tensor<48x1152xf32>
    %74 = onnx.Constant dense<1152> : tensor<1xi64>
    %75 = onnx.Constant dense_resource<__elided__> : tensor<1x1152x1xf32>
    %76 = onnx.Constant dense_resource<__elided__> : tensor<1152x192xf32>
    %77 = onnx.Constant dense<192> : tensor<1xi64>
    %78 = onnx.Constant dense_resource<__elided__> : tensor<1x192x1xf32>
    %79 = onnx.Constant dense_resource<__elided__> : tensor<192x672xf32>
    %80 = onnx.Constant dense<672> : tensor<1xi64>
    %81 = onnx.Constant dense_resource<__elided__> : tensor<1x672x1xf32>
    %82 = onnx.Constant dense_resource<__elided__> : tensor<672x28xf32>
    %83 = onnx.Constant dense<28> : tensor<1xi64>
    %84 = onnx.Constant dense<[[[-0.00174257404], [0.0267806929], [6.44805317E-4], [8.89057934E-4], [8.48915137E-4], [9.63265542E-4], [9.32985742E-4], [9.23400279E-4], [8.771340e-04], [0.0412685834], [2.97363964E-4], [-0.00120471825], [0.0211267956], [0.0271493308], [7.43653741E-4], [2.02779902E-5], [7.25027465E-4], [0.016552249], [8.61743697E-4], [8.78329331E-4], [0.0144806774], [0.00868859328], [-0.00737830112], [0.0082086781], [9.52950213E-4], [9.28181398E-4], [-6.21499494E-4], [0.0230628811]]]> : tensor<1x28x1xf32>
    %85 = onnx.Constant dense_resource<__elided__> : tensor<28x672xf32>
    %86 = onnx.Constant dense<672> : tensor<1xi64>
    %87 = onnx.Constant dense_resource<__elided__> : tensor<1x672x1xf32>
    %88 = onnx.Constant dense_resource<__elided__> : tensor<672x112xf32>
    %89 = onnx.Constant dense<112> : tensor<1xi64>
    %90 = onnx.Constant dense_resource<__elided__> : tensor<1x112x1xf32>
    %91 = onnx.Constant dense_resource<__elided__> : tensor<112x672xf32>
    %92 = onnx.Constant dense<672> : tensor<1xi64>
    %93 = onnx.Constant dense_resource<__elided__> : tensor<1x672x1xf32>
    %94 = onnx.Constant dense_resource<__elided__> : tensor<672x28xf32>
    %95 = onnx.Constant dense<28> : tensor<1xi64>
    %96 = onnx.Constant dense<[[[0.0241990145], [0.063117139], [0.0918530598], [0.0712856203], [0.0472044945], [0.0622316859], [0.0423248857], [0.066557847], [0.0481828675], [0.0561589412], [0.0765830278], [0.15609394], [0.0924124717], [0.0587017424], [0.110296793], [0.0672730133], [0.110474929], [0.0711472258], [0.0961295664], [0.0502503403], [0.0888413861], [0.0708195716], [0.067578271], [0.089649871], [0.105405703], [0.0693540946], [0.0510405898], [0.113850825]]]> : tensor<1x28x1xf32>
    %97 = onnx.Constant dense_resource<__elided__> : tensor<28x672xf32>
    %98 = onnx.Constant dense<672> : tensor<1xi64>
    %99 = onnx.Constant dense_resource<__elided__> : tensor<1x672x1xf32>
    %100 = onnx.Constant dense_resource<__elided__> : tensor<672x112xf32>
    %101 = onnx.Constant dense<112> : tensor<1xi64>
    %102 = onnx.Constant dense_resource<__elided__> : tensor<1x112x1xf32>
    %103 = onnx.Constant dense_resource<__elided__> : tensor<112x672xf32>
    %104 = onnx.Constant dense<672> : tensor<1xi64>
    %105 = onnx.Constant dense_resource<__elided__> : tensor<1x672x1xf32>
    %106 = onnx.Constant dense_resource<__elided__> : tensor<672x28xf32>
    %107 = onnx.Constant dense<28> : tensor<1xi64>
    %108 = onnx.Constant dense<[[[0.100829467], [0.0143278381], [0.0330459215], [6.472760e-02], [7.099840e-02], [0.0594224967], [0.0361340493], [0.0739326403], [0.0730695128], [0.044961866], [0.0895663425], [0.0471842661], [0.0301338453], [0.0667568147], [0.0558584034], [0.143114194], [0.0747199952], [0.0738492459], [0.0578506552], [7.362370e-02], [0.0458855964], [0.0922574698], [0.0571205691], [0.0464925319], [0.0492951348], [0.0319355279], [0.0681081489], [0.10895811]]]> : tensor<1x28x1xf32>
    %109 = onnx.Constant dense_resource<__elided__> : tensor<28x672xf32>
    %110 = onnx.Constant dense<672> : tensor<1xi64>
    %111 = onnx.Constant dense_resource<__elided__> : tensor<1x672x1xf32>
    %112 = onnx.Constant dense_resource<__elided__> : tensor<672x112xf32>
    %113 = onnx.Constant dense<112> : tensor<1xi64>
    %114 = onnx.Constant dense_resource<__elided__> : tensor<1x112x1xf32>
    %115 = onnx.Constant dense_resource<__elided__> : tensor<112x480xf32>
    %116 = onnx.Constant dense<480> : tensor<1xi64>
    %117 = onnx.Constant dense_resource<__elided__> : tensor<1x480x1xf32>
    %118 = onnx.Constant dense_resource<__elided__> : tensor<480x20xf32>
    %119 = onnx.Constant dense<20> : tensor<1xi64>
    %120 = onnx.Constant dense<[[[0.00859382189], [0.0728693604], [-3.57725832E-4], [0.0687896237], [-1.438330e-03], [0.0112939151], [-0.0499807559], [0.09855441], [7.774180e-02], [0.00638262368], [0.124053188], [0.035380248], [0.078922525], [0.0491175205], [0.0946869701], [0.00284113386], [0.0451839902], [0.0545771085], [0.120067529], [0.026001662]]]> : tensor<1x20x1xf32>
    %121 = onnx.Constant dense_resource<__elided__> : tensor<20x480xf32>
    %122 = onnx.Constant dense<480> : tensor<1xi64>
    %123 = onnx.Constant dense_resource<__elided__> : tensor<1x480x1xf32>
    %124 = onnx.Constant dense_resource<__elided__> : tensor<480x80xf32>
    %125 = onnx.Constant dense<80> : tensor<1xi64>
    %126 = onnx.Constant dense<[[[0.867026091], [6.774800e-01], [-0.767899155], [-0.442936599], [0.383329809], [0.815774619], [-0.89629805], [0.937702178], [-0.59496218], [-0.0189425647], [2.59086466], [-0.729170442], [0.560462117], [-0.266867906], [0.140629217], [-0.875732541], [-0.96572113], [1.01270449], [-0.300507456], [-0.871368765], [-0.149322569], [-1.5701623], [-1.62292206], [0.443430632], [-0.777371525], [-0.330621481], [-0.450739861], [1.66214955], [1.60287666], [0.0578418374], [-0.240744174], [0.0659044385], [-0.808547854], [-1.2176559], [0.16687803], [-0.700665116], [-0.154659808], [0.940721035], [-1.42892838], [0.712841808], [1.10624158], [0.133086786], [0.363240868], [-1.60658073], [0.902384043], [1.75247157], [0.510115504], [-1.0504303], [-0.740926921], [1.06014228], [1.19856095], [-0.147233397], [-1.32419395], [0.394881189], [-0.223401546], [0.184750706], [0.148090243], [0.662855268], [0.364799678], [0.14687404], [-0.709106088], [-0.931289494], [0.761270046], [0.581531346], [0.160558835], [-2.32813597], [0.605830789], [-0.835428595], [-0.850943446], [-0.287947983], [0.176242828], [-0.668409228], [-0.912088274], [0.885304272], [0.547346532], [0.595574617], [-0.755004703], [1.29812431], [0.600409925], [-1.19815254]]]> : tensor<1x80x1xf32>
    %127 = onnx.Constant dense_resource<__elided__> : tensor<80x480xf32>
    %128 = onnx.Constant dense<480> : tensor<1xi64>
    %129 = onnx.Constant dense_resource<__elided__> : tensor<1x480x1xf32>
    %130 = onnx.Constant dense_resource<__elided__> : tensor<480x20xf32>
    %131 = onnx.Constant dense<20> : tensor<1xi64>
    %132 = onnx.Constant dense<[[[0.0705928206], [0.0386091247], [0.0294826254], [0.0708172768], [0.0171071701], [0.0422849469], [0.0686481595], [0.066602774], [0.0644055381], [0.0324214138], [0.0493133776], [0.0506825931], [0.0499651656], [7.665550e-02], [0.0465598032], [0.12306682], [0.0124457516], [0.048471231], [-0.00952306576], [0.0606836639]]]> : tensor<1x20x1xf32>
    %133 = onnx.Constant dense_resource<__elided__> : tensor<20x480xf32>
    %134 = onnx.Constant dense<480> : tensor<1xi64>
    %135 = onnx.Constant dense_resource<__elided__> : tensor<1x480x1xf32>
    %136 = onnx.Constant dense_resource<__elided__> : tensor<480x80xf32>
    %137 = onnx.Constant dense<80> : tensor<1xi64>
    %138 = onnx.Constant dense<[[[0.511733174], [-0.0504499227], [2.61171341], [-0.33475256], [0.245838284], [1.07448387], [-0.337454468], [2.35338378], [-0.598308861], [1.47104049], [-0.104181826], [-6.630720e-01], [-0.11821875], [-1.9377991], [-0.502742589], [-1.93017387], [0.236974269], [1.73494589], [1.30464673], [0.222994566], [0.936912834], [0.0985613912], [-0.285608709], [-0.53967011], [-5.28721428], [0.495470613], [0.538367212], [-2.98357534], [0.86428225], [-3.53076434], [1.09292006], [-1.03951776], [-1.82724154], [-0.334725499], [2.19306469], [-1.07008994], [2.20360661], [1.87624574], [-0.292993248], [1.26800132], [1.7713542], [-0.459411621], [0.773326159], [-3.6131196], [1.14345205], [1.51161635], [0.0772338137], [-0.439251095], [-1.55158794], [1.22382963], [2.18115211], [-0.375072718], [1.29388809], [0.709350467], [-2.63231874], [-0.300916076], [0.935724497], [1.19706178], [1.08061063], [-0.555202723], [0.321820498], [-1.10415101], [1.02879858], [-0.826199293], [-0.073693484], [-0.470846653], [0.239837393], [-1.95777941], [0.0115857944], [-1.30836904], [-2.9990716], [-1.32713151], [-0.374819964], [-0.311415553], [1.11906457], [2.09255266], [0.0149926543], [-1.99699402], [2.61022234], [-2.53175712]]]> : tensor<1x80x1xf32>
    %139 = onnx.Constant dense_resource<__elided__> : tensor<80x480xf32>
    %140 = onnx.Constant dense<480> : tensor<1xi64>
    %141 = onnx.Constant dense_resource<__elided__> : tensor<1x480x1xf32>
    %142 = onnx.Constant dense_resource<__elided__> : tensor<480x20xf32>
    %143 = onnx.Constant dense<20> : tensor<1xi64>
    %144 = onnx.Constant dense<[[[0.0630497336], [0.0218531955], [0.0916818082], [0.0630441755], [0.0677284524], [0.0738803446], [0.0301086698], [0.0415334627], [3.510920e-02], [0.0805460364], [0.0300002322], [0.0763164312], [0.0470434651], [0.0377253629], [0.0560274571], [0.0781097784], [6.566580e-02], [0.0589340404], [0.0731591582], [0.031636022]]]> : tensor<1x20x1xf32>
    %145 = onnx.Constant dense_resource<__elided__> : tensor<20x480xf32>
    %146 = onnx.Constant dense<480> : tensor<1xi64>
    %147 = onnx.Constant dense_resource<__elided__> : tensor<1x480x1xf32>
    %148 = onnx.Constant dense_resource<__elided__> : tensor<480x80xf32>
    %149 = onnx.Constant dense<80> : tensor<1xi64>
    %150 = onnx.Constant dense<[[[-4.36494303], [-6.0768423], [0.110051759], [0.973647832], [-19.3703518], [8.843170e+00], [-12.0264874], [4.46976662], [7.37899065], [4.44478512], [-22.0382481], [4.23496389], [-21.6021023], [-9.25060081], [9.31553745], [8.281020e+00], [2.46381259], [3.27419281], [6.75065565], [7.617090e+00], [-8.22321128], [-8.1228075], [7.785110e+00], [-9.57855987], [-22.0741825], [-1.54996502], [-6.72923517], [20.0980816], [-2.77346754], [-0.234196231], [-2.47300529], [-20.9843445], [0.935940623], [0.972137689], [1.86153424], [2.2060461], [-3.80205846], [10.502532], [-8.72229957], [11.9827394], [-6.18894339], [-2.00955415], [5.56510925], [3.12191224], [2.308750e+01], [-9.55668163], [-1.25079525], [22.0045891], [-0.584596455], [5.89906931], [-4.77201176], [5.53493452], [3.40169764], [5.26305485], [2.69531941], [17.3906593], [16.2609787], [15.2417059], [21.2077808], [3.94227052], [2.3270154], [4.63242435], [10.7700548], [14.2589731], [1.38305402], [22.2820473], [-2.7834487], [-4.56462383], [5.560690e+00], [-13.3611097], [13.1438723], [15.9251766], [-11.4371557], [-0.925646603], [-12.1578474], [-0.272259891], [6.70919704], [1.17487645], [12.4952059], [8.63333702]]]> : tensor<1x80x1xf32>
    %151 = onnx.Constant dense_resource<__elided__> : tensor<80x240xf32>
    %152 = onnx.Constant dense<240> : tensor<1xi64>
    %153 = onnx.Constant dense_resource<__elided__> : tensor<1x240x1xf32>
    %154 = onnx.Constant dense_resource<__elided__> : tensor<240x10xf32>
    %155 = onnx.Constant dense<10> : tensor<1xi64>
    %156 = onnx.Constant dense<[[[-0.00726165855], [-0.00253582816], [0.00550408475], [-0.00239345571], [-0.00190742884], [-5.80168504E-4], [-9.44476807E-4], [-0.00203791726], [1.68822953E-4], [-0.00550189381]]]> : tensor<1x10x1xf32>
    %157 = onnx.Constant dense_resource<__elided__> : tensor<10x240xf32>
    %158 = onnx.Constant dense<240> : tensor<1xi64>
    %159 = onnx.Constant dense_resource<__elided__> : tensor<1x240x1xf32>
    %160 = onnx.Constant dense_resource<__elided__> : tensor<240x40xf32>
    %161 = onnx.Constant dense<40> : tensor<1xi64>
    %162 = onnx.Constant dense<[[[0.049277097], [2.35211444], [0.0265303031], [1.47422838], [-0.53537643], [3.01619196], [0.164217025], [4.979070e-01], [-0.46246469], [-2.68832517], [1.21143734], [1.32085967], [0.499887347], [-0.457612514], [0.334625304], [-2.11602426], [1.22920465], [0.874340176], [-1.67693973], [4.390380e-01], [-1.31650233], [1.78343236], [5.155450e-01], [2.13139701], [-5.29663467], [0.93540287], [0.688584268], [0.463113815], [-1.81002152], [-0.12493062], [0.393586159], [0.00852704048], [0.47990334], [-5.655110e-01], [0.343354583], [-1.37523162], [0.831438065], [-0.540092587], [-1.25566363], [7.841420e-01]]]> : tensor<1x40x1xf32>
    %163 = onnx.Constant dense_resource<__elided__> : tensor<40x240xf32>
    %164 = onnx.Constant dense<240> : tensor<1xi64>
    %165 = onnx.Constant dense_resource<__elided__> : tensor<1x240x1xf32>
    %166 = onnx.Constant dense_resource<__elided__> : tensor<240x10xf32>
    %167 = onnx.Constant dense<10> : tensor<1xi64>
    %168 = onnx.Constant dense<[[[-0.0478865616], [-0.0362051837], [-0.047898367], [0.03419213], [0.0824968218], [0.224180907], [0.0471990034], [-0.0480014421], [0.0595649295], [0.077743493]]]> : tensor<1x10x1xf32>
    %169 = onnx.Constant dense_resource<__elided__> : tensor<10x240xf32>
    %170 = onnx.Constant dense<240> : tensor<1xi64>
    %171 = onnx.Constant dense_resource<__elided__> : tensor<1x240x1xf32>
    %172 = onnx.Constant dense_resource<__elided__> : tensor<240x40xf32>
    %173 = onnx.Constant dense<40> : tensor<1xi64>
    %174 = onnx.Constant dense<[[[-10.505208], [5.48293209], [17.3843956], [-2.008500e+00], [-6.65664673], [17.835659], [-17.7546234], [8.87665271], [-24.7917461], [23.4155846], [8.95037364], [18.2309189], [10.4962072], [17.180727], [9.01466083], [-10.2168236], [3.8382585], [20.2291298], [-14.6314716], [23.2874279], [7.56010246], [-3.47213483], [8.76100158], [-1.80029833], [17.8038692], [14.8900099], [-19.1065369], [4.77607632], [28.5506096], [-20.8614311], [-10.4562387], [8.52432346], [-4.04214334], [6.68789148], [8.71776866], [0.599342227], [-22.2251186], [-12.8093185], [17.0719376], [0.794167995]]]> : tensor<1x40x1xf32>
    %175 = onnx.Constant dense_resource<__elided__> : tensor<40x144xf32>
    %176 = onnx.Constant dense<144> : tensor<1xi64>
    %177 = onnx.Constant dense_resource<__elided__> : tensor<1x144x1xf32>
    %178 = onnx.Constant dense_resource<__elided__> : tensor<144x6xf32>
    %179 = onnx.Constant dense<6> : tensor<1xi64>
    %180 = onnx.Constant dense<[[[-0.00908850319], [0.00335528958], [0.0040775477], [-0.00431085099], [0.00340418564], [0.00396859786]]]> : tensor<1x6x1xf32>
    %181 = onnx.Constant dense_resource<__elided__> : tensor<6x144xf32>
    %182 = onnx.Constant dense<144> : tensor<1xi64>
    %183 = onnx.Constant dense_resource<__elided__> : tensor<1x144x1xf32>
    %184 = onnx.Constant dense_resource<__elided__> : tensor<144x24xf32>
    %185 = onnx.Constant dense<24> : tensor<1xi64>
    %186 = onnx.Constant dense<[[[1.22006309], [-0.890513718], [-1.75371838], [-1.21236324], [-1.25553465], [1.62928188], [-8.31277942], [-0.68357718], [0.619635105], [3.95153093], [3.55235314], [0.118072867], [-2.38414264], [0.259514332], [0.622147262], [-3.43858242], [-0.423341751], [4.3704586], [-1.31937981], [0.113781095], [3.1534853], [6.67209339], [-0.346637309], [-1.5588913]]]> : tensor<1x24x1xf32>
    %187 = onnx.Constant dense_resource<__elided__> : tensor<24x144xf32>
    %188 = onnx.Constant dense<144> : tensor<1xi64>
    %189 = onnx.Constant dense_resource<__elided__> : tensor<1x144x1xf32>
    %190 = onnx.Constant dense_resource<__elided__> : tensor<144x6xf32>
    %191 = onnx.Constant dense<6> : tensor<1xi64>
    %192 = onnx.Constant dense<[[[0.0165178981], [0.069331333], [0.12043386], [0.164997473], [0.0325807221], [0.0695570111]]]> : tensor<1x6x1xf32>
    %193 = onnx.Constant dense_resource<__elided__> : tensor<6x144xf32>
    %194 = onnx.Constant dense<144> : tensor<1xi64>
    %195 = onnx.Constant dense_resource<__elided__> : tensor<1x144x1xf32>
    %196 = onnx.Constant dense_resource<__elided__> : tensor<144x24xf32>
    %197 = onnx.Constant dense<24> : tensor<1xi64>
    %198 = onnx.Constant dense<[[[10.4364233], [9.3292036], [14.0362234], [-7.56987906], [2.61819124], [7.57291316], [-17.6693897], [6.43628454], [-14.8563213], [5.69920635], [5.98223876], [-3.561440e+01], [-32.3257408], [-14.3648624], [5.0069809], [4.67933893], [-7.16988754], [-0.250263631], [20.207756], [-7.92718124], [1.67430019], [-35.4480705], [1.6906625], [9.87233829]]]> : tensor<1x24x1xf32>
    %199 = onnx.Constant dense_resource<__elided__> : tensor<24x96xf32>
    %200 = onnx.Constant dense<96> : tensor<1xi64>
    %201 = onnx.Constant dense<[[[0.173640713], [-0.0404776521], [0.0290288683], [0.26768136], [1.04891753], [0.676778852], [-0.308510453], [-0.146767125], [-0.264460057], [-0.25084731], [0.37215659], [-0.0882113501], [0.310515225], [-0.100164726], [-0.280207425], [0.249460205], [-0.227599293], [-0.399843693], [0.115427352], [1.04923296], [0.214288637], [-0.219752252], [0.19565475], [-0.292686343], [-0.28193152], [-0.274021685], [-0.245642468], [0.462261379], [0.477668971], [0.241488263], [-0.33845374], [-0.30255127], [-0.375273168], [0.25565508], [0.197764173], [-0.136088267], [-0.0146788089], [-0.251183391], [0.427855104], [-0.232084826], [0.20957993], [-0.138981342], [-0.319169641], [0.158804491], [-3.525390e-01], [0.364144534], [-0.324853212], [0.466526687], [-0.404328287], [-0.433219463], [-0.187246308], [0.146943346], [0.871584951], [-0.471507877], [-0.270970315], [0.69928199], [-0.0707574487], [-0.120922185], [-0.285227656], [-0.037301559], [-0.163061768], [-0.371575922], [-0.462685913], [-0.312165111], [-0.155189738], [-0.319701076], [-0.178981513], [-0.210503936], [-0.392985076], [-0.349431396], [-0.0605485626], [-0.238552943], [-0.17160742], [-0.50984931], [0.159908816], [-0.164080516], [-0.374578834], [-4.437230e-01], [-0.249939412], [-0.610883414], [-0.0113757076], [0.00621357746], [-0.337781578], [0.468725681], [0.122091971], [-0.33782196], [0.742607295], [0.10243997], [0.308332801], [-0.342265904], [-0.235474497], [-0.260462493], [0.0198677685], [0.486277282], [-0.280504972], [0.296612471]]]> : tensor<1x96x1xf32>
    %202 = onnx.Constant dense_resource<__elided__> : tensor<96x4xf32>
    %203 = onnx.Constant dense<4> : tensor<1xi64>
    %204 = onnx.Constant dense<[[[-0.00488274172], [0.00683442131], [0.00191371946], [0.00740076276]]]> : tensor<1x4x1xf32>
    %205 = onnx.Constant dense_resource<__elided__> : tensor<4x96xf32>
    %206 = onnx.Constant dense<96> : tensor<1xi64>
    %207 = onnx.Constant dense<[[[3.32748866], [2.35067344], [-0.232394964], [2.11438632], [-0.809144377], [1.5904386], [1.64866436], [2.94459891], [3.00965953], [2.68106556], [2.10625267], [2.83295846], [0.883040308], [2.83259583], [2.53474927], [-1.01994658], [0.703993499], [1.66814578], [-1.14999962], [-0.762186884], [-0.390853941], [1.78897643], [-0.990508377], [0.104313456], [2.04930282], [2.21229029], [1.80816865], [1.20789719], [0.68943131], [-0.76807332], [3.44631076], [2.61629748], [1.53019536], [2.37854362], [1.6556015], [1.99273181], [2.45647097], [2.6395812], [0.885968565], [1.96699512], [0.479944557], [1.48019493], [2.78331184], [1.40068543], [0.524071634], [-0.0883201658], [2.99099231], [2.08590841], [2.10622215], [2.23377252], [2.85345078], [1.74125266], [-0.317072213], [1.9075439], [2.94124436], [-6.838170e-01], [2.722930e+00], [2.19190335], [1.71985638], [1.37734175], [2.2961328], [1.95812654], [1.81069982], [2.9058032], [2.40079403], [1.88480353], [0.143938527], [2.76659632], [0.141622111], [2.06082916], [0.374414474], [2.1106565], [2.44316435], [2.44504547], [-2.8551929], [1.86697626], [2.58777761], [1.8571794], [1.83245993], [2.20048213], [1.73157406], [-0.996859908], [2.50737548], [-1.3757093], [-1.0981313], [2.2346921], [-1.01875758], [1.91017377], [-0.297202885], [2.71116447], [2.78284287], [1.43222916], [3.67054701], [-0.807370245], [1.39143491], [4.58319807]]]> : tensor<1x96x1xf32>
    %208 = onnx.Constant dense_resource<__elided__> : tensor<96x16xf32>
    %209 = onnx.Constant dense<16> : tensor<1xi64>
    %210 = onnx.Constant dense<[[[-12.9354401], [-10.0954313], [-16.9982052], [-19.7167912], [10.7153616], [-10.0743561], [-14.9231367], [16.3309956], [17.5378113], [-6.679570e+00], [-1.55938673], [30.8791332], [-8.28937435], [-5.6501894], [11.9162989], [-10.5528173]]]> : tensor<1x16x1xf32>
    %211 = onnx.Constant dense_resource<__elided__> : tensor<16x32xf32>
    %212 = onnx.Constant dense<32> : tensor<1xi64>
    %213 = onnx.Constant dense<[[[-0.254041344], [-0.901859223], [0.0705970823], [-0.662056386], [-0.272437304], [-0.106211871], [-0.505488575], [0.119667508], [-0.983590245], [0.347279131], [-0.272328407], [0.518169463], [0.484784096], [-1.04977775], [-0.21762453], [-0.0514451079], [-0.0575695112], [-1.41633403], [-0.766996204], [0.0662989914], [0.230070248], [-0.791235209], [-0.438473105], [-0.0224918686], [0.103104405], [0.633177816], [-0.352986783], [0.486667722], [-1.60109668E-8], [0.912136912], [-0.125652358], [0.0947423055]]]> : tensor<1x32x1xf32>
    %214 = onnx.Constant dense_resource<__elided__> : tensor<32x8xf32>
    %215 = onnx.Constant dense<8> : tensor<1xi64>
    %216 = onnx.Constant dense<[[[-0.00862205587], [-0.0105656395], [-0.0136323618], [0.00587621238], [-0.0371521302], [-0.0403165966], [-0.00795944407], [-0.0354649387]]]> : tensor<1x8x1xf32>
    %217 = onnx.Constant dense_resource<__elided__> : tensor<8x32xf32>
    %218 = onnx.Constant dense<-1> : tensor<1xi64>
    %219 = onnx.Constant dense<[0, 0, 1, 1, 0, 0, 2, 2]> : tensor<8xi64>
    %220 = onnx.Constant dense<[0, 0, 0, 0, 0, 0, 1, 1]> : tensor<8xi64>
    %221 = onnx.Constant dense<[0, 0, 1, 1, 0, 0, 2, 2]> : tensor<8xi64>
    %222 = onnx.Constant dense<[0, 0, 0, 0, 0, 0, 1, 1]> : tensor<8xi64>
    %223 = onnx.Constant dense<0.000000e+00> : tensor<f32>
    %224 = onnx.Constant dense<0.000000e+00> : tensor<f32>
    %225 = onnx.Constant dense<0.000000e+00> : tensor<f32>
    %226 = onnx.Constant dense<0.000000e+00> : tensor<f32>
    %227 = "onnx.NoValue"() {onnx_node_name = "onnx.NoValue_9", value} : () -> none
    %228 = onnx.Constant dense<0.000000e+00> : tensor<f32>
    %229 = onnx.Constant dense_resource<__elided__> : tensor<1000x1280xf32>
    %230 = onnx.Constant dense_resource<__elided__> : tensor<1000xf32>
    %231 = onnx.Constant dense_resource<__elided__> : tensor<32x3x3x3xf32>
    %232 = onnx.Constant dense<[-3.69902015, 2.43763304, 2.30849314, 7.08236217, -1.393990e+00, 8.58720302, -2.91995764, 1.63221419, 0.484383404, 0.00966562051, -2.60771561, 1.74594903, 0.0412548184, -2.51122332, 1.72476542, 9.04931068, 2.26008058, 5.20824718, 2.56879759, 1.97215879, -3.31934905, 4.30217552, 10.6299362, -10.650775, -1.66886127, 1.38215482, 10.0364313, 1.99211192, 0.159816295, 2.5009625, -10.7581549, 2.08634329]> : tensor<32xf32>
    %233 = onnx.Constant dense_resource<__elided__> : tensor<32x1x3x3xf32>
    %234 = onnx.Constant dense<[0.759861111, 0.214319706, 12.9207525, 2.22300363, 5.82286263, 2.16972399, 0.602143288, -4.5862875, 0.396210551, 8.99199104, 6.00969696, 2.00956345, 14.9045744, 4.49202204, 2.10339928, 2.336694, 0.365842342, 0.842549324, -0.450307131, 5.04064322, 1.45616102, 1.0192225, 2.31476212, -1.70300531, 6.49169302, 5.61436033, 2.698140e+00, 5.69727898, -1.11697149, 2.69458365, -0.888107359, 5.285430e+00]> : tensor<32xf32>
    %235 = onnx.Constant dense_resource<__elided__> : tensor<96x1x3x3xf32>
    %236 = onnx.Constant dense<[59.1712723, -57.9895515, 5.40928078, 7.60545731, 11.7057676, 3.18215704, 0.949484109, 0.144375056, 1.16156411, -0.953018486, 9.15364646, 4.33272648, 3.05655074, 0.636311889, 0.689315438, 2.4468565, 1.38123775, -3.05484104, 2.28836584, 12.799798, 2.06258202, 0.950341284, 2.15473723, -0.119839102, -0.586925447, 0.00479263067, -1.02858973, 5.24667215, 2.736370e+00, 1.82861805, 0.430833369, -0.346177876, 0.892261326, 8.82832527, 12.2341499, -0.521925211, 2.08490586, 0.0996278822, 1.63437104, 1.13936198, 2.26315284, 0.152002499, -0.361042351, -18.0788021, 6.02394485, 5.41552687, 0.370548069, 5.05959892, -0.0653366446, -1.0146718, 2.97763968, 14.5287457, 15.0899868, -0.423939884, -0.842541456, 11.7050896, -0.68445313, -1.20608771, -1.58451831, 1.81040764, 0.281086683, -0.730765343, -0.924194455, -0.00450350344, -0.0790704489, -1.58481622, -4.31294775, 4.45863724, 0.373020947, -2.85078931, 1.78226686, 2.00439405, -1.71407485, -0.46794647, 11.7674398, 2.85610366, -0.877751886, -0.116080984, 0.0218282044, -0.259457886, -4.98584414, 6.09528732, 2.75915956, 11.3750811, 2.25209928, -0.769211947, 16.1939793, 1.45818782, 1.59617186, 0.538759708, -0.459132731, -2.1821785, -53.7278519, 9.7078619, 1.00998497, 12.8047991]> : tensor<96xf32>
    %237 = onnx.Constant dense_resource<__elided__> : tensor<144x1x3x3xf32>
    %238 = onnx.Constant dense_resource<__elided__> : tensor<144xf32>
    %239 = onnx.Constant dense_resource<__elided__> : tensor<144x1x5x5xf32>
    %240 = onnx.Constant dense_resource<__elided__> : tensor<144xf32>
    %241 = onnx.Constant dense_resource<__elided__> : tensor<240x1x5x5xf32>
    %242 = onnx.Constant dense_resource<__elided__> : tensor<240xf32>
    %243 = onnx.Constant dense_resource<__elided__> : tensor<240x1x3x3xf32>
    %244 = onnx.Constant dense_resource<__elided__> : tensor<240xf32>
    %245 = onnx.Constant dense_resource<__elided__> : tensor<480x1x3x3xf32>
    %246 = onnx.Constant dense_resource<__elided__> : tensor<480xf32>
    %247 = onnx.Constant dense_resource<__elided__> : tensor<480x1x3x3xf32>
    %248 = onnx.Constant dense_resource<__elided__> : tensor<480xf32>
    %249 = onnx.Constant dense_resource<__elided__> : tensor<480x1x5x5xf32>
    %250 = onnx.Constant dense_resource<__elided__> : tensor<480xf32>
    %251 = onnx.Constant dense_resource<__elided__> : tensor<672x1x5x5xf32>
    %252 = onnx.Constant dense_resource<__elided__> : tensor<672xf32>
    %253 = onnx.Constant dense_resource<__elided__> : tensor<672x1x5x5xf32>
    %254 = onnx.Constant dense_resource<__elided__> : tensor<672xf32>
    %255 = onnx.Constant dense_resource<__elided__> : tensor<672x1x5x5xf32>
    %256 = onnx.Constant dense_resource<__elided__> : tensor<672xf32>
    %257 = onnx.Constant dense_resource<__elided__> : tensor<1152x1x5x5xf32>
    %258 = onnx.Constant dense_resource<__elided__> : tensor<1152xf32>
    %259 = onnx.Constant dense_resource<__elided__> : tensor<1152x1x5x5xf32>
    %260 = onnx.Constant dense_resource<__elided__> : tensor<1152xf32>
    %261 = onnx.Constant dense_resource<__elided__> : tensor<1152x1x5x5xf32>
    %262 = onnx.Constant dense_resource<__elided__> : tensor<1152xf32>
    %263 = onnx.Constant dense_resource<__elided__> : tensor<1152x1x3x3xf32>
    %264 = onnx.Constant dense_resource<__elided__> : tensor<1152xf32>
    %265 = onnx.Constant dense<[0, 0, 0, 0, 0, 0, 1, 1]> : tensor<8xi64>
    %266 = "onnx.Pad"(%arg0, %265, %228, %227) {mode = "constant", onnx_node_name = "/efficientnet/embeddings/padding/Pad_511"} : (tensor<?x3x224x224xf32>, tensor<8xi64>, tensor<f32>, none) -> tensor<?x3x225x225xf32>
    %267 = "onnx.Conv"(%266, %231, %232) {auto_pad = "VALID", dilations = [1, 1], group = 1 : si64, kernel_shape = [3, 3], onnx_node_name = "/efficientnet/embeddings/convolution/Conv", strides = [2, 2]} : (tensor<?x3x225x225xf32>, tensor<32x3x3x3xf32>, tensor<32xf32>) -> tensor<?x32x112x112xf32>
    %268 = "onnx.Sigmoid"(%267) {onnx_node_name = "/efficientnet/embeddings/activation/Sigmoid"} : (tensor<?x32x112x112xf32>) -> tensor<?x32x112x112xf32>
    %269 = "onnx.Mul"(%267, %268) {onnx_node_name = "/efficientnet/embeddings/activation/Mul"} : (tensor<?x32x112x112xf32>, tensor<?x32x112x112xf32>) -> tensor<?x32x112x112xf32>
    %270 = "onnx.Conv"(%269, %233, %234) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 32 : si64, kernel_shape = [3, 3], onnx_node_name = "/efficientnet/encoder/blocks.0/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x32x112x112xf32>, tensor<32x1x3x3xf32>, tensor<32xf32>) -> tensor<?x32x112x112xf32>
    %271 = "onnx.Sigmoid"(%270) {onnx_node_name = "/efficientnet/encoder/blocks.0/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x32x112x112xf32>) -> tensor<?x32x112x112xf32>
    %272 = "onnx.Mul"(%270, %271) {onnx_node_name = "/efficientnet/encoder/blocks.0/depthwise_conv/depthwise_act/Mul"} : (tensor<?x32x112x112xf32>, tensor<?x32x112x112xf32>) -> tensor<?x32x112x112xf32>
    %273 = "onnx.ReduceMeanV13"(%272) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/squeeze/GlobalAveragePool_213"} : (tensor<?x32x112x112xf32>) -> tensor<?x32x1x1xf32>
    %274 = "onnx.Dim"(%273) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/reduce/Conv_225"} : (tensor<?x32x1x1xf32>) -> tensor<1xi64>
    %275 = "onnx.Concat"(%274, %25, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/reduce/Conv_449"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %276 = "onnx.Reshape"(%273, %275) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/reduce/Conv_198"} : (tensor<?x32x1x1xf32>, tensor<3xi64>) -> tensor<?x32x?xf32>
    %277 = "onnx.MatMul"(%217, %276) {onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/reduce/Conv_152"} : (tensor<8x32xf32>, tensor<?x32x?xf32>) -> tensor<?x8x?xf32>
    %278 = "onnx.Add"(%277, %216) {onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/reduce/Conv_389"} : (tensor<?x8x?xf32>, tensor<1x8x1xf32>) -> tensor<?x8x?xf32>
    %279 = "onnx.Dim"(%273) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/reduce/Conv_144"} : (tensor<?x32x1x1xf32>) -> tensor<1xi64>
    %280 = "onnx.Concat"(%279, %215, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/reduce/Conv_133"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %281 = "onnx.Reshape"(%278, %280) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/reduce/Conv_253"} : (tensor<?x8x?xf32>, tensor<4xi64>) -> tensor<?x8x1x1xf32>
    %282 = "onnx.Sigmoid"(%281) {onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x8x1x1xf32>) -> tensor<?x8x1x1xf32>
    %283 = "onnx.Mul"(%281, %282) {onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/act_reduce/Mul"} : (tensor<?x8x1x1xf32>, tensor<?x8x1x1xf32>) -> tensor<?x8x1x1xf32>
    %284 = "onnx.Dim"(%283) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/expand/Conv_527"} : (tensor<?x8x1x1xf32>) -> tensor<1xi64>
    %285 = "onnx.Concat"(%284, %23, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/expand/Conv_265"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %286 = "onnx.Reshape"(%283, %285) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/expand/Conv_500"} : (tensor<?x8x1x1xf32>, tensor<3xi64>) -> tensor<?x8x?xf32>
    %287 = "onnx.MatMul"(%214, %286) {onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/expand/Conv_332"} : (tensor<32x8xf32>, tensor<?x8x?xf32>) -> tensor<?x32x?xf32>
    %288 = "onnx.Add"(%287, %213) {onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/expand/Conv_105"} : (tensor<?x32x?xf32>, tensor<1x32x1xf32>) -> tensor<?x32x?xf32>
    %289 = "onnx.Dim"(%283) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/expand/Conv_154"} : (tensor<?x8x1x1xf32>) -> tensor<1xi64>
    %290 = "onnx.Concat"(%289, %212, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/expand/Conv_296"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %291 = "onnx.Reshape"(%288, %290) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/expand/Conv_250"} : (tensor<?x32x?xf32>, tensor<4xi64>) -> tensor<?x32x1x1xf32>
    %292 = "onnx.Sigmoid"(%291) {onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x32x1x1xf32>) -> tensor<?x32x1x1xf32>
    %293 = "onnx.Mul"(%272, %292) {onnx_node_name = "/efficientnet/encoder/blocks.0/squeeze_excite/Mul"} : (tensor<?x32x112x112xf32>, tensor<?x32x1x1xf32>) -> tensor<?x32x112x112xf32>
    %294 = "onnx.Dim"(%293) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv_349"} : (tensor<?x32x112x112xf32>) -> tensor<1xi64>
    %295 = "onnx.Concat"(%294, %25, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv_466"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %296 = "onnx.Reshape"(%293, %295) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv_50"} : (tensor<?x32x112x112xf32>, tensor<3xi64>) -> tensor<?x32x?xf32>
    %297 = "onnx.MatMul"(%211, %296) {onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv_259"} : (tensor<16x32xf32>, tensor<?x32x?xf32>) -> tensor<?x16x?xf32>
    %298 = "onnx.Add"(%297, %210) {onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv_338"} : (tensor<?x16x?xf32>, tensor<1x16x1xf32>) -> tensor<?x16x?xf32>
    %299 = "onnx.Dim"(%293) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv_115"} : (tensor<?x32x112x112xf32>) -> tensor<1xi64>
    %300 = "onnx.Concat"(%299, %209, %22, %22) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv_485"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %301 = "onnx.Reshape"(%298, %300) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv_216"} : (tensor<?x16x?xf32>, tensor<4xi64>) -> tensor<?x16x112x112xf32>
    %302 = "onnx.Dim"(%301) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/expansion/expand_conv/Conv_289"} : (tensor<?x16x112x112xf32>) -> tensor<1xi64>
    %303 = "onnx.Concat"(%302, %21, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv-/efficientnet/encoder/blocks.1/expansion/expand_conv/Conv_379"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %304 = "onnx.Reshape"(%298, %303) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.0/projection/project_conv/Conv-/efficientnet/encoder/blocks.1/expansion/expand_conv/Conv_441"} : (tensor<?x16x?xf32>, tensor<3xi64>) -> tensor<?x16x?xf32>
    %305 = "onnx.MatMul"(%208, %304) {onnx_node_name = "/efficientnet/encoder/blocks.1/expansion/expand_conv/Conv_239"} : (tensor<96x16xf32>, tensor<?x16x?xf32>) -> tensor<?x96x?xf32>
    %306 = "onnx.Add"(%305, %207) {onnx_node_name = "/efficientnet/encoder/blocks.1/expansion/expand_conv/Conv_188"} : (tensor<?x96x?xf32>, tensor<1x96x1xf32>) -> tensor<?x96x?xf32>
    %307 = "onnx.Dim"(%301) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/expansion/expand_conv/Conv_101"} : (tensor<?x16x112x112xf32>) -> tensor<1xi64>
    %308 = "onnx.Concat"(%307, %206, %22, %22) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/expansion/expand_conv/Conv_26"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %309 = "onnx.Reshape"(%306, %308) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/expansion/expand_conv/Conv_293"} : (tensor<?x96x?xf32>, tensor<4xi64>) -> tensor<?x96x112x112xf32>
    %310 = "onnx.Sigmoid"(%309) {onnx_node_name = "/efficientnet/encoder/blocks.1/expansion/expand_act/Sigmoid"} : (tensor<?x96x112x112xf32>) -> tensor<?x96x112x112xf32>
    %311 = "onnx.Mul"(%309, %310) {onnx_node_name = "/efficientnet/encoder/blocks.1/expansion/expand_act/Mul"} : (tensor<?x96x112x112xf32>, tensor<?x96x112x112xf32>) -> tensor<?x96x112x112xf32>
    %312 = "onnx.Pad"(%311, %222, %226, %227) {mode = "constant", onnx_node_name = "/efficientnet/encoder/blocks.1/depthwise_conv/depthwise_conv_pad/Pad_405"} : (tensor<?x96x112x112xf32>, tensor<8xi64>, tensor<f32>, none) -> tensor<?x96x113x113xf32>
    %313 = "onnx.Conv"(%312, %235, %236) {auto_pad = "VALID", dilations = [1, 1], group = 96 : si64, kernel_shape = [3, 3], onnx_node_name = "/efficientnet/encoder/blocks.1/depthwise_conv/depthwise_conv/Conv", strides = [2, 2]} : (tensor<?x96x113x113xf32>, tensor<96x1x3x3xf32>, tensor<96xf32>) -> tensor<?x96x56x56xf32>
    %314 = "onnx.Sigmoid"(%313) {onnx_node_name = "/efficientnet/encoder/blocks.1/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x96x56x56xf32>) -> tensor<?x96x56x56xf32>
    %315 = "onnx.Mul"(%313, %314) {onnx_node_name = "/efficientnet/encoder/blocks.1/depthwise_conv/depthwise_act/Mul"} : (tensor<?x96x56x56xf32>, tensor<?x96x56x56xf32>) -> tensor<?x96x56x56xf32>
    %316 = "onnx.ReduceMeanV13"(%315) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/squeeze/GlobalAveragePool_403"} : (tensor<?x96x56x56xf32>) -> tensor<?x96x1x1xf32>
    %317 = "onnx.Dim"(%316) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/reduce/Conv_515"} : (tensor<?x96x1x1xf32>) -> tensor<1xi64>
    %318 = "onnx.Concat"(%317, %20, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/reduce/Conv_333"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %319 = "onnx.Reshape"(%316, %318) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/reduce/Conv_306"} : (tensor<?x96x1x1xf32>, tensor<3xi64>) -> tensor<?x96x?xf32>
    %320 = "onnx.MatMul"(%205, %319) {onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/reduce/Conv_16"} : (tensor<4x96xf32>, tensor<?x96x?xf32>) -> tensor<?x4x?xf32>
    %321 = "onnx.Add"(%320, %204) {onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/reduce/Conv_417"} : (tensor<?x4x?xf32>, tensor<1x4x1xf32>) -> tensor<?x4x?xf32>
    %322 = "onnx.Dim"(%316) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/reduce/Conv_21"} : (tensor<?x96x1x1xf32>) -> tensor<1xi64>
    %323 = "onnx.Concat"(%322, %203, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/reduce/Conv_0"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %324 = "onnx.Reshape"(%321, %323) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/reduce/Conv_58"} : (tensor<?x4x?xf32>, tensor<4xi64>) -> tensor<?x4x1x1xf32>
    %325 = "onnx.Sigmoid"(%324) {onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x4x1x1xf32>) -> tensor<?x4x1x1xf32>
    %326 = "onnx.Mul"(%324, %325) {onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/act_reduce/Mul"} : (tensor<?x4x1x1xf32>, tensor<?x4x1x1xf32>) -> tensor<?x4x1x1xf32>
    %327 = "onnx.Dim"(%326) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/expand/Conv_266"} : (tensor<?x4x1x1xf32>) -> tensor<1xi64>
    %328 = "onnx.Concat"(%327, %19, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/expand/Conv_473"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %329 = "onnx.Reshape"(%326, %328) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/expand/Conv_93"} : (tensor<?x4x1x1xf32>, tensor<3xi64>) -> tensor<?x4x?xf32>
    %330 = "onnx.MatMul"(%202, %329) {onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/expand/Conv_522"} : (tensor<96x4xf32>, tensor<?x4x?xf32>) -> tensor<?x96x?xf32>
    %331 = "onnx.Add"(%330, %201) {onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/expand/Conv_482"} : (tensor<?x96x?xf32>, tensor<1x96x1xf32>) -> tensor<?x96x?xf32>
    %332 = "onnx.Dim"(%326) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/expand/Conv_370"} : (tensor<?x4x1x1xf32>) -> tensor<1xi64>
    %333 = "onnx.Concat"(%332, %200, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/expand/Conv_344"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %334 = "onnx.Reshape"(%331, %333) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/expand/Conv_478"} : (tensor<?x96x?xf32>, tensor<4xi64>) -> tensor<?x96x1x1xf32>
    %335 = "onnx.Sigmoid"(%334) {onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x96x1x1xf32>) -> tensor<?x96x1x1xf32>
    %336 = "onnx.Mul"(%315, %335) {onnx_node_name = "/efficientnet/encoder/blocks.1/squeeze_excite/Mul"} : (tensor<?x96x56x56xf32>, tensor<?x96x1x1xf32>) -> tensor<?x96x56x56xf32>
    %337 = "onnx.Dim"(%336) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv_426"} : (tensor<?x96x56x56xf32>) -> tensor<1xi64>
    %338 = "onnx.Concat"(%337, %20, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv_418"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %339 = "onnx.Reshape"(%336, %338) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv_34"} : (tensor<?x96x56x56xf32>, tensor<3xi64>) -> tensor<?x96x?xf32>
    %340 = "onnx.MatMul"(%199, %339) {onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv_35"} : (tensor<24x96xf32>, tensor<?x96x?xf32>) -> tensor<?x24x?xf32>
    %341 = "onnx.Add"(%340, %198) {onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv_438"} : (tensor<?x24x?xf32>, tensor<1x24x1xf32>) -> tensor<?x24x?xf32>
    %342 = "onnx.Dim"(%336) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv_413"} : (tensor<?x96x56x56xf32>) -> tensor<1xi64>
    %343 = "onnx.Concat"(%342, %197, %18, %18) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv_393"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %344 = "onnx.Reshape"(%341, %343) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv_404"} : (tensor<?x24x?xf32>, tensor<4xi64>) -> tensor<?x24x56x56xf32>
    %345 = "onnx.Dim"(%344) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/expansion/expand_conv/Conv_519"} : (tensor<?x24x56x56xf32>) -> tensor<1xi64>
    %346 = "onnx.Concat"(%345, %17, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv-/efficientnet/encoder/blocks.2/expansion/expand_conv/Conv_499"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %347 = "onnx.Reshape"(%341, %346) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.1/projection/project_conv/Conv-/efficientnet/encoder/blocks.2/expansion/expand_conv/Conv_437"} : (tensor<?x24x?xf32>, tensor<3xi64>) -> tensor<?x24x?xf32>
    %348 = "onnx.MatMul"(%196, %347) {onnx_node_name = "/efficientnet/encoder/blocks.2/expansion/expand_conv/Conv_429"} : (tensor<144x24xf32>, tensor<?x24x?xf32>) -> tensor<?x144x?xf32>
    %349 = "onnx.Add"(%348, %195) {onnx_node_name = "/efficientnet/encoder/blocks.2/expansion/expand_conv/Conv_87"} : (tensor<?x144x?xf32>, tensor<1x144x1xf32>) -> tensor<?x144x?xf32>
    %350 = "onnx.Dim"(%344) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/expansion/expand_conv/Conv_54"} : (tensor<?x24x56x56xf32>) -> tensor<1xi64>
    %351 = "onnx.Concat"(%350, %194, %18, %18) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/expansion/expand_conv/Conv_337"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %352 = "onnx.Reshape"(%349, %351) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/expansion/expand_conv/Conv_460"} : (tensor<?x144x?xf32>, tensor<4xi64>) -> tensor<?x144x56x56xf32>
    %353 = "onnx.Sigmoid"(%352) {onnx_node_name = "/efficientnet/encoder/blocks.2/expansion/expand_act/Sigmoid"} : (tensor<?x144x56x56xf32>) -> tensor<?x144x56x56xf32>
    %354 = "onnx.Mul"(%352, %353) {onnx_node_name = "/efficientnet/encoder/blocks.2/expansion/expand_act/Mul"} : (tensor<?x144x56x56xf32>, tensor<?x144x56x56xf32>) -> tensor<?x144x56x56xf32>
    %355 = "onnx.Conv"(%354, %237, %238) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 144 : si64, kernel_shape = [3, 3], onnx_node_name = "/efficientnet/encoder/blocks.2/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x144x56x56xf32>, tensor<144x1x3x3xf32>, tensor<144xf32>) -> tensor<?x144x56x56xf32>
    %356 = "onnx.Sigmoid"(%355) {onnx_node_name = "/efficientnet/encoder/blocks.2/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x144x56x56xf32>) -> tensor<?x144x56x56xf32>
    %357 = "onnx.Mul"(%355, %356) {onnx_node_name = "/efficientnet/encoder/blocks.2/depthwise_conv/depthwise_act/Mul"} : (tensor<?x144x56x56xf32>, tensor<?x144x56x56xf32>) -> tensor<?x144x56x56xf32>
    %358 = "onnx.ReduceMeanV13"(%357) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/squeeze/GlobalAveragePool_59"} : (tensor<?x144x56x56xf32>) -> tensor<?x144x1x1xf32>
    %359 = "onnx.Dim"(%358) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/reduce/Conv_47"} : (tensor<?x144x1x1xf32>) -> tensor<1xi64>
    %360 = "onnx.Concat"(%359, %16, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/reduce/Conv_355"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %361 = "onnx.Reshape"(%358, %360) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/reduce/Conv_446"} : (tensor<?x144x1x1xf32>, tensor<3xi64>) -> tensor<?x144x?xf32>
    %362 = "onnx.MatMul"(%193, %361) {onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/reduce/Conv_97"} : (tensor<6x144xf32>, tensor<?x144x?xf32>) -> tensor<?x6x?xf32>
    %363 = "onnx.Add"(%362, %192) {onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/reduce/Conv_80"} : (tensor<?x6x?xf32>, tensor<1x6x1xf32>) -> tensor<?x6x?xf32>
    %364 = "onnx.Dim"(%358) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/reduce/Conv_107"} : (tensor<?x144x1x1xf32>) -> tensor<1xi64>
    %365 = "onnx.Concat"(%364, %191, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/reduce/Conv_228"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %366 = "onnx.Reshape"(%363, %365) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/reduce/Conv_124"} : (tensor<?x6x?xf32>, tensor<4xi64>) -> tensor<?x6x1x1xf32>
    %367 = "onnx.Sigmoid"(%366) {onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x6x1x1xf32>) -> tensor<?x6x1x1xf32>
    %368 = "onnx.Mul"(%366, %367) {onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/act_reduce/Mul"} : (tensor<?x6x1x1xf32>, tensor<?x6x1x1xf32>) -> tensor<?x6x1x1xf32>
    %369 = "onnx.Dim"(%368) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/expand/Conv_121"} : (tensor<?x6x1x1xf32>) -> tensor<1xi64>
    %370 = "onnx.Concat"(%369, %15, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/expand/Conv_395"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %371 = "onnx.Reshape"(%368, %370) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/expand/Conv_110"} : (tensor<?x6x1x1xf32>, tensor<3xi64>) -> tensor<?x6x?xf32>
    %372 = "onnx.MatMul"(%190, %371) {onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/expand/Conv_70"} : (tensor<144x6xf32>, tensor<?x6x?xf32>) -> tensor<?x144x?xf32>
    %373 = "onnx.Add"(%372, %189) {onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/expand/Conv_430"} : (tensor<?x144x?xf32>, tensor<1x144x1xf32>) -> tensor<?x144x?xf32>
    %374 = "onnx.Dim"(%368) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/expand/Conv_268"} : (tensor<?x6x1x1xf32>) -> tensor<1xi64>
    %375 = "onnx.Concat"(%374, %188, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/expand/Conv_534"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %376 = "onnx.Reshape"(%373, %375) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/expand/Conv_139"} : (tensor<?x144x?xf32>, tensor<4xi64>) -> tensor<?x144x1x1xf32>
    %377 = "onnx.Sigmoid"(%376) {onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x144x1x1xf32>) -> tensor<?x144x1x1xf32>
    %378 = "onnx.Mul"(%357, %377) {onnx_node_name = "/efficientnet/encoder/blocks.2/squeeze_excite/Mul"} : (tensor<?x144x56x56xf32>, tensor<?x144x1x1xf32>) -> tensor<?x144x56x56xf32>
    %379 = "onnx.Dim"(%378) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/projection/project_conv/Conv_280"} : (tensor<?x144x56x56xf32>) -> tensor<1xi64>
    %380 = "onnx.Concat"(%379, %16, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/projection/project_conv/Conv_495"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %381 = "onnx.Reshape"(%378, %380) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/projection/project_conv/Conv_402"} : (tensor<?x144x56x56xf32>, tensor<3xi64>) -> tensor<?x144x?xf32>
    %382 = "onnx.MatMul"(%187, %381) {onnx_node_name = "/efficientnet/encoder/blocks.2/projection/project_conv/Conv_477"} : (tensor<24x144xf32>, tensor<?x144x?xf32>) -> tensor<?x24x?xf32>
    %383 = "onnx.Add"(%382, %186) {onnx_node_name = "/efficientnet/encoder/blocks.2/projection/project_conv/Conv_262"} : (tensor<?x24x?xf32>, tensor<1x24x1xf32>) -> tensor<?x24x?xf32>
    %384 = "onnx.Dim"(%378) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/projection/project_conv/Conv_363"} : (tensor<?x144x56x56xf32>) -> tensor<1xi64>
    %385 = "onnx.Concat"(%384, %185, %18, %18) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/projection/project_conv/Conv_339"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %386 = "onnx.Reshape"(%383, %385) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.2/projection/project_conv/Conv_484"} : (tensor<?x24x?xf32>, tensor<4xi64>) -> tensor<?x24x56x56xf32>
    %387 = "onnx.Add"(%386, %344) {onnx_node_name = "/efficientnet/encoder/blocks.2/projection/Add"} : (tensor<?x24x56x56xf32>, tensor<?x24x56x56xf32>) -> tensor<?x24x56x56xf32>
    %388 = "onnx.Dim"(%387) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_conv/Conv_400"} : (tensor<?x24x56x56xf32>) -> tensor<1xi64>
    %389 = "onnx.Concat"(%388, %17, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_conv/Conv_313"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %390 = "onnx.Reshape"(%387, %389) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_conv/Conv_359"} : (tensor<?x24x56x56xf32>, tensor<3xi64>) -> tensor<?x24x?xf32>
    %391 = "onnx.MatMul"(%184, %390) {onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_conv/Conv_214"} : (tensor<144x24xf32>, tensor<?x24x?xf32>) -> tensor<?x144x?xf32>
    %392 = "onnx.Add"(%391, %183) {onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_conv/Conv_211"} : (tensor<?x144x?xf32>, tensor<1x144x1xf32>) -> tensor<?x144x?xf32>
    %393 = "onnx.Dim"(%387) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_conv/Conv_7"} : (tensor<?x24x56x56xf32>) -> tensor<1xi64>
    %394 = "onnx.Concat"(%393, %182, %18, %18) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_conv/Conv_234"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %395 = "onnx.Reshape"(%392, %394) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_conv/Conv_283"} : (tensor<?x144x?xf32>, tensor<4xi64>) -> tensor<?x144x56x56xf32>
    %396 = "onnx.Sigmoid"(%395) {onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_act/Sigmoid"} : (tensor<?x144x56x56xf32>) -> tensor<?x144x56x56xf32>
    %397 = "onnx.Mul"(%395, %396) {onnx_node_name = "/efficientnet/encoder/blocks.3/expansion/expand_act/Mul"} : (tensor<?x144x56x56xf32>, tensor<?x144x56x56xf32>) -> tensor<?x144x56x56xf32>
    %398 = "onnx.Pad"(%397, %221, %225, %227) {mode = "constant", onnx_node_name = "/efficientnet/encoder/blocks.3/depthwise_conv/depthwise_conv_pad/Pad_518"} : (tensor<?x144x56x56xf32>, tensor<8xi64>, tensor<f32>, none) -> tensor<?x144x59x59xf32>
    %399 = "onnx.Conv"(%398, %239, %240) {auto_pad = "VALID", dilations = [1, 1], group = 144 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.3/depthwise_conv/depthwise_conv/Conv", strides = [2, 2]} : (tensor<?x144x59x59xf32>, tensor<144x1x5x5xf32>, tensor<144xf32>) -> tensor<?x144x28x28xf32>
    %400 = "onnx.Sigmoid"(%399) {onnx_node_name = "/efficientnet/encoder/blocks.3/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x144x28x28xf32>) -> tensor<?x144x28x28xf32>
    %401 = "onnx.Mul"(%399, %400) {onnx_node_name = "/efficientnet/encoder/blocks.3/depthwise_conv/depthwise_act/Mul"} : (tensor<?x144x28x28xf32>, tensor<?x144x28x28xf32>) -> tensor<?x144x28x28xf32>
    %402 = "onnx.ReduceMeanV13"(%401) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/squeeze/GlobalAveragePool_46"} : (tensor<?x144x28x28xf32>) -> tensor<?x144x1x1xf32>
    %403 = "onnx.Dim"(%402) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/reduce/Conv_514"} : (tensor<?x144x1x1xf32>) -> tensor<1xi64>
    %404 = "onnx.Concat"(%403, %16, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/reduce/Conv_273"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %405 = "onnx.Reshape"(%402, %404) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/reduce/Conv_224"} : (tensor<?x144x1x1xf32>, tensor<3xi64>) -> tensor<?x144x?xf32>
    %406 = "onnx.MatMul"(%181, %405) {onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/reduce/Conv_416"} : (tensor<6x144xf32>, tensor<?x144x?xf32>) -> tensor<?x6x?xf32>
    %407 = "onnx.Add"(%406, %180) {onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/reduce/Conv_248"} : (tensor<?x6x?xf32>, tensor<1x6x1xf32>) -> tensor<?x6x?xf32>
    %408 = "onnx.Dim"(%402) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/reduce/Conv_57"} : (tensor<?x144x1x1xf32>) -> tensor<1xi64>
    %409 = "onnx.Concat"(%408, %179, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/reduce/Conv_182"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %410 = "onnx.Reshape"(%407, %409) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/reduce/Conv_453"} : (tensor<?x6x?xf32>, tensor<4xi64>) -> tensor<?x6x1x1xf32>
    %411 = "onnx.Sigmoid"(%410) {onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x6x1x1xf32>) -> tensor<?x6x1x1xf32>
    %412 = "onnx.Mul"(%410, %411) {onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/act_reduce/Mul"} : (tensor<?x6x1x1xf32>, tensor<?x6x1x1xf32>) -> tensor<?x6x1x1xf32>
    %413 = "onnx.Dim"(%412) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/expand/Conv_28"} : (tensor<?x6x1x1xf32>) -> tensor<1xi64>
    %414 = "onnx.Concat"(%413, %15, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/expand/Conv_342"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %415 = "onnx.Reshape"(%412, %414) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/expand/Conv_386"} : (tensor<?x6x1x1xf32>, tensor<3xi64>) -> tensor<?x6x?xf32>
    %416 = "onnx.MatMul"(%178, %415) {onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/expand/Conv_331"} : (tensor<144x6xf32>, tensor<?x6x?xf32>) -> tensor<?x144x?xf32>
    %417 = "onnx.Add"(%416, %177) {onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/expand/Conv_352"} : (tensor<?x144x?xf32>, tensor<1x144x1xf32>) -> tensor<?x144x?xf32>
    %418 = "onnx.Dim"(%412) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/expand/Conv_436"} : (tensor<?x6x1x1xf32>) -> tensor<1xi64>
    %419 = "onnx.Concat"(%418, %176, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/expand/Conv_158"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %420 = "onnx.Reshape"(%417, %419) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/expand/Conv_150"} : (tensor<?x144x?xf32>, tensor<4xi64>) -> tensor<?x144x1x1xf32>
    %421 = "onnx.Sigmoid"(%420) {onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x144x1x1xf32>) -> tensor<?x144x1x1xf32>
    %422 = "onnx.Mul"(%401, %421) {onnx_node_name = "/efficientnet/encoder/blocks.3/squeeze_excite/Mul"} : (tensor<?x144x28x28xf32>, tensor<?x144x1x1xf32>) -> tensor<?x144x28x28xf32>
    %423 = "onnx.Dim"(%422) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv_406"} : (tensor<?x144x28x28xf32>) -> tensor<1xi64>
    %424 = "onnx.Concat"(%423, %16, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv_501"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %425 = "onnx.Reshape"(%422, %424) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv_191"} : (tensor<?x144x28x28xf32>, tensor<3xi64>) -> tensor<?x144x?xf32>
    %426 = "onnx.MatMul"(%175, %425) {onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv_146"} : (tensor<40x144xf32>, tensor<?x144x?xf32>) -> tensor<?x40x?xf32>
    %427 = "onnx.Add"(%426, %174) {onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv_376"} : (tensor<?x40x?xf32>, tensor<1x40x1xf32>) -> tensor<?x40x?xf32>
    %428 = "onnx.Dim"(%422) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv_258"} : (tensor<?x144x28x28xf32>) -> tensor<1xi64>
    %429 = "onnx.Concat"(%428, %173, %14, %14) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv_350"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %430 = "onnx.Reshape"(%427, %429) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv_396"} : (tensor<?x40x?xf32>, tensor<4xi64>) -> tensor<?x40x28x28xf32>
    %431 = "onnx.Dim"(%430) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/expansion/expand_conv/Conv_475"} : (tensor<?x40x28x28xf32>) -> tensor<1xi64>
    %432 = "onnx.Concat"(%431, %13, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv-/efficientnet/encoder/blocks.4/expansion/expand_conv/Conv_383"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %433 = "onnx.Reshape"(%427, %432) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.3/projection/project_conv/Conv-/efficientnet/encoder/blocks.4/expansion/expand_conv/Conv_517"} : (tensor<?x40x?xf32>, tensor<3xi64>) -> tensor<?x40x?xf32>
    %434 = "onnx.MatMul"(%172, %433) {onnx_node_name = "/efficientnet/encoder/blocks.4/expansion/expand_conv/Conv_165"} : (tensor<240x40xf32>, tensor<?x40x?xf32>) -> tensor<?x240x?xf32>
    %435 = "onnx.Add"(%434, %171) {onnx_node_name = "/efficientnet/encoder/blocks.4/expansion/expand_conv/Conv_185"} : (tensor<?x240x?xf32>, tensor<1x240x1xf32>) -> tensor<?x240x?xf32>
    %436 = "onnx.Dim"(%430) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/expansion/expand_conv/Conv_432"} : (tensor<?x40x28x28xf32>) -> tensor<1xi64>
    %437 = "onnx.Concat"(%436, %170, %14, %14) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/expansion/expand_conv/Conv_479"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %438 = "onnx.Reshape"(%435, %437) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/expansion/expand_conv/Conv_261"} : (tensor<?x240x?xf32>, tensor<4xi64>) -> tensor<?x240x28x28xf32>
    %439 = "onnx.Sigmoid"(%438) {onnx_node_name = "/efficientnet/encoder/blocks.4/expansion/expand_act/Sigmoid"} : (tensor<?x240x28x28xf32>) -> tensor<?x240x28x28xf32>
    %440 = "onnx.Mul"(%438, %439) {onnx_node_name = "/efficientnet/encoder/blocks.4/expansion/expand_act/Mul"} : (tensor<?x240x28x28xf32>, tensor<?x240x28x28xf32>) -> tensor<?x240x28x28xf32>
    %441 = "onnx.Conv"(%440, %241, %242) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 240 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.4/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x240x28x28xf32>, tensor<240x1x5x5xf32>, tensor<240xf32>) -> tensor<?x240x28x28xf32>
    %442 = "onnx.Sigmoid"(%441) {onnx_node_name = "/efficientnet/encoder/blocks.4/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x240x28x28xf32>) -> tensor<?x240x28x28xf32>
    %443 = "onnx.Mul"(%441, %442) {onnx_node_name = "/efficientnet/encoder/blocks.4/depthwise_conv/depthwise_act/Mul"} : (tensor<?x240x28x28xf32>, tensor<?x240x28x28xf32>) -> tensor<?x240x28x28xf32>
    %444 = "onnx.ReduceMeanV13"(%443) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/squeeze/GlobalAveragePool_156"} : (tensor<?x240x28x28xf32>) -> tensor<?x240x1x1xf32>
    %445 = "onnx.Dim"(%444) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/reduce/Conv_463"} : (tensor<?x240x1x1xf32>) -> tensor<1xi64>
    %446 = "onnx.Concat"(%445, %12, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/reduce/Conv_524"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %447 = "onnx.Reshape"(%444, %446) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/reduce/Conv_312"} : (tensor<?x240x1x1xf32>, tensor<3xi64>) -> tensor<?x240x?xf32>
    %448 = "onnx.MatMul"(%169, %447) {onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/reduce/Conv_494"} : (tensor<10x240xf32>, tensor<?x240x?xf32>) -> tensor<?x10x?xf32>
    %449 = "onnx.Add"(%448, %168) {onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/reduce/Conv_507"} : (tensor<?x10x?xf32>, tensor<1x10x1xf32>) -> tensor<?x10x?xf32>
    %450 = "onnx.Dim"(%444) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/reduce/Conv_455"} : (tensor<?x240x1x1xf32>) -> tensor<1xi64>
    %451 = "onnx.Concat"(%450, %167, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/reduce/Conv_187"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %452 = "onnx.Reshape"(%449, %451) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/reduce/Conv_504"} : (tensor<?x10x?xf32>, tensor<4xi64>) -> tensor<?x10x1x1xf32>
    %453 = "onnx.Sigmoid"(%452) {onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x10x1x1xf32>) -> tensor<?x10x1x1xf32>
    %454 = "onnx.Mul"(%452, %453) {onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/act_reduce/Mul"} : (tensor<?x10x1x1xf32>, tensor<?x10x1x1xf32>) -> tensor<?x10x1x1xf32>
    %455 = "onnx.Dim"(%454) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/expand/Conv_305"} : (tensor<?x10x1x1xf32>) -> tensor<1xi64>
    %456 = "onnx.Concat"(%455, %11, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/expand/Conv_303"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %457 = "onnx.Reshape"(%454, %456) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/expand/Conv_424"} : (tensor<?x10x1x1xf32>, tensor<3xi64>) -> tensor<?x10x?xf32>
    %458 = "onnx.MatMul"(%166, %457) {onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/expand/Conv_445"} : (tensor<240x10xf32>, tensor<?x10x?xf32>) -> tensor<?x240x?xf32>
    %459 = "onnx.Add"(%458, %165) {onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/expand/Conv_79"} : (tensor<?x240x?xf32>, tensor<1x240x1xf32>) -> tensor<?x240x?xf32>
    %460 = "onnx.Dim"(%454) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/expand/Conv_64"} : (tensor<?x10x1x1xf32>) -> tensor<1xi64>
    %461 = "onnx.Concat"(%460, %164, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/expand/Conv_358"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %462 = "onnx.Reshape"(%459, %461) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/expand/Conv_24"} : (tensor<?x240x?xf32>, tensor<4xi64>) -> tensor<?x240x1x1xf32>
    %463 = "onnx.Sigmoid"(%462) {onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x240x1x1xf32>) -> tensor<?x240x1x1xf32>
    %464 = "onnx.Mul"(%443, %463) {onnx_node_name = "/efficientnet/encoder/blocks.4/squeeze_excite/Mul"} : (tensor<?x240x28x28xf32>, tensor<?x240x1x1xf32>) -> tensor<?x240x28x28xf32>
    %465 = "onnx.Dim"(%464) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/projection/project_conv/Conv_126"} : (tensor<?x240x28x28xf32>) -> tensor<1xi64>
    %466 = "onnx.Concat"(%465, %12, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/projection/project_conv/Conv_123"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %467 = "onnx.Reshape"(%464, %466) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/projection/project_conv/Conv_71"} : (tensor<?x240x28x28xf32>, tensor<3xi64>) -> tensor<?x240x?xf32>
    %468 = "onnx.MatMul"(%163, %467) {onnx_node_name = "/efficientnet/encoder/blocks.4/projection/project_conv/Conv_309"} : (tensor<40x240xf32>, tensor<?x240x?xf32>) -> tensor<?x40x?xf32>
    %469 = "onnx.Add"(%468, %162) {onnx_node_name = "/efficientnet/encoder/blocks.4/projection/project_conv/Conv_471"} : (tensor<?x40x?xf32>, tensor<1x40x1xf32>) -> tensor<?x40x?xf32>
    %470 = "onnx.Dim"(%464) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/projection/project_conv/Conv_212"} : (tensor<?x240x28x28xf32>) -> tensor<1xi64>
    %471 = "onnx.Concat"(%470, %161, %14, %14) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/projection/project_conv/Conv_365"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %472 = "onnx.Reshape"(%469, %471) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.4/projection/project_conv/Conv_263"} : (tensor<?x40x?xf32>, tensor<4xi64>) -> tensor<?x40x28x28xf32>
    %473 = "onnx.Add"(%472, %430) {onnx_node_name = "/efficientnet/encoder/blocks.4/projection/Add"} : (tensor<?x40x28x28xf32>, tensor<?x40x28x28xf32>) -> tensor<?x40x28x28xf32>
    %474 = "onnx.Dim"(%473) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_conv/Conv_37"} : (tensor<?x40x28x28xf32>) -> tensor<1xi64>
    %475 = "onnx.Concat"(%474, %13, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_conv/Conv_42"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %476 = "onnx.Reshape"(%473, %475) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_conv/Conv_40"} : (tensor<?x40x28x28xf32>, tensor<3xi64>) -> tensor<?x40x?xf32>
    %477 = "onnx.MatMul"(%160, %476) {onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_conv/Conv_177"} : (tensor<240x40xf32>, tensor<?x40x?xf32>) -> tensor<?x240x?xf32>
    %478 = "onnx.Add"(%477, %159) {onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_conv/Conv_119"} : (tensor<?x240x?xf32>, tensor<1x240x1xf32>) -> tensor<?x240x?xf32>
    %479 = "onnx.Dim"(%473) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_conv/Conv_120"} : (tensor<?x40x28x28xf32>) -> tensor<1xi64>
    %480 = "onnx.Concat"(%479, %158, %14, %14) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_conv/Conv_141"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %481 = "onnx.Reshape"(%478, %480) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_conv/Conv_343"} : (tensor<?x240x?xf32>, tensor<4xi64>) -> tensor<?x240x28x28xf32>
    %482 = "onnx.Sigmoid"(%481) {onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_act/Sigmoid"} : (tensor<?x240x28x28xf32>) -> tensor<?x240x28x28xf32>
    %483 = "onnx.Mul"(%481, %482) {onnx_node_name = "/efficientnet/encoder/blocks.5/expansion/expand_act/Mul"} : (tensor<?x240x28x28xf32>, tensor<?x240x28x28xf32>) -> tensor<?x240x28x28xf32>
    %484 = "onnx.Pad"(%483, %220, %224, %227) {mode = "constant", onnx_node_name = "/efficientnet/encoder/blocks.5/depthwise_conv/depthwise_conv_pad/Pad_73"} : (tensor<?x240x28x28xf32>, tensor<8xi64>, tensor<f32>, none) -> tensor<?x240x29x29xf32>
    %485 = "onnx.Conv"(%484, %243, %244) {auto_pad = "VALID", dilations = [1, 1], group = 240 : si64, kernel_shape = [3, 3], onnx_node_name = "/efficientnet/encoder/blocks.5/depthwise_conv/depthwise_conv/Conv", strides = [2, 2]} : (tensor<?x240x29x29xf32>, tensor<240x1x3x3xf32>, tensor<240xf32>) -> tensor<?x240x14x14xf32>
    %486 = "onnx.Sigmoid"(%485) {onnx_node_name = "/efficientnet/encoder/blocks.5/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x240x14x14xf32>) -> tensor<?x240x14x14xf32>
    %487 = "onnx.Mul"(%485, %486) {onnx_node_name = "/efficientnet/encoder/blocks.5/depthwise_conv/depthwise_act/Mul"} : (tensor<?x240x14x14xf32>, tensor<?x240x14x14xf32>) -> tensor<?x240x14x14xf32>
    %488 = "onnx.ReduceMeanV13"(%487) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/squeeze/GlobalAveragePool_90"} : (tensor<?x240x14x14xf32>) -> tensor<?x240x1x1xf32>
    %489 = "onnx.Dim"(%488) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/reduce/Conv_108"} : (tensor<?x240x1x1xf32>) -> tensor<1xi64>
    %490 = "onnx.Concat"(%489, %12, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/reduce/Conv_196"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %491 = "onnx.Reshape"(%488, %490) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/reduce/Conv_249"} : (tensor<?x240x1x1xf32>, tensor<3xi64>) -> tensor<?x240x?xf32>
    %492 = "onnx.MatMul"(%157, %491) {onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/reduce/Conv_84"} : (tensor<10x240xf32>, tensor<?x240x?xf32>) -> tensor<?x10x?xf32>
    %493 = "onnx.Add"(%492, %156) {onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/reduce/Conv_242"} : (tensor<?x10x?xf32>, tensor<1x10x1xf32>) -> tensor<?x10x?xf32>
    %494 = "onnx.Dim"(%488) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/reduce/Conv_41"} : (tensor<?x240x1x1xf32>) -> tensor<1xi64>
    %495 = "onnx.Concat"(%494, %155, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/reduce/Conv_297"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %496 = "onnx.Reshape"(%493, %495) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/reduce/Conv_189"} : (tensor<?x10x?xf32>, tensor<4xi64>) -> tensor<?x10x1x1xf32>
    %497 = "onnx.Sigmoid"(%496) {onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x10x1x1xf32>) -> tensor<?x10x1x1xf32>
    %498 = "onnx.Mul"(%496, %497) {onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/act_reduce/Mul"} : (tensor<?x10x1x1xf32>, tensor<?x10x1x1xf32>) -> tensor<?x10x1x1xf32>
    %499 = "onnx.Dim"(%498) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/expand/Conv_53"} : (tensor<?x10x1x1xf32>) -> tensor<1xi64>
    %500 = "onnx.Concat"(%499, %11, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/expand/Conv_451"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %501 = "onnx.Reshape"(%498, %500) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/expand/Conv_269"} : (tensor<?x10x1x1xf32>, tensor<3xi64>) -> tensor<?x10x?xf32>
    %502 = "onnx.MatMul"(%154, %501) {onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/expand/Conv_200"} : (tensor<240x10xf32>, tensor<?x10x?xf32>) -> tensor<?x240x?xf32>
    %503 = "onnx.Add"(%502, %153) {onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/expand/Conv_132"} : (tensor<?x240x?xf32>, tensor<1x240x1xf32>) -> tensor<?x240x?xf32>
    %504 = "onnx.Dim"(%498) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/expand/Conv_390"} : (tensor<?x10x1x1xf32>) -> tensor<1xi64>
    %505 = "onnx.Concat"(%504, %152, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/expand/Conv_135"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %506 = "onnx.Reshape"(%503, %505) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/expand/Conv_195"} : (tensor<?x240x?xf32>, tensor<4xi64>) -> tensor<?x240x1x1xf32>
    %507 = "onnx.Sigmoid"(%506) {onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x240x1x1xf32>) -> tensor<?x240x1x1xf32>
    %508 = "onnx.Mul"(%487, %507) {onnx_node_name = "/efficientnet/encoder/blocks.5/squeeze_excite/Mul"} : (tensor<?x240x14x14xf32>, tensor<?x240x1x1xf32>) -> tensor<?x240x14x14xf32>
    %509 = "onnx.Dim"(%508) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv_346"} : (tensor<?x240x14x14xf32>) -> tensor<1xi64>
    %510 = "onnx.Concat"(%509, %12, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv_201"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %511 = "onnx.Reshape"(%508, %510) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv_151"} : (tensor<?x240x14x14xf32>, tensor<3xi64>) -> tensor<?x240x?xf32>
    %512 = "onnx.MatMul"(%151, %511) {onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv_209"} : (tensor<80x240xf32>, tensor<?x240x?xf32>) -> tensor<?x80x?xf32>
    %513 = "onnx.Add"(%512, %150) {onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv_94"} : (tensor<?x80x?xf32>, tensor<1x80x1xf32>) -> tensor<?x80x?xf32>
    %514 = "onnx.Dim"(%508) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv_203"} : (tensor<?x240x14x14xf32>) -> tensor<1xi64>
    %515 = "onnx.Concat"(%514, %149, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv_226"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %516 = "onnx.Reshape"(%513, %515) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv_468"} : (tensor<?x80x?xf32>, tensor<4xi64>) -> tensor<?x80x14x14xf32>
    %517 = "onnx.Dim"(%516) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/expansion/expand_conv/Conv_17"} : (tensor<?x80x14x14xf32>) -> tensor<1xi64>
    %518 = "onnx.Concat"(%517, %9, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv-/efficientnet/encoder/blocks.6/expansion/expand_conv/Conv_457"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %519 = "onnx.Reshape"(%513, %518) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.5/projection/project_conv/Conv-/efficientnet/encoder/blocks.6/expansion/expand_conv/Conv_364"} : (tensor<?x80x?xf32>, tensor<3xi64>) -> tensor<?x80x?xf32>
    %520 = "onnx.MatMul"(%148, %519) {onnx_node_name = "/efficientnet/encoder/blocks.6/expansion/expand_conv/Conv_227"} : (tensor<480x80xf32>, tensor<?x80x?xf32>) -> tensor<?x480x?xf32>
    %521 = "onnx.Add"(%520, %147) {onnx_node_name = "/efficientnet/encoder/blocks.6/expansion/expand_conv/Conv_172"} : (tensor<?x480x?xf32>, tensor<1x480x1xf32>) -> tensor<?x480x?xf32>
    %522 = "onnx.Dim"(%516) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/expansion/expand_conv/Conv_186"} : (tensor<?x80x14x14xf32>) -> tensor<1xi64>
    %523 = "onnx.Concat"(%522, %146, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/expansion/expand_conv/Conv_235"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %524 = "onnx.Reshape"(%521, %523) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/expansion/expand_conv/Conv_422"} : (tensor<?x480x?xf32>, tensor<4xi64>) -> tensor<?x480x14x14xf32>
    %525 = "onnx.Sigmoid"(%524) {onnx_node_name = "/efficientnet/encoder/blocks.6/expansion/expand_act/Sigmoid"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %526 = "onnx.Mul"(%524, %525) {onnx_node_name = "/efficientnet/encoder/blocks.6/expansion/expand_act/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %527 = "onnx.Conv"(%526, %245, %246) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 480 : si64, kernel_shape = [3, 3], onnx_node_name = "/efficientnet/encoder/blocks.6/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x480x14x14xf32>, tensor<480x1x3x3xf32>, tensor<480xf32>) -> tensor<?x480x14x14xf32>
    %528 = "onnx.Sigmoid"(%527) {onnx_node_name = "/efficientnet/encoder/blocks.6/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %529 = "onnx.Mul"(%527, %528) {onnx_node_name = "/efficientnet/encoder/blocks.6/depthwise_conv/depthwise_act/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %530 = "onnx.ReduceMeanV13"(%529) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/squeeze/GlobalAveragePool_193"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x1x1xf32>
    %531 = "onnx.Dim"(%530) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/reduce/Conv_56"} : (tensor<?x480x1x1xf32>) -> tensor<1xi64>
    %532 = "onnx.Concat"(%531, %8, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/reduce/Conv_251"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %533 = "onnx.Reshape"(%530, %532) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/reduce/Conv_161"} : (tensor<?x480x1x1xf32>, tensor<3xi64>) -> tensor<?x480x?xf32>
    %534 = "onnx.MatMul"(%145, %533) {onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/reduce/Conv_220"} : (tensor<20x480xf32>, tensor<?x480x?xf32>) -> tensor<?x20x?xf32>
    %535 = "onnx.Add"(%534, %144) {onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/reduce/Conv_278"} : (tensor<?x20x?xf32>, tensor<1x20x1xf32>) -> tensor<?x20x?xf32>
    %536 = "onnx.Dim"(%530) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/reduce/Conv_232"} : (tensor<?x480x1x1xf32>) -> tensor<1xi64>
    %537 = "onnx.Concat"(%536, %143, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/reduce/Conv_330"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %538 = "onnx.Reshape"(%535, %537) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/reduce/Conv_439"} : (tensor<?x20x?xf32>, tensor<4xi64>) -> tensor<?x20x1x1xf32>
    %539 = "onnx.Sigmoid"(%538) {onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x20x1x1xf32>) -> tensor<?x20x1x1xf32>
    %540 = "onnx.Mul"(%538, %539) {onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/act_reduce/Mul"} : (tensor<?x20x1x1xf32>, tensor<?x20x1x1xf32>) -> tensor<?x20x1x1xf32>
    %541 = "onnx.Dim"(%540) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/expand/Conv_394"} : (tensor<?x20x1x1xf32>) -> tensor<1xi64>
    %542 = "onnx.Concat"(%541, %7, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/expand/Conv_245"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %543 = "onnx.Reshape"(%540, %542) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/expand/Conv_145"} : (tensor<?x20x1x1xf32>, tensor<3xi64>) -> tensor<?x20x?xf32>
    %544 = "onnx.MatMul"(%142, %543) {onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/expand/Conv_489"} : (tensor<480x20xf32>, tensor<?x20x?xf32>) -> tensor<?x480x?xf32>
    %545 = "onnx.Add"(%544, %141) {onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/expand/Conv_334"} : (tensor<?x480x?xf32>, tensor<1x480x1xf32>) -> tensor<?x480x?xf32>
    %546 = "onnx.Dim"(%540) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/expand/Conv_63"} : (tensor<?x20x1x1xf32>) -> tensor<1xi64>
    %547 = "onnx.Concat"(%546, %140, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/expand/Conv_49"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %548 = "onnx.Reshape"(%545, %547) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/expand/Conv_127"} : (tensor<?x480x?xf32>, tensor<4xi64>) -> tensor<?x480x1x1xf32>
    %549 = "onnx.Sigmoid"(%548) {onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x480x1x1xf32>) -> tensor<?x480x1x1xf32>
    %550 = "onnx.Mul"(%529, %549) {onnx_node_name = "/efficientnet/encoder/blocks.6/squeeze_excite/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x1x1xf32>) -> tensor<?x480x14x14xf32>
    %551 = "onnx.Dim"(%550) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/projection/project_conv/Conv_8"} : (tensor<?x480x14x14xf32>) -> tensor<1xi64>
    %552 = "onnx.Concat"(%551, %8, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/projection/project_conv/Conv_140"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %553 = "onnx.Reshape"(%550, %552) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/projection/project_conv/Conv_294"} : (tensor<?x480x14x14xf32>, tensor<3xi64>) -> tensor<?x480x?xf32>
    %554 = "onnx.MatMul"(%139, %553) {onnx_node_name = "/efficientnet/encoder/blocks.6/projection/project_conv/Conv_307"} : (tensor<80x480xf32>, tensor<?x480x?xf32>) -> tensor<?x80x?xf32>
    %555 = "onnx.Add"(%554, %138) {onnx_node_name = "/efficientnet/encoder/blocks.6/projection/project_conv/Conv_368"} : (tensor<?x80x?xf32>, tensor<1x80x1xf32>) -> tensor<?x80x?xf32>
    %556 = "onnx.Dim"(%550) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/projection/project_conv/Conv_168"} : (tensor<?x480x14x14xf32>) -> tensor<1xi64>
    %557 = "onnx.Concat"(%556, %137, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/projection/project_conv/Conv_27"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %558 = "onnx.Reshape"(%555, %557) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.6/projection/project_conv/Conv_407"} : (tensor<?x80x?xf32>, tensor<4xi64>) -> tensor<?x80x14x14xf32>
    %559 = "onnx.Add"(%558, %516) {onnx_node_name = "/efficientnet/encoder/blocks.6/projection/Add"} : (tensor<?x80x14x14xf32>, tensor<?x80x14x14xf32>) -> tensor<?x80x14x14xf32>
    %560 = "onnx.Dim"(%559) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_conv/Conv_66"} : (tensor<?x80x14x14xf32>) -> tensor<1xi64>
    %561 = "onnx.Concat"(%560, %9, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_conv/Conv_399"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %562 = "onnx.Reshape"(%559, %561) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_conv/Conv_410"} : (tensor<?x80x14x14xf32>, tensor<3xi64>) -> tensor<?x80x?xf32>
    %563 = "onnx.MatMul"(%136, %562) {onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_conv/Conv_14"} : (tensor<480x80xf32>, tensor<?x80x?xf32>) -> tensor<?x480x?xf32>
    %564 = "onnx.Add"(%563, %135) {onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_conv/Conv_205"} : (tensor<?x480x?xf32>, tensor<1x480x1xf32>) -> tensor<?x480x?xf32>
    %565 = "onnx.Dim"(%559) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_conv/Conv_114"} : (tensor<?x80x14x14xf32>) -> tensor<1xi64>
    %566 = "onnx.Concat"(%565, %134, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_conv/Conv_302"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %567 = "onnx.Reshape"(%564, %566) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_conv/Conv_118"} : (tensor<?x480x?xf32>, tensor<4xi64>) -> tensor<?x480x14x14xf32>
    %568 = "onnx.Sigmoid"(%567) {onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_act/Sigmoid"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %569 = "onnx.Mul"(%567, %568) {onnx_node_name = "/efficientnet/encoder/blocks.7/expansion/expand_act/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %570 = "onnx.Conv"(%569, %247, %248) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 480 : si64, kernel_shape = [3, 3], onnx_node_name = "/efficientnet/encoder/blocks.7/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x480x14x14xf32>, tensor<480x1x3x3xf32>, tensor<480xf32>) -> tensor<?x480x14x14xf32>
    %571 = "onnx.Sigmoid"(%570) {onnx_node_name = "/efficientnet/encoder/blocks.7/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %572 = "onnx.Mul"(%570, %571) {onnx_node_name = "/efficientnet/encoder/blocks.7/depthwise_conv/depthwise_act/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %573 = "onnx.ReduceMeanV13"(%572) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/squeeze/GlobalAveragePool_243"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x1x1xf32>
    %574 = "onnx.Dim"(%573) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/reduce/Conv_137"} : (tensor<?x480x1x1xf32>) -> tensor<1xi64>
    %575 = "onnx.Concat"(%574, %8, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/reduce/Conv_98"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %576 = "onnx.Reshape"(%573, %575) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/reduce/Conv_5"} : (tensor<?x480x1x1xf32>, tensor<3xi64>) -> tensor<?x480x?xf32>
    %577 = "onnx.MatMul"(%133, %576) {onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/reduce/Conv_219"} : (tensor<20x480xf32>, tensor<?x480x?xf32>) -> tensor<?x20x?xf32>
    %578 = "onnx.Add"(%577, %132) {onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/reduce/Conv_299"} : (tensor<?x20x?xf32>, tensor<1x20x1xf32>) -> tensor<?x20x?xf32>
    %579 = "onnx.Dim"(%573) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/reduce/Conv_91"} : (tensor<?x480x1x1xf32>) -> tensor<1xi64>
    %580 = "onnx.Concat"(%579, %131, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/reduce/Conv_178"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %581 = "onnx.Reshape"(%578, %580) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/reduce/Conv_116"} : (tensor<?x20x?xf32>, tensor<4xi64>) -> tensor<?x20x1x1xf32>
    %582 = "onnx.Sigmoid"(%581) {onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x20x1x1xf32>) -> tensor<?x20x1x1xf32>
    %583 = "onnx.Mul"(%581, %582) {onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/act_reduce/Mul"} : (tensor<?x20x1x1xf32>, tensor<?x20x1x1xf32>) -> tensor<?x20x1x1xf32>
    %584 = "onnx.Dim"(%583) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/expand/Conv_202"} : (tensor<?x20x1x1xf32>) -> tensor<1xi64>
    %585 = "onnx.Concat"(%584, %7, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/expand/Conv_230"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %586 = "onnx.Reshape"(%583, %585) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/expand/Conv_215"} : (tensor<?x20x1x1xf32>, tensor<3xi64>) -> tensor<?x20x?xf32>
    %587 = "onnx.MatMul"(%130, %586) {onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/expand/Conv_513"} : (tensor<480x20xf32>, tensor<?x20x?xf32>) -> tensor<?x480x?xf32>
    %588 = "onnx.Add"(%587, %129) {onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/expand/Conv_136"} : (tensor<?x480x?xf32>, tensor<1x480x1xf32>) -> tensor<?x480x?xf32>
    %589 = "onnx.Dim"(%583) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/expand/Conv_190"} : (tensor<?x20x1x1xf32>) -> tensor<1xi64>
    %590 = "onnx.Concat"(%589, %128, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/expand/Conv_380"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %591 = "onnx.Reshape"(%588, %590) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/expand/Conv_75"} : (tensor<?x480x?xf32>, tensor<4xi64>) -> tensor<?x480x1x1xf32>
    %592 = "onnx.Sigmoid"(%591) {onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x480x1x1xf32>) -> tensor<?x480x1x1xf32>
    %593 = "onnx.Mul"(%572, %592) {onnx_node_name = "/efficientnet/encoder/blocks.7/squeeze_excite/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x1x1xf32>) -> tensor<?x480x14x14xf32>
    %594 = "onnx.Dim"(%593) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/projection/project_conv/Conv_231"} : (tensor<?x480x14x14xf32>) -> tensor<1xi64>
    %595 = "onnx.Concat"(%594, %8, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/projection/project_conv/Conv_377"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %596 = "onnx.Reshape"(%593, %595) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/projection/project_conv/Conv_106"} : (tensor<?x480x14x14xf32>, tensor<3xi64>) -> tensor<?x480x?xf32>
    %597 = "onnx.MatMul"(%127, %596) {onnx_node_name = "/efficientnet/encoder/blocks.7/projection/project_conv/Conv_308"} : (tensor<80x480xf32>, tensor<?x480x?xf32>) -> tensor<?x80x?xf32>
    %598 = "onnx.Add"(%597, %126) {onnx_node_name = "/efficientnet/encoder/blocks.7/projection/project_conv/Conv_30"} : (tensor<?x80x?xf32>, tensor<1x80x1xf32>) -> tensor<?x80x?xf32>
    %599 = "onnx.Dim"(%593) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/projection/project_conv/Conv_31"} : (tensor<?x480x14x14xf32>) -> tensor<1xi64>
    %600 = "onnx.Concat"(%599, %125, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/projection/project_conv/Conv_45"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %601 = "onnx.Reshape"(%598, %600) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.7/projection/project_conv/Conv_18"} : (tensor<?x80x?xf32>, tensor<4xi64>) -> tensor<?x80x14x14xf32>
    %602 = "onnx.Add"(%601, %559) {onnx_node_name = "/efficientnet/encoder/blocks.7/projection/Add"} : (tensor<?x80x14x14xf32>, tensor<?x80x14x14xf32>) -> tensor<?x80x14x14xf32>
    %603 = "onnx.Dim"(%602) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_conv/Conv_229"} : (tensor<?x80x14x14xf32>) -> tensor<1xi64>
    %604 = "onnx.Concat"(%603, %9, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_conv/Conv_241"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %605 = "onnx.Reshape"(%602, %604) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_conv/Conv_381"} : (tensor<?x80x14x14xf32>, tensor<3xi64>) -> tensor<?x80x?xf32>
    %606 = "onnx.MatMul"(%124, %605) {onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_conv/Conv_157"} : (tensor<480x80xf32>, tensor<?x80x?xf32>) -> tensor<?x480x?xf32>
    %607 = "onnx.Add"(%606, %123) {onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_conv/Conv_62"} : (tensor<?x480x?xf32>, tensor<1x480x1xf32>) -> tensor<?x480x?xf32>
    %608 = "onnx.Dim"(%602) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_conv/Conv_10"} : (tensor<?x80x14x14xf32>) -> tensor<1xi64>
    %609 = "onnx.Concat"(%608, %122, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_conv/Conv_36"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %610 = "onnx.Reshape"(%607, %609) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_conv/Conv_315"} : (tensor<?x480x?xf32>, tensor<4xi64>) -> tensor<?x480x14x14xf32>
    %611 = "onnx.Sigmoid"(%610) {onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_act/Sigmoid"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %612 = "onnx.Mul"(%610, %611) {onnx_node_name = "/efficientnet/encoder/blocks.8/expansion/expand_act/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %613 = "onnx.Conv"(%612, %249, %250) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 480 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.8/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x480x14x14xf32>, tensor<480x1x5x5xf32>, tensor<480xf32>) -> tensor<?x480x14x14xf32>
    %614 = "onnx.Sigmoid"(%613) {onnx_node_name = "/efficientnet/encoder/blocks.8/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %615 = "onnx.Mul"(%613, %614) {onnx_node_name = "/efficientnet/encoder/blocks.8/depthwise_conv/depthwise_act/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x14x14xf32>) -> tensor<?x480x14x14xf32>
    %616 = "onnx.ReduceMeanV13"(%615) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/squeeze/GlobalAveragePool_327"} : (tensor<?x480x14x14xf32>) -> tensor<?x480x1x1xf32>
    %617 = "onnx.Dim"(%616) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/reduce/Conv_129"} : (tensor<?x480x1x1xf32>) -> tensor<1xi64>
    %618 = "onnx.Concat"(%617, %8, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/reduce/Conv_183"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %619 = "onnx.Reshape"(%616, %618) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/reduce/Conv_233"} : (tensor<?x480x1x1xf32>, tensor<3xi64>) -> tensor<?x480x?xf32>
    %620 = "onnx.MatMul"(%121, %619) {onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/reduce/Conv_38"} : (tensor<20x480xf32>, tensor<?x480x?xf32>) -> tensor<?x20x?xf32>
    %621 = "onnx.Add"(%620, %120) {onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/reduce/Conv_111"} : (tensor<?x20x?xf32>, tensor<1x20x1xf32>) -> tensor<?x20x?xf32>
    %622 = "onnx.Dim"(%616) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/reduce/Conv_179"} : (tensor<?x480x1x1xf32>) -> tensor<1xi64>
    %623 = "onnx.Concat"(%622, %119, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/reduce/Conv_321"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %624 = "onnx.Reshape"(%621, %623) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/reduce/Conv_264"} : (tensor<?x20x?xf32>, tensor<4xi64>) -> tensor<?x20x1x1xf32>
    %625 = "onnx.Sigmoid"(%624) {onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x20x1x1xf32>) -> tensor<?x20x1x1xf32>
    %626 = "onnx.Mul"(%624, %625) {onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/act_reduce/Mul"} : (tensor<?x20x1x1xf32>, tensor<?x20x1x1xf32>) -> tensor<?x20x1x1xf32>
    %627 = "onnx.Dim"(%626) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/expand/Conv_254"} : (tensor<?x20x1x1xf32>) -> tensor<1xi64>
    %628 = "onnx.Concat"(%627, %7, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/expand/Conv_388"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %629 = "onnx.Reshape"(%626, %628) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/expand/Conv_271"} : (tensor<?x20x1x1xf32>, tensor<3xi64>) -> tensor<?x20x?xf32>
    %630 = "onnx.MatMul"(%118, %629) {onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/expand/Conv_480"} : (tensor<480x20xf32>, tensor<?x20x?xf32>) -> tensor<?x480x?xf32>
    %631 = "onnx.Add"(%630, %117) {onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/expand/Conv_523"} : (tensor<?x480x?xf32>, tensor<1x480x1xf32>) -> tensor<?x480x?xf32>
    %632 = "onnx.Dim"(%626) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/expand/Conv_163"} : (tensor<?x20x1x1xf32>) -> tensor<1xi64>
    %633 = "onnx.Concat"(%632, %116, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/expand/Conv_164"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %634 = "onnx.Reshape"(%631, %633) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/expand/Conv_530"} : (tensor<?x480x?xf32>, tensor<4xi64>) -> tensor<?x480x1x1xf32>
    %635 = "onnx.Sigmoid"(%634) {onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x480x1x1xf32>) -> tensor<?x480x1x1xf32>
    %636 = "onnx.Mul"(%615, %635) {onnx_node_name = "/efficientnet/encoder/blocks.8/squeeze_excite/Mul"} : (tensor<?x480x14x14xf32>, tensor<?x480x1x1xf32>) -> tensor<?x480x14x14xf32>
    %637 = "onnx.Dim"(%636) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv_194"} : (tensor<?x480x14x14xf32>) -> tensor<1xi64>
    %638 = "onnx.Concat"(%637, %8, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv_1"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %639 = "onnx.Reshape"(%636, %638) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv_508"} : (tensor<?x480x14x14xf32>, tensor<3xi64>) -> tensor<?x480x?xf32>
    %640 = "onnx.MatMul"(%115, %639) {onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv_143"} : (tensor<112x480xf32>, tensor<?x480x?xf32>) -> tensor<?x112x?xf32>
    %641 = "onnx.Add"(%640, %114) {onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv_184"} : (tensor<?x112x?xf32>, tensor<1x112x1xf32>) -> tensor<?x112x?xf32>
    %642 = "onnx.Dim"(%636) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv_367"} : (tensor<?x480x14x14xf32>) -> tensor<1xi64>
    %643 = "onnx.Concat"(%642, %113, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv_88"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %644 = "onnx.Reshape"(%641, %643) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv_171"} : (tensor<?x112x?xf32>, tensor<4xi64>) -> tensor<?x112x14x14xf32>
    %645 = "onnx.Dim"(%644) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/expansion/expand_conv/Conv_371"} : (tensor<?x112x14x14xf32>) -> tensor<1xi64>
    %646 = "onnx.Concat"(%645, %22, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv-/efficientnet/encoder/blocks.9/expansion/expand_conv/Conv_328"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %647 = "onnx.Reshape"(%641, %646) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.8/projection/project_conv/Conv-/efficientnet/encoder/blocks.9/expansion/expand_conv/Conv_419"} : (tensor<?x112x?xf32>, tensor<3xi64>) -> tensor<?x112x?xf32>
    %648 = "onnx.MatMul"(%112, %647) {onnx_node_name = "/efficientnet/encoder/blocks.9/expansion/expand_conv/Conv_434"} : (tensor<672x112xf32>, tensor<?x112x?xf32>) -> tensor<?x672x?xf32>
    %649 = "onnx.Add"(%648, %111) {onnx_node_name = "/efficientnet/encoder/blocks.9/expansion/expand_conv/Conv_81"} : (tensor<?x672x?xf32>, tensor<1x672x1xf32>) -> tensor<?x672x?xf32>
    %650 = "onnx.Dim"(%644) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/expansion/expand_conv/Conv_292"} : (tensor<?x112x14x14xf32>) -> tensor<1xi64>
    %651 = "onnx.Concat"(%650, %110, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/expansion/expand_conv/Conv_67"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %652 = "onnx.Reshape"(%649, %651) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/expansion/expand_conv/Conv_134"} : (tensor<?x672x?xf32>, tensor<4xi64>) -> tensor<?x672x14x14xf32>
    %653 = "onnx.Sigmoid"(%652) {onnx_node_name = "/efficientnet/encoder/blocks.9/expansion/expand_act/Sigmoid"} : (tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %654 = "onnx.Mul"(%652, %653) {onnx_node_name = "/efficientnet/encoder/blocks.9/expansion/expand_act/Mul"} : (tensor<?x672x14x14xf32>, tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %655 = "onnx.Conv"(%654, %251, %252) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 672 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.9/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x672x14x14xf32>, tensor<672x1x5x5xf32>, tensor<672xf32>) -> tensor<?x672x14x14xf32>
    %656 = "onnx.Sigmoid"(%655) {onnx_node_name = "/efficientnet/encoder/blocks.9/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %657 = "onnx.Mul"(%655, %656) {onnx_node_name = "/efficientnet/encoder/blocks.9/depthwise_conv/depthwise_act/Mul"} : (tensor<?x672x14x14xf32>, tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %658 = "onnx.ReduceMeanV13"(%657) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/squeeze/GlobalAveragePool_520"} : (tensor<?x672x14x14xf32>) -> tensor<?x672x1x1xf32>
    %659 = "onnx.Dim"(%658) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/reduce/Conv_357"} : (tensor<?x672x1x1xf32>) -> tensor<1xi64>
    %660 = "onnx.Concat"(%659, %6, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/reduce/Conv_32"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %661 = "onnx.Reshape"(%658, %660) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/reduce/Conv_353"} : (tensor<?x672x1x1xf32>, tensor<3xi64>) -> tensor<?x672x?xf32>
    %662 = "onnx.MatMul"(%109, %661) {onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/reduce/Conv_409"} : (tensor<28x672xf32>, tensor<?x672x?xf32>) -> tensor<?x28x?xf32>
    %663 = "onnx.Add"(%662, %108) {onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/reduce/Conv_528"} : (tensor<?x28x?xf32>, tensor<1x28x1xf32>) -> tensor<?x28x?xf32>
    %664 = "onnx.Dim"(%658) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/reduce/Conv_532"} : (tensor<?x672x1x1xf32>) -> tensor<1xi64>
    %665 = "onnx.Concat"(%664, %107, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/reduce/Conv_125"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %666 = "onnx.Reshape"(%663, %665) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/reduce/Conv_505"} : (tensor<?x28x?xf32>, tensor<4xi64>) -> tensor<?x28x1x1xf32>
    %667 = "onnx.Sigmoid"(%666) {onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x28x1x1xf32>) -> tensor<?x28x1x1xf32>
    %668 = "onnx.Mul"(%666, %667) {onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/act_reduce/Mul"} : (tensor<?x28x1x1xf32>, tensor<?x28x1x1xf32>) -> tensor<?x28x1x1xf32>
    %669 = "onnx.Dim"(%668) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/expand/Conv_236"} : (tensor<?x28x1x1xf32>) -> tensor<1xi64>
    %670 = "onnx.Concat"(%669, %14, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/expand/Conv_100"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %671 = "onnx.Reshape"(%668, %670) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/expand/Conv_247"} : (tensor<?x28x1x1xf32>, tensor<3xi64>) -> tensor<?x28x?xf32>
    %672 = "onnx.MatMul"(%106, %671) {onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/expand/Conv_497"} : (tensor<672x28xf32>, tensor<?x28x?xf32>) -> tensor<?x672x?xf32>
    %673 = "onnx.Add"(%672, %105) {onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/expand/Conv_450"} : (tensor<?x672x?xf32>, tensor<1x672x1xf32>) -> tensor<?x672x?xf32>
    %674 = "onnx.Dim"(%668) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/expand/Conv_472"} : (tensor<?x28x1x1xf32>) -> tensor<1xi64>
    %675 = "onnx.Concat"(%674, %104, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/expand/Conv_95"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %676 = "onnx.Reshape"(%673, %675) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/expand/Conv_103"} : (tensor<?x672x?xf32>, tensor<4xi64>) -> tensor<?x672x1x1xf32>
    %677 = "onnx.Sigmoid"(%676) {onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x672x1x1xf32>) -> tensor<?x672x1x1xf32>
    %678 = "onnx.Mul"(%657, %677) {onnx_node_name = "/efficientnet/encoder/blocks.9/squeeze_excite/Mul"} : (tensor<?x672x14x14xf32>, tensor<?x672x1x1xf32>) -> tensor<?x672x14x14xf32>
    %679 = "onnx.Dim"(%678) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/projection/project_conv/Conv_301"} : (tensor<?x672x14x14xf32>) -> tensor<1xi64>
    %680 = "onnx.Concat"(%679, %6, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/projection/project_conv/Conv_112"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %681 = "onnx.Reshape"(%678, %680) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/projection/project_conv/Conv_96"} : (tensor<?x672x14x14xf32>, tensor<3xi64>) -> tensor<?x672x?xf32>
    %682 = "onnx.MatMul"(%103, %681) {onnx_node_name = "/efficientnet/encoder/blocks.9/projection/project_conv/Conv_223"} : (tensor<112x672xf32>, tensor<?x672x?xf32>) -> tensor<?x112x?xf32>
    %683 = "onnx.Add"(%682, %102) {onnx_node_name = "/efficientnet/encoder/blocks.9/projection/project_conv/Conv_170"} : (tensor<?x112x?xf32>, tensor<1x112x1xf32>) -> tensor<?x112x?xf32>
    %684 = "onnx.Dim"(%678) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/projection/project_conv/Conv_329"} : (tensor<?x672x14x14xf32>) -> tensor<1xi64>
    %685 = "onnx.Concat"(%684, %101, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/projection/project_conv/Conv_272"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %686 = "onnx.Reshape"(%683, %685) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.9/projection/project_conv/Conv_345"} : (tensor<?x112x?xf32>, tensor<4xi64>) -> tensor<?x112x14x14xf32>
    %687 = "onnx.Add"(%686, %644) {onnx_node_name = "/efficientnet/encoder/blocks.9/projection/Add"} : (tensor<?x112x14x14xf32>, tensor<?x112x14x14xf32>) -> tensor<?x112x14x14xf32>
    %688 = "onnx.Dim"(%687) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_conv/Conv_204"} : (tensor<?x112x14x14xf32>) -> tensor<1xi64>
    %689 = "onnx.Concat"(%688, %22, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_conv/Conv_458"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %690 = "onnx.Reshape"(%687, %689) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_conv/Conv_51"} : (tensor<?x112x14x14xf32>, tensor<3xi64>) -> tensor<?x112x?xf32>
    %691 = "onnx.MatMul"(%100, %690) {onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_conv/Conv_43"} : (tensor<672x112xf32>, tensor<?x112x?xf32>) -> tensor<?x672x?xf32>
    %692 = "onnx.Add"(%691, %99) {onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_conv/Conv_19"} : (tensor<?x672x?xf32>, tensor<1x672x1xf32>) -> tensor<?x672x?xf32>
    %693 = "onnx.Dim"(%687) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_conv/Conv_398"} : (tensor<?x112x14x14xf32>) -> tensor<1xi64>
    %694 = "onnx.Concat"(%693, %98, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_conv/Conv_218"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %695 = "onnx.Reshape"(%692, %694) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_conv/Conv_167"} : (tensor<?x672x?xf32>, tensor<4xi64>) -> tensor<?x672x14x14xf32>
    %696 = "onnx.Sigmoid"(%695) {onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_act/Sigmoid"} : (tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %697 = "onnx.Mul"(%695, %696) {onnx_node_name = "/efficientnet/encoder/blocks.10/expansion/expand_act/Mul"} : (tensor<?x672x14x14xf32>, tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %698 = "onnx.Conv"(%697, %253, %254) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 672 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.10/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x672x14x14xf32>, tensor<672x1x5x5xf32>, tensor<672xf32>) -> tensor<?x672x14x14xf32>
    %699 = "onnx.Sigmoid"(%698) {onnx_node_name = "/efficientnet/encoder/blocks.10/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %700 = "onnx.Mul"(%698, %699) {onnx_node_name = "/efficientnet/encoder/blocks.10/depthwise_conv/depthwise_act/Mul"} : (tensor<?x672x14x14xf32>, tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %701 = "onnx.ReduceMeanV13"(%700) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/squeeze/GlobalAveragePool_279"} : (tensor<?x672x14x14xf32>) -> tensor<?x672x1x1xf32>
    %702 = "onnx.Dim"(%701) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/reduce/Conv_512"} : (tensor<?x672x1x1xf32>) -> tensor<1xi64>
    %703 = "onnx.Concat"(%702, %6, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/reduce/Conv_360"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %704 = "onnx.Reshape"(%701, %703) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/reduce/Conv_431"} : (tensor<?x672x1x1xf32>, tensor<3xi64>) -> tensor<?x672x?xf32>
    %705 = "onnx.MatMul"(%97, %704) {onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/reduce/Conv_237"} : (tensor<28x672xf32>, tensor<?x672x?xf32>) -> tensor<?x28x?xf32>
    %706 = "onnx.Add"(%705, %96) {onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/reduce/Conv_128"} : (tensor<?x28x?xf32>, tensor<1x28x1xf32>) -> tensor<?x28x?xf32>
    %707 = "onnx.Dim"(%701) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/reduce/Conv_510"} : (tensor<?x672x1x1xf32>) -> tensor<1xi64>
    %708 = "onnx.Concat"(%707, %95, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/reduce/Conv_276"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %709 = "onnx.Reshape"(%706, %708) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/reduce/Conv_60"} : (tensor<?x28x?xf32>, tensor<4xi64>) -> tensor<?x28x1x1xf32>
    %710 = "onnx.Sigmoid"(%709) {onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x28x1x1xf32>) -> tensor<?x28x1x1xf32>
    %711 = "onnx.Mul"(%709, %710) {onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/act_reduce/Mul"} : (tensor<?x28x1x1xf32>, tensor<?x28x1x1xf32>) -> tensor<?x28x1x1xf32>
    %712 = "onnx.Dim"(%711) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/expand/Conv_221"} : (tensor<?x28x1x1xf32>) -> tensor<1xi64>
    %713 = "onnx.Concat"(%712, %14, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/expand/Conv_55"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %714 = "onnx.Reshape"(%711, %713) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/expand/Conv_474"} : (tensor<?x28x1x1xf32>, tensor<3xi64>) -> tensor<?x28x?xf32>
    %715 = "onnx.MatMul"(%94, %714) {onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/expand/Conv_4"} : (tensor<672x28xf32>, tensor<?x28x?xf32>) -> tensor<?x672x?xf32>
    %716 = "onnx.Add"(%715, %93) {onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/expand/Conv_252"} : (tensor<?x672x?xf32>, tensor<1x672x1xf32>) -> tensor<?x672x?xf32>
    %717 = "onnx.Dim"(%711) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/expand/Conv_317"} : (tensor<?x28x1x1xf32>) -> tensor<1xi64>
    %718 = "onnx.Concat"(%717, %92, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/expand/Conv_208"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %719 = "onnx.Reshape"(%716, %718) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/expand/Conv_13"} : (tensor<?x672x?xf32>, tensor<4xi64>) -> tensor<?x672x1x1xf32>
    %720 = "onnx.Sigmoid"(%719) {onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x672x1x1xf32>) -> tensor<?x672x1x1xf32>
    %721 = "onnx.Mul"(%700, %720) {onnx_node_name = "/efficientnet/encoder/blocks.10/squeeze_excite/Mul"} : (tensor<?x672x14x14xf32>, tensor<?x672x1x1xf32>) -> tensor<?x672x14x14xf32>
    %722 = "onnx.Dim"(%721) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/projection/project_conv/Conv_244"} : (tensor<?x672x14x14xf32>) -> tensor<1xi64>
    %723 = "onnx.Concat"(%722, %6, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/projection/project_conv/Conv_210"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %724 = "onnx.Reshape"(%721, %723) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/projection/project_conv/Conv_33"} : (tensor<?x672x14x14xf32>, tensor<3xi64>) -> tensor<?x672x?xf32>
    %725 = "onnx.MatMul"(%91, %724) {onnx_node_name = "/efficientnet/encoder/blocks.10/projection/project_conv/Conv_516"} : (tensor<112x672xf32>, tensor<?x672x?xf32>) -> tensor<?x112x?xf32>
    %726 = "onnx.Add"(%725, %90) {onnx_node_name = "/efficientnet/encoder/blocks.10/projection/project_conv/Conv_444"} : (tensor<?x112x?xf32>, tensor<1x112x1xf32>) -> tensor<?x112x?xf32>
    %727 = "onnx.Dim"(%721) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/projection/project_conv/Conv_322"} : (tensor<?x672x14x14xf32>) -> tensor<1xi64>
    %728 = "onnx.Concat"(%727, %89, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/projection/project_conv/Conv_20"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %729 = "onnx.Reshape"(%726, %728) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.10/projection/project_conv/Conv_526"} : (tensor<?x112x?xf32>, tensor<4xi64>) -> tensor<?x112x14x14xf32>
    %730 = "onnx.Add"(%729, %687) {onnx_node_name = "/efficientnet/encoder/blocks.10/projection/Add"} : (tensor<?x112x14x14xf32>, tensor<?x112x14x14xf32>) -> tensor<?x112x14x14xf32>
    %731 = "onnx.Dim"(%730) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_conv/Conv_318"} : (tensor<?x112x14x14xf32>) -> tensor<1xi64>
    %732 = "onnx.Concat"(%731, %22, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_conv/Conv_397"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %733 = "onnx.Reshape"(%730, %732) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_conv/Conv_521"} : (tensor<?x112x14x14xf32>, tensor<3xi64>) -> tensor<?x112x?xf32>
    %734 = "onnx.MatMul"(%88, %733) {onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_conv/Conv_12"} : (tensor<672x112xf32>, tensor<?x112x?xf32>) -> tensor<?x672x?xf32>
    %735 = "onnx.Add"(%734, %87) {onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_conv/Conv_199"} : (tensor<?x672x?xf32>, tensor<1x672x1xf32>) -> tensor<?x672x?xf32>
    %736 = "onnx.Dim"(%730) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_conv/Conv_502"} : (tensor<?x112x14x14xf32>) -> tensor<1xi64>
    %737 = "onnx.Concat"(%736, %86, %10, %10) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_conv/Conv_2"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %738 = "onnx.Reshape"(%735, %737) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_conv/Conv_387"} : (tensor<?x672x?xf32>, tensor<4xi64>) -> tensor<?x672x14x14xf32>
    %739 = "onnx.Sigmoid"(%738) {onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_act/Sigmoid"} : (tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %740 = "onnx.Mul"(%738, %739) {onnx_node_name = "/efficientnet/encoder/blocks.11/expansion/expand_act/Mul"} : (tensor<?x672x14x14xf32>, tensor<?x672x14x14xf32>) -> tensor<?x672x14x14xf32>
    %741 = "onnx.Pad"(%740, %219, %223, %227) {mode = "constant", onnx_node_name = "/efficientnet/encoder/blocks.11/depthwise_conv/depthwise_conv_pad/Pad_461"} : (tensor<?x672x14x14xf32>, tensor<8xi64>, tensor<f32>, none) -> tensor<?x672x17x17xf32>
    %742 = "onnx.Conv"(%741, %255, %256) {auto_pad = "VALID", dilations = [1, 1], group = 672 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.11/depthwise_conv/depthwise_conv/Conv", strides = [2, 2]} : (tensor<?x672x17x17xf32>, tensor<672x1x5x5xf32>, tensor<672xf32>) -> tensor<?x672x7x7xf32>
    %743 = "onnx.Sigmoid"(%742) {onnx_node_name = "/efficientnet/encoder/blocks.11/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x672x7x7xf32>) -> tensor<?x672x7x7xf32>
    %744 = "onnx.Mul"(%742, %743) {onnx_node_name = "/efficientnet/encoder/blocks.11/depthwise_conv/depthwise_act/Mul"} : (tensor<?x672x7x7xf32>, tensor<?x672x7x7xf32>) -> tensor<?x672x7x7xf32>
    %745 = "onnx.ReduceMeanV13"(%744) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/squeeze/GlobalAveragePool_282"} : (tensor<?x672x7x7xf32>) -> tensor<?x672x1x1xf32>
    %746 = "onnx.Dim"(%745) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/reduce/Conv_323"} : (tensor<?x672x1x1xf32>) -> tensor<1xi64>
    %747 = "onnx.Concat"(%746, %6, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/reduce/Conv_310"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %748 = "onnx.Reshape"(%745, %747) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/reduce/Conv_102"} : (tensor<?x672x1x1xf32>, tensor<3xi64>) -> tensor<?x672x?xf32>
    %749 = "onnx.MatMul"(%85, %748) {onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/reduce/Conv_443"} : (tensor<28x672xf32>, tensor<?x672x?xf32>) -> tensor<?x28x?xf32>
    %750 = "onnx.Add"(%749, %84) {onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/reduce/Conv_44"} : (tensor<?x28x?xf32>, tensor<1x28x1xf32>) -> tensor<?x28x?xf32>
    %751 = "onnx.Dim"(%745) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/reduce/Conv_340"} : (tensor<?x672x1x1xf32>) -> tensor<1xi64>
    %752 = "onnx.Concat"(%751, %83, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/reduce/Conv_415"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %753 = "onnx.Reshape"(%750, %752) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/reduce/Conv_257"} : (tensor<?x28x?xf32>, tensor<4xi64>) -> tensor<?x28x1x1xf32>
    %754 = "onnx.Sigmoid"(%753) {onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x28x1x1xf32>) -> tensor<?x28x1x1xf32>
    %755 = "onnx.Mul"(%753, %754) {onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/act_reduce/Mul"} : (tensor<?x28x1x1xf32>, tensor<?x28x1x1xf32>) -> tensor<?x28x1x1xf32>
    %756 = "onnx.Dim"(%755) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/expand/Conv_384"} : (tensor<?x28x1x1xf32>) -> tensor<1xi64>
    %757 = "onnx.Concat"(%756, %14, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/expand/Conv_341"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %758 = "onnx.Reshape"(%755, %757) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/expand/Conv_277"} : (tensor<?x28x1x1xf32>, tensor<3xi64>) -> tensor<?x28x?xf32>
    %759 = "onnx.MatMul"(%82, %758) {onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/expand/Conv_372"} : (tensor<672x28xf32>, tensor<?x28x?xf32>) -> tensor<?x672x?xf32>
    %760 = "onnx.Add"(%759, %81) {onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/expand/Conv_284"} : (tensor<?x672x?xf32>, tensor<1x672x1xf32>) -> tensor<?x672x?xf32>
    %761 = "onnx.Dim"(%755) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/expand/Conv_423"} : (tensor<?x28x1x1xf32>) -> tensor<1xi64>
    %762 = "onnx.Concat"(%761, %80, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/expand/Conv_113"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %763 = "onnx.Reshape"(%760, %762) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/expand/Conv_274"} : (tensor<?x672x?xf32>, tensor<4xi64>) -> tensor<?x672x1x1xf32>
    %764 = "onnx.Sigmoid"(%763) {onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x672x1x1xf32>) -> tensor<?x672x1x1xf32>
    %765 = "onnx.Mul"(%744, %764) {onnx_node_name = "/efficientnet/encoder/blocks.11/squeeze_excite/Mul"} : (tensor<?x672x7x7xf32>, tensor<?x672x1x1xf32>) -> tensor<?x672x7x7xf32>
    %766 = "onnx.Dim"(%765) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv_130"} : (tensor<?x672x7x7xf32>) -> tensor<1xi64>
    %767 = "onnx.Concat"(%766, %6, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv_25"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %768 = "onnx.Reshape"(%765, %767) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv_408"} : (tensor<?x672x7x7xf32>, tensor<3xi64>) -> tensor<?x672x?xf32>
    %769 = "onnx.MatMul"(%79, %768) {onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv_240"} : (tensor<192x672xf32>, tensor<?x672x?xf32>) -> tensor<?x192x?xf32>
    %770 = "onnx.Add"(%769, %78) {onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv_335"} : (tensor<?x192x?xf32>, tensor<1x192x1xf32>) -> tensor<?x192x?xf32>
    %771 = "onnx.Dim"(%765) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv_351"} : (tensor<?x672x7x7xf32>) -> tensor<1xi64>
    %772 = "onnx.Concat"(%771, %77, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv_442"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %773 = "onnx.Reshape"(%770, %772) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv_459"} : (tensor<?x192x?xf32>, tensor<4xi64>) -> tensor<?x192x7x7xf32>
    %774 = "onnx.Dim"(%773) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/expansion/expand_conv/Conv_207"} : (tensor<?x192x7x7xf32>) -> tensor<1xi64>
    %775 = "onnx.Concat"(%774, %4, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv-/efficientnet/encoder/blocks.12/expansion/expand_conv/Conv_290"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %776 = "onnx.Reshape"(%770, %775) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.11/projection/project_conv/Conv-/efficientnet/encoder/blocks.12/expansion/expand_conv/Conv_529"} : (tensor<?x192x?xf32>, tensor<3xi64>) -> tensor<?x192x?xf32>
    %777 = "onnx.MatMul"(%76, %776) {onnx_node_name = "/efficientnet/encoder/blocks.12/expansion/expand_conv/Conv_391"} : (tensor<1152x192xf32>, tensor<?x192x?xf32>) -> tensor<?x1152x?xf32>
    %778 = "onnx.Add"(%777, %75) {onnx_node_name = "/efficientnet/encoder/blocks.12/expansion/expand_conv/Conv_361"} : (tensor<?x1152x?xf32>, tensor<1x1152x1xf32>) -> tensor<?x1152x?xf32>
    %779 = "onnx.Dim"(%773) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/expansion/expand_conv/Conv_411"} : (tensor<?x192x7x7xf32>) -> tensor<1xi64>
    %780 = "onnx.Concat"(%779, %74, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/expansion/expand_conv/Conv_246"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %781 = "onnx.Reshape"(%778, %780) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/expansion/expand_conv/Conv_467"} : (tensor<?x1152x?xf32>, tensor<4xi64>) -> tensor<?x1152x7x7xf32>
    %782 = "onnx.Sigmoid"(%781) {onnx_node_name = "/efficientnet/encoder/blocks.12/expansion/expand_act/Sigmoid"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %783 = "onnx.Mul"(%781, %782) {onnx_node_name = "/efficientnet/encoder/blocks.12/expansion/expand_act/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %784 = "onnx.Conv"(%783, %257, %258) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 1152 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.12/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x1152x7x7xf32>, tensor<1152x1x5x5xf32>, tensor<1152xf32>) -> tensor<?x1152x7x7xf32>
    %785 = "onnx.Sigmoid"(%784) {onnx_node_name = "/efficientnet/encoder/blocks.12/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %786 = "onnx.Mul"(%784, %785) {onnx_node_name = "/efficientnet/encoder/blocks.12/depthwise_conv/depthwise_act/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %787 = "onnx.ReduceMeanV13"(%786) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/squeeze/GlobalAveragePool_304"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x1x1xf32>
    %788 = "onnx.Dim"(%787) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/reduce/Conv_452"} : (tensor<?x1152x1x1xf32>) -> tensor<1xi64>
    %789 = "onnx.Concat"(%788, %3, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/reduce/Conv_206"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %790 = "onnx.Reshape"(%787, %789) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/reduce/Conv_448"} : (tensor<?x1152x1x1xf32>, tensor<3xi64>) -> tensor<?x1152x?xf32>
    %791 = "onnx.MatMul"(%73, %790) {onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/reduce/Conv_3"} : (tensor<48x1152xf32>, tensor<?x1152x?xf32>) -> tensor<?x48x?xf32>
    %792 = "onnx.Add"(%791, %72) {onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/reduce/Conv_217"} : (tensor<?x48x?xf32>, tensor<1x48x1xf32>) -> tensor<?x48x?xf32>
    %793 = "onnx.Dim"(%787) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/reduce/Conv_255"} : (tensor<?x1152x1x1xf32>) -> tensor<1xi64>
    %794 = "onnx.Concat"(%793, %71, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/reduce/Conv_469"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %795 = "onnx.Reshape"(%792, %794) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/reduce/Conv_401"} : (tensor<?x48x?xf32>, tensor<4xi64>) -> tensor<?x48x1x1xf32>
    %796 = "onnx.Sigmoid"(%795) {onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x48x1x1xf32>) -> tensor<?x48x1x1xf32>
    %797 = "onnx.Mul"(%795, %796) {onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/act_reduce/Mul"} : (tensor<?x48x1x1xf32>, tensor<?x48x1x1xf32>) -> tensor<?x48x1x1xf32>
    %798 = "onnx.Dim"(%797) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/expand/Conv_238"} : (tensor<?x48x1x1xf32>) -> tensor<1xi64>
    %799 = "onnx.Concat"(%798, %2, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/expand/Conv_347"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %800 = "onnx.Reshape"(%797, %799) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/expand/Conv_11"} : (tensor<?x48x1x1xf32>, tensor<3xi64>) -> tensor<?x48x?xf32>
    %801 = "onnx.MatMul"(%70, %800) {onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/expand/Conv_503"} : (tensor<1152x48xf32>, tensor<?x48x?xf32>) -> tensor<?x1152x?xf32>
    %802 = "onnx.Add"(%801, %69) {onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/expand/Conv_492"} : (tensor<?x1152x?xf32>, tensor<1x1152x1xf32>) -> tensor<?x1152x?xf32>
    %803 = "onnx.Dim"(%797) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/expand/Conv_447"} : (tensor<?x48x1x1xf32>) -> tensor<1xi64>
    %804 = "onnx.Concat"(%803, %68, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/expand/Conv_425"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %805 = "onnx.Reshape"(%802, %804) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/expand/Conv_488"} : (tensor<?x1152x?xf32>, tensor<4xi64>) -> tensor<?x1152x1x1xf32>
    %806 = "onnx.Sigmoid"(%805) {onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x1152x1x1xf32>) -> tensor<?x1152x1x1xf32>
    %807 = "onnx.Mul"(%786, %806) {onnx_node_name = "/efficientnet/encoder/blocks.12/squeeze_excite/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x1x1xf32>) -> tensor<?x1152x7x7xf32>
    %808 = "onnx.Dim"(%807) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/projection/project_conv/Conv_525"} : (tensor<?x1152x7x7xf32>) -> tensor<1xi64>
    %809 = "onnx.Concat"(%808, %3, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/projection/project_conv/Conv_92"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %810 = "onnx.Reshape"(%807, %809) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/projection/project_conv/Conv_483"} : (tensor<?x1152x7x7xf32>, tensor<3xi64>) -> tensor<?x1152x?xf32>
    %811 = "onnx.MatMul"(%67, %810) {onnx_node_name = "/efficientnet/encoder/blocks.12/projection/project_conv/Conv_122"} : (tensor<192x1152xf32>, tensor<?x1152x?xf32>) -> tensor<?x192x?xf32>
    %812 = "onnx.Add"(%811, %66) {onnx_node_name = "/efficientnet/encoder/blocks.12/projection/project_conv/Conv_117"} : (tensor<?x192x?xf32>, tensor<1x192x1xf32>) -> tensor<?x192x?xf32>
    %813 = "onnx.Dim"(%807) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/projection/project_conv/Conv_162"} : (tensor<?x1152x7x7xf32>) -> tensor<1xi64>
    %814 = "onnx.Concat"(%813, %65, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/projection/project_conv/Conv_159"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %815 = "onnx.Reshape"(%812, %814) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.12/projection/project_conv/Conv_29"} : (tensor<?x192x?xf32>, tensor<4xi64>) -> tensor<?x192x7x7xf32>
    %816 = "onnx.Add"(%815, %773) {onnx_node_name = "/efficientnet/encoder/blocks.12/projection/Add"} : (tensor<?x192x7x7xf32>, tensor<?x192x7x7xf32>) -> tensor<?x192x7x7xf32>
    %817 = "onnx.Dim"(%816) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_conv/Conv_76"} : (tensor<?x192x7x7xf32>) -> tensor<1xi64>
    %818 = "onnx.Concat"(%817, %4, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_conv/Conv_414"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %819 = "onnx.Reshape"(%816, %818) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_conv/Conv_23"} : (tensor<?x192x7x7xf32>, tensor<3xi64>) -> tensor<?x192x?xf32>
    %820 = "onnx.MatMul"(%64, %819) {onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_conv/Conv_78"} : (tensor<1152x192xf32>, tensor<?x192x?xf32>) -> tensor<?x1152x?xf32>
    %821 = "onnx.Add"(%820, %63) {onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_conv/Conv_180"} : (tensor<?x1152x?xf32>, tensor<1x1152x1xf32>) -> tensor<?x1152x?xf32>
    %822 = "onnx.Dim"(%816) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_conv/Conv_89"} : (tensor<?x192x7x7xf32>) -> tensor<1xi64>
    %823 = "onnx.Concat"(%822, %62, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_conv/Conv_256"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %824 = "onnx.Reshape"(%821, %823) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_conv/Conv_166"} : (tensor<?x1152x?xf32>, tensor<4xi64>) -> tensor<?x1152x7x7xf32>
    %825 = "onnx.Sigmoid"(%824) {onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_act/Sigmoid"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %826 = "onnx.Mul"(%824, %825) {onnx_node_name = "/efficientnet/encoder/blocks.13/expansion/expand_act/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %827 = "onnx.Conv"(%826, %259, %260) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 1152 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.13/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x1152x7x7xf32>, tensor<1152x1x5x5xf32>, tensor<1152xf32>) -> tensor<?x1152x7x7xf32>
    %828 = "onnx.Sigmoid"(%827) {onnx_node_name = "/efficientnet/encoder/blocks.13/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %829 = "onnx.Mul"(%827, %828) {onnx_node_name = "/efficientnet/encoder/blocks.13/depthwise_conv/depthwise_act/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %830 = "onnx.ReduceMeanV13"(%829) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/squeeze/GlobalAveragePool_300"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x1x1xf32>
    %831 = "onnx.Dim"(%830) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/reduce/Conv_169"} : (tensor<?x1152x1x1xf32>) -> tensor<1xi64>
    %832 = "onnx.Concat"(%831, %3, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/reduce/Conv_275"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %833 = "onnx.Reshape"(%830, %832) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/reduce/Conv_155"} : (tensor<?x1152x1x1xf32>, tensor<3xi64>) -> tensor<?x1152x?xf32>
    %834 = "onnx.MatMul"(%61, %833) {onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/reduce/Conv_68"} : (tensor<48x1152xf32>, tensor<?x1152x?xf32>) -> tensor<?x48x?xf32>
    %835 = "onnx.Add"(%834, %60) {onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/reduce/Conv_153"} : (tensor<?x48x?xf32>, tensor<1x48x1xf32>) -> tensor<?x48x?xf32>
    %836 = "onnx.Dim"(%830) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/reduce/Conv_72"} : (tensor<?x1152x1x1xf32>) -> tensor<1xi64>
    %837 = "onnx.Concat"(%836, %59, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/reduce/Conv_392"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %838 = "onnx.Reshape"(%835, %837) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/reduce/Conv_192"} : (tensor<?x48x?xf32>, tensor<4xi64>) -> tensor<?x48x1x1xf32>
    %839 = "onnx.Sigmoid"(%838) {onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x48x1x1xf32>) -> tensor<?x48x1x1xf32>
    %840 = "onnx.Mul"(%838, %839) {onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/act_reduce/Mul"} : (tensor<?x48x1x1xf32>, tensor<?x48x1x1xf32>) -> tensor<?x48x1x1xf32>
    %841 = "onnx.Dim"(%840) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/expand/Conv_85"} : (tensor<?x48x1x1xf32>) -> tensor<1xi64>
    %842 = "onnx.Concat"(%841, %2, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/expand/Conv_15"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %843 = "onnx.Reshape"(%840, %842) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/expand/Conv_142"} : (tensor<?x48x1x1xf32>, tensor<3xi64>) -> tensor<?x48x?xf32>
    %844 = "onnx.MatMul"(%58, %843) {onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/expand/Conv_176"} : (tensor<1152x48xf32>, tensor<?x48x?xf32>) -> tensor<?x1152x?xf32>
    %845 = "onnx.Add"(%844, %57) {onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/expand/Conv_131"} : (tensor<?x1152x?xf32>, tensor<1x1152x1xf32>) -> tensor<?x1152x?xf32>
    %846 = "onnx.Dim"(%840) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/expand/Conv_160"} : (tensor<?x48x1x1xf32>) -> tensor<1xi64>
    %847 = "onnx.Concat"(%846, %56, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/expand/Conv_148"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %848 = "onnx.Reshape"(%845, %847) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/expand/Conv_82"} : (tensor<?x1152x?xf32>, tensor<4xi64>) -> tensor<?x1152x1x1xf32>
    %849 = "onnx.Sigmoid"(%848) {onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x1152x1x1xf32>) -> tensor<?x1152x1x1xf32>
    %850 = "onnx.Mul"(%829, %849) {onnx_node_name = "/efficientnet/encoder/blocks.13/squeeze_excite/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x1x1xf32>) -> tensor<?x1152x7x7xf32>
    %851 = "onnx.Dim"(%850) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/projection/project_conv/Conv_181"} : (tensor<?x1152x7x7xf32>) -> tensor<1xi64>
    %852 = "onnx.Concat"(%851, %3, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/projection/project_conv/Conv_149"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %853 = "onnx.Reshape"(%850, %852) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/projection/project_conv/Conv_52"} : (tensor<?x1152x7x7xf32>, tensor<3xi64>) -> tensor<?x1152x?xf32>
    %854 = "onnx.MatMul"(%55, %853) {onnx_node_name = "/efficientnet/encoder/blocks.13/projection/project_conv/Conv_311"} : (tensor<192x1152xf32>, tensor<?x1152x?xf32>) -> tensor<?x192x?xf32>
    %855 = "onnx.Add"(%854, %54) {onnx_node_name = "/efficientnet/encoder/blocks.13/projection/project_conv/Conv_462"} : (tensor<?x192x?xf32>, tensor<1x192x1xf32>) -> tensor<?x192x?xf32>
    %856 = "onnx.Dim"(%850) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/projection/project_conv/Conv_175"} : (tensor<?x1152x7x7xf32>) -> tensor<1xi64>
    %857 = "onnx.Concat"(%856, %53, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/projection/project_conv/Conv_83"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %858 = "onnx.Reshape"(%855, %857) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.13/projection/project_conv/Conv_6"} : (tensor<?x192x?xf32>, tensor<4xi64>) -> tensor<?x192x7x7xf32>
    %859 = "onnx.Add"(%858, %816) {onnx_node_name = "/efficientnet/encoder/blocks.13/projection/Add"} : (tensor<?x192x7x7xf32>, tensor<?x192x7x7xf32>) -> tensor<?x192x7x7xf32>
    %860 = "onnx.Dim"(%859) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_conv/Conv_65"} : (tensor<?x192x7x7xf32>) -> tensor<1xi64>
    %861 = "onnx.Concat"(%860, %4, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_conv/Conv_138"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %862 = "onnx.Reshape"(%859, %861) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_conv/Conv_412"} : (tensor<?x192x7x7xf32>, tensor<3xi64>) -> tensor<?x192x?xf32>
    %863 = "onnx.MatMul"(%52, %862) {onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_conv/Conv_369"} : (tensor<1152x192xf32>, tensor<?x192x?xf32>) -> tensor<?x1152x?xf32>
    %864 = "onnx.Add"(%863, %51) {onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_conv/Conv_74"} : (tensor<?x1152x?xf32>, tensor<1x1152x1xf32>) -> tensor<?x1152x?xf32>
    %865 = "onnx.Dim"(%859) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_conv/Conv_147"} : (tensor<?x192x7x7xf32>) -> tensor<1xi64>
    %866 = "onnx.Concat"(%865, %50, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_conv/Conv_197"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %867 = "onnx.Reshape"(%864, %866) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_conv/Conv_77"} : (tensor<?x1152x?xf32>, tensor<4xi64>) -> tensor<?x1152x7x7xf32>
    %868 = "onnx.Sigmoid"(%867) {onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_act/Sigmoid"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %869 = "onnx.Mul"(%867, %868) {onnx_node_name = "/efficientnet/encoder/blocks.14/expansion/expand_act/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %870 = "onnx.Conv"(%869, %261, %262) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 1152 : si64, kernel_shape = [5, 5], onnx_node_name = "/efficientnet/encoder/blocks.14/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x1152x7x7xf32>, tensor<1152x1x5x5xf32>, tensor<1152xf32>) -> tensor<?x1152x7x7xf32>
    %871 = "onnx.Sigmoid"(%870) {onnx_node_name = "/efficientnet/encoder/blocks.14/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %872 = "onnx.Mul"(%870, %871) {onnx_node_name = "/efficientnet/encoder/blocks.14/depthwise_conv/depthwise_act/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %873 = "onnx.ReduceMeanV13"(%872) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/squeeze/GlobalAveragePool_493"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x1x1xf32>
    %874 = "onnx.Dim"(%873) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/reduce/Conv_99"} : (tensor<?x1152x1x1xf32>) -> tensor<1xi64>
    %875 = "onnx.Concat"(%874, %3, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/reduce/Conv_222"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %876 = "onnx.Reshape"(%873, %875) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/reduce/Conv_260"} : (tensor<?x1152x1x1xf32>, tensor<3xi64>) -> tensor<?x1152x?xf32>
    %877 = "onnx.MatMul"(%49, %876) {onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/reduce/Conv_366"} : (tensor<48x1152xf32>, tensor<?x1152x?xf32>) -> tensor<?x48x?xf32>
    %878 = "onnx.Add"(%877, %48) {onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/reduce/Conv_320"} : (tensor<?x48x?xf32>, tensor<1x48x1xf32>) -> tensor<?x48x?xf32>
    %879 = "onnx.Dim"(%873) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/reduce/Conv_362"} : (tensor<?x1152x1x1xf32>) -> tensor<1xi64>
    %880 = "onnx.Concat"(%879, %47, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/reduce/Conv_454"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %881 = "onnx.Reshape"(%878, %880) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/reduce/Conv_48"} : (tensor<?x48x?xf32>, tensor<4xi64>) -> tensor<?x48x1x1xf32>
    %882 = "onnx.Sigmoid"(%881) {onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x48x1x1xf32>) -> tensor<?x48x1x1xf32>
    %883 = "onnx.Mul"(%881, %882) {onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/act_reduce/Mul"} : (tensor<?x48x1x1xf32>, tensor<?x48x1x1xf32>) -> tensor<?x48x1x1xf32>
    %884 = "onnx.Dim"(%883) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/expand/Conv_481"} : (tensor<?x48x1x1xf32>) -> tensor<1xi64>
    %885 = "onnx.Concat"(%884, %2, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/expand/Conv_174"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %886 = "onnx.Reshape"(%883, %885) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/expand/Conv_267"} : (tensor<?x48x1x1xf32>, tensor<3xi64>) -> tensor<?x48x?xf32>
    %887 = "onnx.MatMul"(%46, %886) {onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/expand/Conv_385"} : (tensor<1152x48xf32>, tensor<?x48x?xf32>) -> tensor<?x1152x?xf32>
    %888 = "onnx.Add"(%887, %45) {onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/expand/Conv_325"} : (tensor<?x1152x?xf32>, tensor<1x1152x1xf32>) -> tensor<?x1152x?xf32>
    %889 = "onnx.Dim"(%883) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/expand/Conv_104"} : (tensor<?x48x1x1xf32>) -> tensor<1xi64>
    %890 = "onnx.Concat"(%889, %44, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/expand/Conv_486"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %891 = "onnx.Reshape"(%888, %890) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/expand/Conv_336"} : (tensor<?x1152x?xf32>, tensor<4xi64>) -> tensor<?x1152x1x1xf32>
    %892 = "onnx.Sigmoid"(%891) {onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x1152x1x1xf32>) -> tensor<?x1152x1x1xf32>
    %893 = "onnx.Mul"(%872, %892) {onnx_node_name = "/efficientnet/encoder/blocks.14/squeeze_excite/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x1x1xf32>) -> tensor<?x1152x7x7xf32>
    %894 = "onnx.Dim"(%893) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/projection/project_conv/Conv_109"} : (tensor<?x1152x7x7xf32>) -> tensor<1xi64>
    %895 = "onnx.Concat"(%894, %3, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/projection/project_conv/Conv_348"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %896 = "onnx.Reshape"(%893, %895) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/projection/project_conv/Conv_428"} : (tensor<?x1152x7x7xf32>, tensor<3xi64>) -> tensor<?x1152x?xf32>
    %897 = "onnx.MatMul"(%43, %896) {onnx_node_name = "/efficientnet/encoder/blocks.14/projection/project_conv/Conv_69"} : (tensor<192x1152xf32>, tensor<?x1152x?xf32>) -> tensor<?x192x?xf32>
    %898 = "onnx.Add"(%897, %42) {onnx_node_name = "/efficientnet/encoder/blocks.14/projection/project_conv/Conv_22"} : (tensor<?x192x?xf32>, tensor<1x192x1xf32>) -> tensor<?x192x?xf32>
    %899 = "onnx.Dim"(%893) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/projection/project_conv/Conv_420"} : (tensor<?x1152x7x7xf32>) -> tensor<1xi64>
    %900 = "onnx.Concat"(%899, %41, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/projection/project_conv/Conv_173"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %901 = "onnx.Reshape"(%898, %900) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.14/projection/project_conv/Conv_281"} : (tensor<?x192x?xf32>, tensor<4xi64>) -> tensor<?x192x7x7xf32>
    %902 = "onnx.Add"(%901, %859) {onnx_node_name = "/efficientnet/encoder/blocks.14/projection/Add"} : (tensor<?x192x7x7xf32>, tensor<?x192x7x7xf32>) -> tensor<?x192x7x7xf32>
    %903 = "onnx.Dim"(%902) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_conv/Conv_286"} : (tensor<?x192x7x7xf32>) -> tensor<1xi64>
    %904 = "onnx.Concat"(%903, %4, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_conv/Conv_373"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %905 = "onnx.Reshape"(%902, %904) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_conv/Conv_433"} : (tensor<?x192x7x7xf32>, tensor<3xi64>) -> tensor<?x192x?xf32>
    %906 = "onnx.MatMul"(%40, %905) {onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_conv/Conv_456"} : (tensor<1152x192xf32>, tensor<?x192x?xf32>) -> tensor<?x1152x?xf32>
    %907 = "onnx.Add"(%906, %39) {onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_conv/Conv_498"} : (tensor<?x1152x?xf32>, tensor<1x1152x1xf32>) -> tensor<?x1152x?xf32>
    %908 = "onnx.Dim"(%902) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_conv/Conv_356"} : (tensor<?x192x7x7xf32>) -> tensor<1xi64>
    %909 = "onnx.Concat"(%908, %38, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_conv/Conv_435"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %910 = "onnx.Reshape"(%907, %909) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_conv/Conv_440"} : (tensor<?x1152x?xf32>, tensor<4xi64>) -> tensor<?x1152x7x7xf32>
    %911 = "onnx.Sigmoid"(%910) {onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_act/Sigmoid"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %912 = "onnx.Mul"(%910, %911) {onnx_node_name = "/efficientnet/encoder/blocks.15/expansion/expand_act/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %913 = "onnx.Conv"(%912, %263, %264) {auto_pad = "SAME_UPPER", dilations = [1, 1], group = 1152 : si64, kernel_shape = [3, 3], onnx_node_name = "/efficientnet/encoder/blocks.15/depthwise_conv/depthwise_conv/Conv", strides = [1, 1]} : (tensor<?x1152x7x7xf32>, tensor<1152x1x3x3xf32>, tensor<1152xf32>) -> tensor<?x1152x7x7xf32>
    %914 = "onnx.Sigmoid"(%913) {onnx_node_name = "/efficientnet/encoder/blocks.15/depthwise_conv/depthwise_act/Sigmoid"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %915 = "onnx.Mul"(%913, %914) {onnx_node_name = "/efficientnet/encoder/blocks.15/depthwise_conv/depthwise_act/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x7x7xf32>) -> tensor<?x1152x7x7xf32>
    %916 = "onnx.ReduceMeanV13"(%915) {axes = [2, 3], keepdims = 1 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/squeeze/GlobalAveragePool_354"} : (tensor<?x1152x7x7xf32>) -> tensor<?x1152x1x1xf32>
    %917 = "onnx.Dim"(%916) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/reduce/Conv_378"} : (tensor<?x1152x1x1xf32>) -> tensor<1xi64>
    %918 = "onnx.Concat"(%917, %3, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/reduce/Conv_470"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %919 = "onnx.Reshape"(%916, %918) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/reduce/Conv_86"} : (tensor<?x1152x1x1xf32>, tensor<3xi64>) -> tensor<?x1152x?xf32>
    %920 = "onnx.MatMul"(%37, %919) {onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/reduce/Conv_270"} : (tensor<48x1152xf32>, tensor<?x1152x?xf32>) -> tensor<?x48x?xf32>
    %921 = "onnx.Add"(%920, %36) {onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/reduce/Conv_465"} : (tensor<?x48x?xf32>, tensor<1x48x1xf32>) -> tensor<?x48x?xf32>
    %922 = "onnx.Dim"(%916) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/reduce/Conv_291"} : (tensor<?x1152x1x1xf32>) -> tensor<1xi64>
    %923 = "onnx.Concat"(%922, %35, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/reduce/Conv_287"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %924 = "onnx.Reshape"(%921, %923) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/reduce/Conv_476"} : (tensor<?x48x?xf32>, tensor<4xi64>) -> tensor<?x48x1x1xf32>
    %925 = "onnx.Sigmoid"(%924) {onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/act_reduce/Sigmoid"} : (tensor<?x48x1x1xf32>) -> tensor<?x48x1x1xf32>
    %926 = "onnx.Mul"(%924, %925) {onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/act_reduce/Mul"} : (tensor<?x48x1x1xf32>, tensor<?x48x1x1xf32>) -> tensor<?x48x1x1xf32>
    %927 = "onnx.Dim"(%926) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/expand/Conv_464"} : (tensor<?x48x1x1xf32>) -> tensor<1xi64>
    %928 = "onnx.Concat"(%927, %2, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/expand/Conv_314"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %929 = "onnx.Reshape"(%926, %928) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/expand/Conv_39"} : (tensor<?x48x1x1xf32>, tensor<3xi64>) -> tensor<?x48x?xf32>
    %930 = "onnx.MatMul"(%34, %929) {onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/expand/Conv_487"} : (tensor<1152x48xf32>, tensor<?x48x?xf32>) -> tensor<?x1152x?xf32>
    %931 = "onnx.Add"(%930, %33) {onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/expand/Conv_531"} : (tensor<?x1152x?xf32>, tensor<1x1152x1xf32>) -> tensor<?x1152x?xf32>
    %932 = "onnx.Dim"(%926) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/expand/Conv_427"} : (tensor<?x48x1x1xf32>) -> tensor<1xi64>
    %933 = "onnx.Concat"(%932, %32, %24, %24) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/expand/Conv_61"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %934 = "onnx.Reshape"(%931, %933) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/expand/Conv_375"} : (tensor<?x1152x?xf32>, tensor<4xi64>) -> tensor<?x1152x1x1xf32>
    %935 = "onnx.Sigmoid"(%934) {onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/act_expand/Sigmoid"} : (tensor<?x1152x1x1xf32>) -> tensor<?x1152x1x1xf32>
    %936 = "onnx.Mul"(%915, %935) {onnx_node_name = "/efficientnet/encoder/blocks.15/squeeze_excite/Mul"} : (tensor<?x1152x7x7xf32>, tensor<?x1152x1x1xf32>) -> tensor<?x1152x7x7xf32>
    %937 = "onnx.Dim"(%936) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv_421"} : (tensor<?x1152x7x7xf32>) -> tensor<1xi64>
    %938 = "onnx.Concat"(%937, %3, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv_295"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %939 = "onnx.Reshape"(%936, %938) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv_285"} : (tensor<?x1152x7x7xf32>, tensor<3xi64>) -> tensor<?x1152x?xf32>
    %940 = "onnx.MatMul"(%31, %939) {onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv_496"} : (tensor<320x1152xf32>, tensor<?x1152x?xf32>) -> tensor<?x320x?xf32>
    %941 = "onnx.Add"(%940, %30) {onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv_316"} : (tensor<?x320x?xf32>, tensor<1x320x1xf32>) -> tensor<?x320x?xf32>
    %942 = "onnx.Dim"(%936) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv_490"} : (tensor<?x1152x7x7xf32>) -> tensor<1xi64>
    %943 = "onnx.Concat"(%942, %29, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv_533"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %944 = "onnx.Reshape"(%941, %943) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv_324"} : (tensor<?x320x?xf32>, tensor<4xi64>) -> tensor<?x320x7x7xf32>
    %945 = "onnx.Dim"(%944) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/top_conv/Conv_326"} : (tensor<?x320x7x7xf32>) -> tensor<1xi64>
    %946 = "onnx.Concat"(%945, %1, %218) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv-/efficientnet/encoder/top_conv/Conv_509"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %947 = "onnx.Reshape"(%941, %946) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/blocks.15/projection/project_conv/Conv-/efficientnet/encoder/top_conv/Conv_319"} : (tensor<?x320x?xf32>, tensor<3xi64>) -> tensor<?x320x?xf32>
    %948 = "onnx.MatMul"(%28, %947) {onnx_node_name = "/efficientnet/encoder/top_conv/Conv_298"} : (tensor<1280x320xf32>, tensor<?x320x?xf32>) -> tensor<?x1280x?xf32>
    %949 = "onnx.Add"(%948, %27) {onnx_node_name = "/efficientnet/encoder/top_conv/Conv_382"} : (tensor<?x1280x?xf32>, tensor<1x1280x1xf32>) -> tensor<?x1280x?xf32>
    %950 = "onnx.Dim"(%944) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/top_conv/Conv_288"} : (tensor<?x320x7x7xf32>) -> tensor<1xi64>
    %951 = "onnx.Concat"(%950, %26, %5, %5) {axis = 0 : si64, onnx_node_name = "/efficientnet/encoder/top_conv/Conv_491"} : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %952 = "onnx.Reshape"(%949, %951) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/encoder/top_conv/Conv_506"} : (tensor<?x1280x?xf32>, tensor<4xi64>) -> tensor<?x1280x7x7xf32>
    %953 = "onnx.Sigmoid"(%952) {onnx_node_name = "/efficientnet/encoder/top_activation/Sigmoid"} : (tensor<?x1280x7x7xf32>) -> tensor<?x1280x7x7xf32>
    %954 = "onnx.Mul"(%952, %953) {onnx_node_name = "/efficientnet/encoder/top_activation/Mul"} : (tensor<?x1280x7x7xf32>, tensor<?x1280x7x7xf32>) -> tensor<?x1280x7x7xf32>
    %955 = "onnx.AveragePool"(%954) {auto_pad = "NOTSET", ceil_mode = 1 : si64, count_include_pad = 1 : si64, kernel_shape = [1280, 1280], onnx_node_name = "/efficientnet/pooler/AveragePool", pads = [0, 0, 0, 0], strides = [1280, 1280]} : (tensor<?x1280x7x7xf32>) -> tensor<?x1280x1x1xf32>
    %956 = "onnx.Dim"(%955) {axis = 0 : si64, onnx_node_name = "/efficientnet/Shape_374"} : (tensor<?x1280x1x1xf32>) -> tensor<1xi64>
    %957 = "onnx.Concat"(%956, %0) {axis = 0 : si64, onnx_node_name = "/efficientnet/Concat"} : (tensor<1xi64>, tensor<1xi64>) -> tensor<2xi64>
    %958 = "onnx.Reshape"(%955, %957) {allowzero = 0 : si64, onnx_node_name = "/efficientnet/Reshape"} : (tensor<?x1280x1x1xf32>, tensor<2xi64>) -> tensor<?x1280xf32>
    %959 = "onnx.Gemm"(%958, %229, %230) {alpha = 1.000000e+00 : f32, beta = 1.000000e+00 : f32, onnx_node_name = "/classifier/Gemm", transA = 0 : si64, transB = 1 : si64} : (tensor<?x1280xf32>, tensor<1000x1280xf32>, tensor<1000xf32>) -> tensor<?x1000xf32>
    return %959 : tensor<?x1000xf32>
  }
  "onnx.EntryPoint"() {func = @main_graph} : () -> ()
}

module {
  func.func @"torch-jit-export"(%arg0: !torch.vtensor<[?,3,224,224],f32> loc("mobilenetv2.mlir":2:33)) -> !torch.vtensor<[?,1000],f32> attributes {torch.onnx_meta.ir_version = 6 : si64, torch.onnx_meta.opset_version = 17 : si64, torch.onnx_meta.producer_name = "pytorch", torch.onnx_meta.producer_version = "1.8"} {
    %0 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_475> : tensor<32x3x3x3xf32>} : () -> !torch.vtensor<[32,3,3,3],f32>  loc("mobilenetv2.mlir":3:10)
    %1 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_476> : tensor<32xf32>} : () -> !torch.vtensor<[32],f32>  loc("mobilenetv2.mlir":4:10)
    %2 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_478> : tensor<32x1x3x3xf32>} : () -> !torch.vtensor<[32,1,3,3],f32>  loc("mobilenetv2.mlir":5:10)
    %3 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_479> : tensor<32xf32>} : () -> !torch.vtensor<[32],f32>  loc("mobilenetv2.mlir":6:10)
    %4 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_481> : tensor<16x32x1x1xf32>} : () -> !torch.vtensor<[16,32,1,1],f32>  loc("mobilenetv2.mlir":7:10)
    %5 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_482> : tensor<16xf32>} : () -> !torch.vtensor<[16],f32>  loc("mobilenetv2.mlir":8:10)
    %6 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_484> : tensor<96x16x1x1xf32>} : () -> !torch.vtensor<[96,16,1,1],f32>  loc("mobilenetv2.mlir":9:10)
    %7 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_485> : tensor<96xf32>} : () -> !torch.vtensor<[96],f32>  loc("mobilenetv2.mlir":10:10)
    %8 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_487> : tensor<96x1x3x3xf32>} : () -> !torch.vtensor<[96,1,3,3],f32>  loc("mobilenetv2.mlir":11:10)
    %9 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_488> : tensor<96xf32>} : () -> !torch.vtensor<[96],f32>  loc("mobilenetv2.mlir":12:10)
    %10 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_490> : tensor<24x96x1x1xf32>} : () -> !torch.vtensor<[24,96,1,1],f32>  loc("mobilenetv2.mlir":13:11)
    %11 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_491> : tensor<24xf32>} : () -> !torch.vtensor<[24],f32>  loc("mobilenetv2.mlir":14:11)
    %12 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_493> : tensor<144x24x1x1xf32>} : () -> !torch.vtensor<[144,24,1,1],f32>  loc("mobilenetv2.mlir":15:11)
    %13 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_494> : tensor<144xf32>} : () -> !torch.vtensor<[144],f32>  loc("mobilenetv2.mlir":16:11)
    %14 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_496> : tensor<144x1x3x3xf32>} : () -> !torch.vtensor<[144,1,3,3],f32>  loc("mobilenetv2.mlir":17:11)
    %15 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_497> : tensor<144xf32>} : () -> !torch.vtensor<[144],f32>  loc("mobilenetv2.mlir":18:11)
    %16 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_499> : tensor<24x144x1x1xf32>} : () -> !torch.vtensor<[24,144,1,1],f32>  loc("mobilenetv2.mlir":19:11)
    %17 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_500> : tensor<24xf32>} : () -> !torch.vtensor<[24],f32>  loc("mobilenetv2.mlir":20:11)
    %18 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_502> : tensor<144x24x1x1xf32>} : () -> !torch.vtensor<[144,24,1,1],f32>  loc("mobilenetv2.mlir":21:11)
    %19 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_503> : tensor<144xf32>} : () -> !torch.vtensor<[144],f32>  loc("mobilenetv2.mlir":22:11)
    %20 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_505> : tensor<144x1x3x3xf32>} : () -> !torch.vtensor<[144,1,3,3],f32>  loc("mobilenetv2.mlir":23:11)
    %21 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_506> : tensor<144xf32>} : () -> !torch.vtensor<[144],f32>  loc("mobilenetv2.mlir":24:11)
    %22 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_508> : tensor<32x144x1x1xf32>} : () -> !torch.vtensor<[32,144,1,1],f32>  loc("mobilenetv2.mlir":25:11)
    %23 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_509> : tensor<32xf32>} : () -> !torch.vtensor<[32],f32>  loc("mobilenetv2.mlir":26:11)
    %24 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_511> : tensor<192x32x1x1xf32>} : () -> !torch.vtensor<[192,32,1,1],f32>  loc("mobilenetv2.mlir":27:11)
    %25 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_512> : tensor<192xf32>} : () -> !torch.vtensor<[192],f32>  loc("mobilenetv2.mlir":28:11)
    %26 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_514> : tensor<192x1x3x3xf32>} : () -> !torch.vtensor<[192,1,3,3],f32>  loc("mobilenetv2.mlir":29:11)
    %27 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_515> : tensor<192xf32>} : () -> !torch.vtensor<[192],f32>  loc("mobilenetv2.mlir":30:11)
    %28 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_517> : tensor<32x192x1x1xf32>} : () -> !torch.vtensor<[32,192,1,1],f32>  loc("mobilenetv2.mlir":31:11)
    %29 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_518> : tensor<32xf32>} : () -> !torch.vtensor<[32],f32>  loc("mobilenetv2.mlir":32:11)
    %30 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_520> : tensor<192x32x1x1xf32>} : () -> !torch.vtensor<[192,32,1,1],f32>  loc("mobilenetv2.mlir":33:11)
    %31 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_521> : tensor<192xf32>} : () -> !torch.vtensor<[192],f32>  loc("mobilenetv2.mlir":34:11)
    %32 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_523> : tensor<192x1x3x3xf32>} : () -> !torch.vtensor<[192,1,3,3],f32>  loc("mobilenetv2.mlir":35:11)
    %33 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_524> : tensor<192xf32>} : () -> !torch.vtensor<[192],f32>  loc("mobilenetv2.mlir":36:11)
    %34 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_526> : tensor<32x192x1x1xf32>} : () -> !torch.vtensor<[32,192,1,1],f32>  loc("mobilenetv2.mlir":37:11)
    %35 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_527> : tensor<32xf32>} : () -> !torch.vtensor<[32],f32>  loc("mobilenetv2.mlir":38:11)
    %36 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_529> : tensor<192x32x1x1xf32>} : () -> !torch.vtensor<[192,32,1,1],f32>  loc("mobilenetv2.mlir":39:11)
    %37 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_530> : tensor<192xf32>} : () -> !torch.vtensor<[192],f32>  loc("mobilenetv2.mlir":40:11)
    %38 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_532> : tensor<192x1x3x3xf32>} : () -> !torch.vtensor<[192,1,3,3],f32>  loc("mobilenetv2.mlir":41:11)
    %39 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_533> : tensor<192xf32>} : () -> !torch.vtensor<[192],f32>  loc("mobilenetv2.mlir":42:11)
    %40 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_535> : tensor<64x192x1x1xf32>} : () -> !torch.vtensor<[64,192,1,1],f32>  loc("mobilenetv2.mlir":43:11)
    %41 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_536> : tensor<64xf32>} : () -> !torch.vtensor<[64],f32>  loc("mobilenetv2.mlir":44:11)
    %42 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_538> : tensor<384x64x1x1xf32>} : () -> !torch.vtensor<[384,64,1,1],f32>  loc("mobilenetv2.mlir":45:11)
    %43 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_539> : tensor<384xf32>} : () -> !torch.vtensor<[384],f32>  loc("mobilenetv2.mlir":46:11)
    %44 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_541> : tensor<384x1x3x3xf32>} : () -> !torch.vtensor<[384,1,3,3],f32>  loc("mobilenetv2.mlir":47:11)
    %45 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_542> : tensor<384xf32>} : () -> !torch.vtensor<[384],f32>  loc("mobilenetv2.mlir":48:11)
    %46 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_544> : tensor<64x384x1x1xf32>} : () -> !torch.vtensor<[64,384,1,1],f32>  loc("mobilenetv2.mlir":49:11)
    %47 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_545> : tensor<64xf32>} : () -> !torch.vtensor<[64],f32>  loc("mobilenetv2.mlir":50:11)
    %48 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_547> : tensor<384x64x1x1xf32>} : () -> !torch.vtensor<[384,64,1,1],f32>  loc("mobilenetv2.mlir":51:11)
    %49 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_548> : tensor<384xf32>} : () -> !torch.vtensor<[384],f32>  loc("mobilenetv2.mlir":52:11)
    %50 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_550> : tensor<384x1x3x3xf32>} : () -> !torch.vtensor<[384,1,3,3],f32>  loc("mobilenetv2.mlir":53:11)
    %51 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_551> : tensor<384xf32>} : () -> !torch.vtensor<[384],f32>  loc("mobilenetv2.mlir":54:11)
    %52 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_553> : tensor<64x384x1x1xf32>} : () -> !torch.vtensor<[64,384,1,1],f32>  loc("mobilenetv2.mlir":55:11)
    %53 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_554> : tensor<64xf32>} : () -> !torch.vtensor<[64],f32>  loc("mobilenetv2.mlir":56:11)
    %54 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_556> : tensor<384x64x1x1xf32>} : () -> !torch.vtensor<[384,64,1,1],f32>  loc("mobilenetv2.mlir":57:11)
    %55 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_557> : tensor<384xf32>} : () -> !torch.vtensor<[384],f32>  loc("mobilenetv2.mlir":58:11)
    %56 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_559> : tensor<384x1x3x3xf32>} : () -> !torch.vtensor<[384,1,3,3],f32>  loc("mobilenetv2.mlir":59:11)
    %57 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_560> : tensor<384xf32>} : () -> !torch.vtensor<[384],f32>  loc("mobilenetv2.mlir":60:11)
    %58 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_562> : tensor<64x384x1x1xf32>} : () -> !torch.vtensor<[64,384,1,1],f32>  loc("mobilenetv2.mlir":61:11)
    %59 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_563> : tensor<64xf32>} : () -> !torch.vtensor<[64],f32>  loc("mobilenetv2.mlir":62:11)
    %60 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_565> : tensor<384x64x1x1xf32>} : () -> !torch.vtensor<[384,64,1,1],f32>  loc("mobilenetv2.mlir":63:11)
    %61 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_566> : tensor<384xf32>} : () -> !torch.vtensor<[384],f32>  loc("mobilenetv2.mlir":64:11)
    %62 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_568> : tensor<384x1x3x3xf32>} : () -> !torch.vtensor<[384,1,3,3],f32>  loc("mobilenetv2.mlir":65:11)
    %63 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_569> : tensor<384xf32>} : () -> !torch.vtensor<[384],f32>  loc("mobilenetv2.mlir":66:11)
    %64 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_571> : tensor<96x384x1x1xf32>} : () -> !torch.vtensor<[96,384,1,1],f32>  loc("mobilenetv2.mlir":67:11)
    %65 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_572> : tensor<96xf32>} : () -> !torch.vtensor<[96],f32>  loc("mobilenetv2.mlir":68:11)
    %66 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_574> : tensor<576x96x1x1xf32>} : () -> !torch.vtensor<[576,96,1,1],f32>  loc("mobilenetv2.mlir":69:11)
    %67 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_575> : tensor<576xf32>} : () -> !torch.vtensor<[576],f32>  loc("mobilenetv2.mlir":70:11)
    %68 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_577> : tensor<576x1x3x3xf32>} : () -> !torch.vtensor<[576,1,3,3],f32>  loc("mobilenetv2.mlir":71:11)
    %69 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_578> : tensor<576xf32>} : () -> !torch.vtensor<[576],f32>  loc("mobilenetv2.mlir":72:11)
    %70 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_580> : tensor<96x576x1x1xf32>} : () -> !torch.vtensor<[96,576,1,1],f32>  loc("mobilenetv2.mlir":73:11)
    %71 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_581> : tensor<96xf32>} : () -> !torch.vtensor<[96],f32>  loc("mobilenetv2.mlir":74:11)
    %72 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_583> : tensor<576x96x1x1xf32>} : () -> !torch.vtensor<[576,96,1,1],f32>  loc("mobilenetv2.mlir":75:11)
    %73 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_584> : tensor<576xf32>} : () -> !torch.vtensor<[576],f32>  loc("mobilenetv2.mlir":76:11)
    %74 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_586> : tensor<576x1x3x3xf32>} : () -> !torch.vtensor<[576,1,3,3],f32>  loc("mobilenetv2.mlir":77:11)
    %75 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_587> : tensor<576xf32>} : () -> !torch.vtensor<[576],f32>  loc("mobilenetv2.mlir":78:11)
    %76 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_589> : tensor<96x576x1x1xf32>} : () -> !torch.vtensor<[96,576,1,1],f32>  loc("mobilenetv2.mlir":79:11)
    %77 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_590> : tensor<96xf32>} : () -> !torch.vtensor<[96],f32>  loc("mobilenetv2.mlir":80:11)
    %78 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_592> : tensor<576x96x1x1xf32>} : () -> !torch.vtensor<[576,96,1,1],f32>  loc("mobilenetv2.mlir":81:11)
    %79 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_593> : tensor<576xf32>} : () -> !torch.vtensor<[576],f32>  loc("mobilenetv2.mlir":82:11)
    %80 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_595> : tensor<576x1x3x3xf32>} : () -> !torch.vtensor<[576,1,3,3],f32>  loc("mobilenetv2.mlir":83:11)
    %81 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_596> : tensor<576xf32>} : () -> !torch.vtensor<[576],f32>  loc("mobilenetv2.mlir":84:11)
    %82 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_598> : tensor<160x576x1x1xf32>} : () -> !torch.vtensor<[160,576,1,1],f32>  loc("mobilenetv2.mlir":85:11)
    %83 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_599> : tensor<160xf32>} : () -> !torch.vtensor<[160],f32>  loc("mobilenetv2.mlir":86:11)
    %84 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_601> : tensor<960x160x1x1xf32>} : () -> !torch.vtensor<[960,160,1,1],f32>  loc("mobilenetv2.mlir":87:11)
    %85 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_602> : tensor<960xf32>} : () -> !torch.vtensor<[960],f32>  loc("mobilenetv2.mlir":88:11)
    %86 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_604> : tensor<960x1x3x3xf32>} : () -> !torch.vtensor<[960,1,3,3],f32>  loc("mobilenetv2.mlir":89:11)
    %87 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_605> : tensor<960xf32>} : () -> !torch.vtensor<[960],f32>  loc("mobilenetv2.mlir":90:11)
    %88 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_607> : tensor<160x960x1x1xf32>} : () -> !torch.vtensor<[160,960,1,1],f32>  loc("mobilenetv2.mlir":91:11)
    %89 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_608> : tensor<160xf32>} : () -> !torch.vtensor<[160],f32>  loc("mobilenetv2.mlir":92:11)
    %90 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_610> : tensor<960x160x1x1xf32>} : () -> !torch.vtensor<[960,160,1,1],f32>  loc("mobilenetv2.mlir":93:11)
    %91 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_611> : tensor<960xf32>} : () -> !torch.vtensor<[960],f32>  loc("mobilenetv2.mlir":94:11)
    %92 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_613> : tensor<960x1x3x3xf32>} : () -> !torch.vtensor<[960,1,3,3],f32>  loc("mobilenetv2.mlir":95:11)
    %93 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_614> : tensor<960xf32>} : () -> !torch.vtensor<[960],f32>  loc("mobilenetv2.mlir":96:11)
    %94 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_616> : tensor<160x960x1x1xf32>} : () -> !torch.vtensor<[160,960,1,1],f32>  loc("mobilenetv2.mlir":97:11)
    %95 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_617> : tensor<160xf32>} : () -> !torch.vtensor<[160],f32>  loc("mobilenetv2.mlir":98:11)
    %96 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_619> : tensor<960x160x1x1xf32>} : () -> !torch.vtensor<[960,160,1,1],f32>  loc("mobilenetv2.mlir":99:11)
    %97 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_620> : tensor<960xf32>} : () -> !torch.vtensor<[960],f32>  loc("mobilenetv2.mlir":100:11)
    %98 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_622> : tensor<960x1x3x3xf32>} : () -> !torch.vtensor<[960,1,3,3],f32>  loc("mobilenetv2.mlir":101:11)
    %99 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_623> : tensor<960xf32>} : () -> !torch.vtensor<[960],f32>  loc("mobilenetv2.mlir":102:11)
    %100 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_625> : tensor<320x960x1x1xf32>} : () -> !torch.vtensor<[320,960,1,1],f32>  loc("mobilenetv2.mlir":103:12)
    %101 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_626> : tensor<320xf32>} : () -> !torch.vtensor<[320],f32>  loc("mobilenetv2.mlir":104:12)
    %102 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_628> : tensor<1280x320x1x1xf32>} : () -> !torch.vtensor<[1280,320,1,1],f32>  loc("mobilenetv2.mlir":105:12)
    %103 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_629> : tensor<1280xf32>} : () -> !torch.vtensor<[1280],f32>  loc("mobilenetv2.mlir":106:12)
    %104 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_630> : tensor<1xsi64>} : () -> !torch.vtensor<[1],si64>  loc("mobilenetv2.mlir":107:12)
    %105 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_classifier.1.bias> : tensor<1000xf32>} : () -> !torch.vtensor<[1000],f32>  loc("mobilenetv2.mlir":108:12)
    %106 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_classifier.1.weight> : tensor<1000x1280xf32>} : () -> !torch.vtensor<[1000,1280],f32>  loc("mobilenetv2.mlir":109:12)
    %none = torch.constant.none loc("mobilenetv2.mlir":110:13)
    %107 = torch.operator "onnx.Conv"(%arg0, %0, %1) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [2 : si64, 2 : si64]} : (!torch.vtensor<[?,3,224,224],f32>, !torch.vtensor<[32,3,3,3],f32>, !torch.vtensor<[32],f32>) -> !torch.vtensor<[?,32,112,112],f32>  loc("mobilenetv2.mlir":111:12)
    %108 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":112:12)
    %109 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":113:12)
    %110 = torch.operator "onnx.Clip"(%107, %108, %109) : (!torch.vtensor<[?,32,112,112],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,32,112,112],f32>  loc("mobilenetv2.mlir":114:12)
    %111 = torch.operator "onnx.Conv"(%110, %2, %3) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 32 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,32,112,112],f32>, !torch.vtensor<[32,1,3,3],f32>, !torch.vtensor<[32],f32>) -> !torch.vtensor<[?,32,112,112],f32>  loc("mobilenetv2.mlir":115:12)
    %112 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":116:12)
    %113 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":117:12)
    %114 = torch.operator "onnx.Clip"(%111, %112, %113) : (!torch.vtensor<[?,32,112,112],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,32,112,112],f32>  loc("mobilenetv2.mlir":118:12)
    %115 = torch.operator "onnx.Conv"(%114, %4, %5) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,32,112,112],f32>, !torch.vtensor<[16,32,1,1],f32>, !torch.vtensor<[16],f32>) -> !torch.vtensor<[?,16,112,112],f32>  loc("mobilenetv2.mlir":119:12)
    %116 = torch.operator "onnx.Conv"(%115, %6, %7) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,16,112,112],f32>, !torch.vtensor<[96,16,1,1],f32>, !torch.vtensor<[96],f32>) -> !torch.vtensor<[?,96,112,112],f32>  loc("mobilenetv2.mlir":120:12)
    %117 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":121:12)
    %118 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":122:12)
    %119 = torch.operator "onnx.Clip"(%116, %117, %118) : (!torch.vtensor<[?,96,112,112],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,96,112,112],f32>  loc("mobilenetv2.mlir":123:12)
    %120 = torch.operator "onnx.Conv"(%119, %8, %9) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 96 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [2 : si64, 2 : si64]} : (!torch.vtensor<[?,96,112,112],f32>, !torch.vtensor<[96,1,3,3],f32>, !torch.vtensor<[96],f32>) -> !torch.vtensor<[?,96,56,56],f32>  loc("mobilenetv2.mlir":124:12)
    %121 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":125:12)
    %122 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":126:12)
    %123 = torch.operator "onnx.Clip"(%120, %121, %122) : (!torch.vtensor<[?,96,56,56],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,96,56,56],f32>  loc("mobilenetv2.mlir":127:12)
    %124 = torch.operator "onnx.Conv"(%123, %10, %11) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,96,56,56],f32>, !torch.vtensor<[24,96,1,1],f32>, !torch.vtensor<[24],f32>) -> !torch.vtensor<[?,24,56,56],f32>  loc("mobilenetv2.mlir":128:12)
    %125 = torch.operator "onnx.Conv"(%124, %12, %13) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,24,56,56],f32>, !torch.vtensor<[144,24,1,1],f32>, !torch.vtensor<[144],f32>) -> !torch.vtensor<[?,144,56,56],f32>  loc("mobilenetv2.mlir":129:12)
    %126 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":130:12)
    %127 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":131:12)
    %128 = torch.operator "onnx.Clip"(%125, %126, %127) : (!torch.vtensor<[?,144,56,56],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,144,56,56],f32>  loc("mobilenetv2.mlir":132:12)
    %129 = torch.operator "onnx.Conv"(%128, %14, %15) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 144 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,144,56,56],f32>, !torch.vtensor<[144,1,3,3],f32>, !torch.vtensor<[144],f32>) -> !torch.vtensor<[?,144,56,56],f32>  loc("mobilenetv2.mlir":133:12)
    %130 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":134:12)
    %131 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":135:12)
    %132 = torch.operator "onnx.Clip"(%129, %130, %131) : (!torch.vtensor<[?,144,56,56],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,144,56,56],f32>  loc("mobilenetv2.mlir":136:12)
    %133 = torch.operator "onnx.Conv"(%132, %16, %17) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,144,56,56],f32>, !torch.vtensor<[24,144,1,1],f32>, !torch.vtensor<[24],f32>) -> !torch.vtensor<[?,24,56,56],f32>  loc("mobilenetv2.mlir":137:12)
    %134 = torch.operator "onnx.Add"(%124, %133) : (!torch.vtensor<[?,24,56,56],f32>, !torch.vtensor<[?,24,56,56],f32>) -> !torch.vtensor<[?,24,56,56],f32>  loc("mobilenetv2.mlir":138:12)
    %135 = torch.operator "onnx.Conv"(%134, %18, %19) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,24,56,56],f32>, !torch.vtensor<[144,24,1,1],f32>, !torch.vtensor<[144],f32>) -> !torch.vtensor<[?,144,56,56],f32>  loc("mobilenetv2.mlir":139:12)
    %136 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":140:12)
    %137 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":141:12)
    %138 = torch.operator "onnx.Clip"(%135, %136, %137) : (!torch.vtensor<[?,144,56,56],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,144,56,56],f32>  loc("mobilenetv2.mlir":142:12)
    %139 = torch.operator "onnx.Conv"(%138, %20, %21) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 144 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [2 : si64, 2 : si64]} : (!torch.vtensor<[?,144,56,56],f32>, !torch.vtensor<[144,1,3,3],f32>, !torch.vtensor<[144],f32>) -> !torch.vtensor<[?,144,28,28],f32>  loc("mobilenetv2.mlir":143:12)
    %140 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":144:12)
    %141 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":145:12)
    %142 = torch.operator "onnx.Clip"(%139, %140, %141) : (!torch.vtensor<[?,144,28,28],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,144,28,28],f32>  loc("mobilenetv2.mlir":146:12)
    %143 = torch.operator "onnx.Conv"(%142, %22, %23) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,144,28,28],f32>, !torch.vtensor<[32,144,1,1],f32>, !torch.vtensor<[32],f32>) -> !torch.vtensor<[?,32,28,28],f32>  loc("mobilenetv2.mlir":147:12)
    %144 = torch.operator "onnx.Conv"(%143, %24, %25) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,32,28,28],f32>, !torch.vtensor<[192,32,1,1],f32>, !torch.vtensor<[192],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":148:12)
    %145 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":149:12)
    %146 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":150:12)
    %147 = torch.operator "onnx.Clip"(%144, %145, %146) : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":151:12)
    %148 = torch.operator "onnx.Conv"(%147, %26, %27) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 192 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[192,1,3,3],f32>, !torch.vtensor<[192],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":152:12)
    %149 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":153:12)
    %150 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":154:12)
    %151 = torch.operator "onnx.Clip"(%148, %149, %150) : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":155:12)
    %152 = torch.operator "onnx.Conv"(%151, %28, %29) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[32,192,1,1],f32>, !torch.vtensor<[32],f32>) -> !torch.vtensor<[?,32,28,28],f32>  loc("mobilenetv2.mlir":156:12)
    %153 = torch.operator "onnx.Add"(%143, %152) : (!torch.vtensor<[?,32,28,28],f32>, !torch.vtensor<[?,32,28,28],f32>) -> !torch.vtensor<[?,32,28,28],f32>  loc("mobilenetv2.mlir":157:12)
    %154 = torch.operator "onnx.Conv"(%153, %30, %31) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,32,28,28],f32>, !torch.vtensor<[192,32,1,1],f32>, !torch.vtensor<[192],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":158:12)
    %155 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":159:12)
    %156 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":160:12)
    %157 = torch.operator "onnx.Clip"(%154, %155, %156) : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":161:12)
    %158 = torch.operator "onnx.Conv"(%157, %32, %33) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 192 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[192,1,3,3],f32>, !torch.vtensor<[192],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":162:12)
    %159 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":163:12)
    %160 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":164:12)
    %161 = torch.operator "onnx.Clip"(%158, %159, %160) : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":165:12)
    %162 = torch.operator "onnx.Conv"(%161, %34, %35) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[32,192,1,1],f32>, !torch.vtensor<[32],f32>) -> !torch.vtensor<[?,32,28,28],f32>  loc("mobilenetv2.mlir":166:12)
    %163 = torch.operator "onnx.Add"(%153, %162) : (!torch.vtensor<[?,32,28,28],f32>, !torch.vtensor<[?,32,28,28],f32>) -> !torch.vtensor<[?,32,28,28],f32>  loc("mobilenetv2.mlir":167:12)
    %164 = torch.operator "onnx.Conv"(%163, %36, %37) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,32,28,28],f32>, !torch.vtensor<[192,32,1,1],f32>, !torch.vtensor<[192],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":168:12)
    %165 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":169:12)
    %166 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":170:12)
    %167 = torch.operator "onnx.Clip"(%164, %165, %166) : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,192,28,28],f32>  loc("mobilenetv2.mlir":171:12)
    %168 = torch.operator "onnx.Conv"(%167, %38, %39) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 192 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [2 : si64, 2 : si64]} : (!torch.vtensor<[?,192,28,28],f32>, !torch.vtensor<[192,1,3,3],f32>, !torch.vtensor<[192],f32>) -> !torch.vtensor<[?,192,14,14],f32>  loc("mobilenetv2.mlir":172:12)
    %169 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":173:12)
    %170 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":174:12)
    %171 = torch.operator "onnx.Clip"(%168, %169, %170) : (!torch.vtensor<[?,192,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,192,14,14],f32>  loc("mobilenetv2.mlir":175:12)
    %172 = torch.operator "onnx.Conv"(%171, %40, %41) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,192,14,14],f32>, !torch.vtensor<[64,192,1,1],f32>, !torch.vtensor<[64],f32>) -> !torch.vtensor<[?,64,14,14],f32>  loc("mobilenetv2.mlir":176:12)
    %173 = torch.operator "onnx.Conv"(%172, %42, %43) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,64,14,14],f32>, !torch.vtensor<[384,64,1,1],f32>, !torch.vtensor<[384],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":177:12)
    %174 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":178:12)
    %175 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":179:12)
    %176 = torch.operator "onnx.Clip"(%173, %174, %175) : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":180:12)
    %177 = torch.operator "onnx.Conv"(%176, %44, %45) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 384 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[384,1,3,3],f32>, !torch.vtensor<[384],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":181:12)
    %178 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":182:12)
    %179 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":183:12)
    %180 = torch.operator "onnx.Clip"(%177, %178, %179) : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":184:12)
    %181 = torch.operator "onnx.Conv"(%180, %46, %47) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[64,384,1,1],f32>, !torch.vtensor<[64],f32>) -> !torch.vtensor<[?,64,14,14],f32>  loc("mobilenetv2.mlir":185:12)
    %182 = torch.operator "onnx.Add"(%172, %181) : (!torch.vtensor<[?,64,14,14],f32>, !torch.vtensor<[?,64,14,14],f32>) -> !torch.vtensor<[?,64,14,14],f32>  loc("mobilenetv2.mlir":186:12)
    %183 = torch.operator "onnx.Conv"(%182, %48, %49) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,64,14,14],f32>, !torch.vtensor<[384,64,1,1],f32>, !torch.vtensor<[384],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":187:12)
    %184 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":188:12)
    %185 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":189:12)
    %186 = torch.operator "onnx.Clip"(%183, %184, %185) : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":190:12)
    %187 = torch.operator "onnx.Conv"(%186, %50, %51) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 384 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[384,1,3,3],f32>, !torch.vtensor<[384],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":191:12)
    %188 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":192:12)
    %189 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":193:12)
    %190 = torch.operator "onnx.Clip"(%187, %188, %189) : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":194:12)
    %191 = torch.operator "onnx.Conv"(%190, %52, %53) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[64,384,1,1],f32>, !torch.vtensor<[64],f32>) -> !torch.vtensor<[?,64,14,14],f32>  loc("mobilenetv2.mlir":195:12)
    %192 = torch.operator "onnx.Add"(%182, %191) : (!torch.vtensor<[?,64,14,14],f32>, !torch.vtensor<[?,64,14,14],f32>) -> !torch.vtensor<[?,64,14,14],f32>  loc("mobilenetv2.mlir":196:12)
    %193 = torch.operator "onnx.Conv"(%192, %54, %55) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,64,14,14],f32>, !torch.vtensor<[384,64,1,1],f32>, !torch.vtensor<[384],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":197:12)
    %194 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":198:12)
    %195 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":199:12)
    %196 = torch.operator "onnx.Clip"(%193, %194, %195) : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":200:12)
    %197 = torch.operator "onnx.Conv"(%196, %56, %57) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 384 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[384,1,3,3],f32>, !torch.vtensor<[384],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":201:12)
    %198 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":202:12)
    %199 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":203:12)
    %200 = torch.operator "onnx.Clip"(%197, %198, %199) : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":204:12)
    %201 = torch.operator "onnx.Conv"(%200, %58, %59) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[64,384,1,1],f32>, !torch.vtensor<[64],f32>) -> !torch.vtensor<[?,64,14,14],f32>  loc("mobilenetv2.mlir":205:12)
    %202 = torch.operator "onnx.Add"(%192, %201) : (!torch.vtensor<[?,64,14,14],f32>, !torch.vtensor<[?,64,14,14],f32>) -> !torch.vtensor<[?,64,14,14],f32>  loc("mobilenetv2.mlir":206:12)
    %203 = torch.operator "onnx.Conv"(%202, %60, %61) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,64,14,14],f32>, !torch.vtensor<[384,64,1,1],f32>, !torch.vtensor<[384],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":207:12)
    %204 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":208:12)
    %205 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":209:12)
    %206 = torch.operator "onnx.Clip"(%203, %204, %205) : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":210:12)
    %207 = torch.operator "onnx.Conv"(%206, %62, %63) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 384 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[384,1,3,3],f32>, !torch.vtensor<[384],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":211:12)
    %208 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":212:12)
    %209 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":213:12)
    %210 = torch.operator "onnx.Clip"(%207, %208, %209) : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,384,14,14],f32>  loc("mobilenetv2.mlir":214:12)
    %211 = torch.operator "onnx.Conv"(%210, %64, %65) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,384,14,14],f32>, !torch.vtensor<[96,384,1,1],f32>, !torch.vtensor<[96],f32>) -> !torch.vtensor<[?,96,14,14],f32>  loc("mobilenetv2.mlir":215:12)
    %212 = torch.operator "onnx.Conv"(%211, %66, %67) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,96,14,14],f32>, !torch.vtensor<[576,96,1,1],f32>, !torch.vtensor<[576],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":216:12)
    %213 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":217:12)
    %214 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":218:12)
    %215 = torch.operator "onnx.Clip"(%212, %213, %214) : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":219:12)
    %216 = torch.operator "onnx.Conv"(%215, %68, %69) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 576 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[576,1,3,3],f32>, !torch.vtensor<[576],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":220:12)
    %217 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":221:12)
    %218 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":222:12)
    %219 = torch.operator "onnx.Clip"(%216, %217, %218) : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":223:12)
    %220 = torch.operator "onnx.Conv"(%219, %70, %71) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[96,576,1,1],f32>, !torch.vtensor<[96],f32>) -> !torch.vtensor<[?,96,14,14],f32>  loc("mobilenetv2.mlir":224:12)
    %221 = torch.operator "onnx.Add"(%211, %220) : (!torch.vtensor<[?,96,14,14],f32>, !torch.vtensor<[?,96,14,14],f32>) -> !torch.vtensor<[?,96,14,14],f32>  loc("mobilenetv2.mlir":225:12)
    %222 = torch.operator "onnx.Conv"(%221, %72, %73) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,96,14,14],f32>, !torch.vtensor<[576,96,1,1],f32>, !torch.vtensor<[576],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":226:12)
    %223 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":227:12)
    %224 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":228:12)
    %225 = torch.operator "onnx.Clip"(%222, %223, %224) : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":229:12)
    %226 = torch.operator "onnx.Conv"(%225, %74, %75) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 576 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[576,1,3,3],f32>, !torch.vtensor<[576],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":230:12)
    %227 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":231:12)
    %228 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":232:12)
    %229 = torch.operator "onnx.Clip"(%226, %227, %228) : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":233:12)
    %230 = torch.operator "onnx.Conv"(%229, %76, %77) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[96,576,1,1],f32>, !torch.vtensor<[96],f32>) -> !torch.vtensor<[?,96,14,14],f32>  loc("mobilenetv2.mlir":234:12)
    %231 = torch.operator "onnx.Add"(%221, %230) : (!torch.vtensor<[?,96,14,14],f32>, !torch.vtensor<[?,96,14,14],f32>) -> !torch.vtensor<[?,96,14,14],f32>  loc("mobilenetv2.mlir":235:12)
    %232 = torch.operator "onnx.Conv"(%231, %78, %79) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,96,14,14],f32>, !torch.vtensor<[576,96,1,1],f32>, !torch.vtensor<[576],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":236:12)
    %233 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":237:12)
    %234 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":238:12)
    %235 = torch.operator "onnx.Clip"(%232, %233, %234) : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,576,14,14],f32>  loc("mobilenetv2.mlir":239:12)
    %236 = torch.operator "onnx.Conv"(%235, %80, %81) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 576 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [2 : si64, 2 : si64]} : (!torch.vtensor<[?,576,14,14],f32>, !torch.vtensor<[576,1,3,3],f32>, !torch.vtensor<[576],f32>) -> !torch.vtensor<[?,576,7,7],f32>  loc("mobilenetv2.mlir":240:12)
    %237 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":241:12)
    %238 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":242:12)
    %239 = torch.operator "onnx.Clip"(%236, %237, %238) : (!torch.vtensor<[?,576,7,7],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,576,7,7],f32>  loc("mobilenetv2.mlir":243:12)
    %240 = torch.operator "onnx.Conv"(%239, %82, %83) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,576,7,7],f32>, !torch.vtensor<[160,576,1,1],f32>, !torch.vtensor<[160],f32>) -> !torch.vtensor<[?,160,7,7],f32>  loc("mobilenetv2.mlir":244:12)
    %241 = torch.operator "onnx.Conv"(%240, %84, %85) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,160,7,7],f32>, !torch.vtensor<[960,160,1,1],f32>, !torch.vtensor<[960],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":245:12)
    %242 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":246:12)
    %243 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":247:12)
    %244 = torch.operator "onnx.Clip"(%241, %242, %243) : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":248:12)
    %245 = torch.operator "onnx.Conv"(%244, %86, %87) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 960 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[960,1,3,3],f32>, !torch.vtensor<[960],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":249:12)
    %246 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":250:12)
    %247 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":251:12)
    %248 = torch.operator "onnx.Clip"(%245, %246, %247) : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":252:12)
    %249 = torch.operator "onnx.Conv"(%248, %88, %89) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[160,960,1,1],f32>, !torch.vtensor<[160],f32>) -> !torch.vtensor<[?,160,7,7],f32>  loc("mobilenetv2.mlir":253:12)
    %250 = torch.operator "onnx.Add"(%240, %249) : (!torch.vtensor<[?,160,7,7],f32>, !torch.vtensor<[?,160,7,7],f32>) -> !torch.vtensor<[?,160,7,7],f32>  loc("mobilenetv2.mlir":254:12)
    %251 = torch.operator "onnx.Conv"(%250, %90, %91) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,160,7,7],f32>, !torch.vtensor<[960,160,1,1],f32>, !torch.vtensor<[960],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":255:12)
    %252 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":256:12)
    %253 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":257:12)
    %254 = torch.operator "onnx.Clip"(%251, %252, %253) : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":258:12)
    %255 = torch.operator "onnx.Conv"(%254, %92, %93) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 960 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[960,1,3,3],f32>, !torch.vtensor<[960],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":259:12)
    %256 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":260:12)
    %257 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":261:12)
    %258 = torch.operator "onnx.Clip"(%255, %256, %257) : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":262:12)
    %259 = torch.operator "onnx.Conv"(%258, %94, %95) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[160,960,1,1],f32>, !torch.vtensor<[160],f32>) -> !torch.vtensor<[?,160,7,7],f32>  loc("mobilenetv2.mlir":263:12)
    %260 = torch.operator "onnx.Add"(%250, %259) : (!torch.vtensor<[?,160,7,7],f32>, !torch.vtensor<[?,160,7,7],f32>) -> !torch.vtensor<[?,160,7,7],f32>  loc("mobilenetv2.mlir":264:12)
    %261 = torch.operator "onnx.Conv"(%260, %96, %97) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,160,7,7],f32>, !torch.vtensor<[960,160,1,1],f32>, !torch.vtensor<[960],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":265:12)
    %262 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":266:12)
    %263 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":267:12)
    %264 = torch.operator "onnx.Clip"(%261, %262, %263) : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":268:12)
    %265 = torch.operator "onnx.Conv"(%264, %98, %99) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 960 : si64, torch.onnx.kernel_shape = [3 : si64, 3 : si64], torch.onnx.pads = [1 : si64, 1 : si64, 1 : si64, 1 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[960,1,3,3],f32>, !torch.vtensor<[960],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":269:12)
    %266 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":270:12)
    %267 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":271:12)
    %268 = torch.operator "onnx.Clip"(%265, %266, %267) : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,960,7,7],f32>  loc("mobilenetv2.mlir":272:12)
    %269 = torch.operator "onnx.Conv"(%268, %100, %101) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,960,7,7],f32>, !torch.vtensor<[320,960,1,1],f32>, !torch.vtensor<[320],f32>) -> !torch.vtensor<[?,320,7,7],f32>  loc("mobilenetv2.mlir":273:12)
    %270 = torch.operator "onnx.Conv"(%269, %102, %103) {torch.onnx.dilations = [1 : si64, 1 : si64], torch.onnx.group = 1 : si64, torch.onnx.kernel_shape = [1 : si64, 1 : si64], torch.onnx.pads = [0 : si64, 0 : si64, 0 : si64, 0 : si64], torch.onnx.strides = [1 : si64, 1 : si64]} : (!torch.vtensor<[?,320,7,7],f32>, !torch.vtensor<[1280,320,1,1],f32>, !torch.vtensor<[1280],f32>) -> !torch.vtensor<[?,1280,7,7],f32>  loc("mobilenetv2.mlir":274:12)
    %271 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":275:12)
    %272 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<6.000000e+00> : tensor<f32>} : () -> !torch.vtensor<[],f32>  loc("mobilenetv2.mlir":276:12)
    %273 = torch.operator "onnx.Clip"(%270, %271, %272) : (!torch.vtensor<[?,1280,7,7],f32>, !torch.vtensor<[],f32>, !torch.vtensor<[],f32>) -> !torch.vtensor<[?,1280,7,7],f32>  loc("mobilenetv2.mlir":277:12)
    %274 = torch.operator "onnx.GlobalAveragePool"(%273) : (!torch.vtensor<[?,1280,7,7],f32>) -> !torch.vtensor<[?,1280,1,1],f32>  loc("mobilenetv2.mlir":278:12)
    %275 = torch.operator "onnx.Shape"(%273) : (!torch.vtensor<[?,1280,7,7],f32>) -> !torch.vtensor<[4],si64>  loc("mobilenetv2.mlir":279:12)
    %276 = torch.operator "onnx.Constant"() {torch.onnx.value = dense_resource<_> : tensor<si64>} : () -> !torch.vtensor<[],si64>  loc("mobilenetv2.mlir":280:12)
    %277 = torch.operator "onnx.Gather"(%275, %276) {torch.onnx.axis = 0 : si64} : (!torch.vtensor<[4],si64>, !torch.vtensor<[],si64>) -> !torch.vtensor<[],si64>  loc("mobilenetv2.mlir":281:12)
    %278 = torch.operator "onnx.Constant"() {torch.onnx.value = dense<0> : tensor<1xsi64>} : () -> !torch.vtensor<[1],si64>  loc("mobilenetv2.mlir":282:12)
    %279 = torch.operator "onnx.Unsqueeze"(%277, %278) : (!torch.vtensor<[],si64>, !torch.vtensor<[1],si64>) -> !torch.vtensor<[1],si64>  loc("mobilenetv2.mlir":283:12)
    %280 = torch.operator "onnx.Concat"(%279, %104) {torch.onnx.axis = 0 : si64} : (!torch.vtensor<[1],si64>, !torch.vtensor<[1],si64>) -> !torch.vtensor<[2],si64>  loc("mobilenetv2.mlir":284:12)
    %281 = torch.operator "onnx.Reshape"(%274, %280) : (!torch.vtensor<[?,1280,1,1],f32>, !torch.vtensor<[2],si64>) -> !torch.vtensor<[?,?],f32>  loc("mobilenetv2.mlir":285:12)
    %282 = torch.operator "onnx.Gemm"(%281, %106, %105) {torch.onnx.alpha = 1.000000e+00 : f32, torch.onnx.beta = 1.000000e+00 : f32, torch.onnx.transB = 1 : si64} : (!torch.vtensor<[?,?],f32>, !torch.vtensor<[1000,1280],f32>, !torch.vtensor<[1000],f32>) -> !torch.vtensor<[?,1000],f32>  loc("mobilenetv2.mlir":286:12)
    return %282 : !torch.vtensor<[?,1000],f32> loc("mobilenetv2.mlir":287:5)
  } loc("mobilenetv2.mlir":2:3)
} loc("mobilenetv2.mlir":1:1)
